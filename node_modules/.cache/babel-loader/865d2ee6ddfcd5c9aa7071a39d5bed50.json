{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports['default'] = persistState;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _createSlicerJs = require('./createSlicer.js');\n\nvar _createSlicerJs2 = _interopRequireDefault(_createSlicerJs);\n\nvar _utilMergeStateJs = require('./util/mergeState.js');\n\nvar _utilMergeStateJs2 = _interopRequireDefault(_utilMergeStateJs);\n/**\n * @description\n * persistState is a Store Enhancer that syncs (a subset of) store state to localStorage.\n *\n * @param {String|String[]} [paths] Specify keys to sync with localStorage, if left undefined the whole store is persisted\n * @param {Object} [config] Optional config object\n * @param {String} [config.key=\"redux\"] String used as localStorage key\n * @param {Function} [config.slicer] (paths) => (state) => subset. A function that returns a subset\n * of store state that should be persisted to localStorage\n * @param {Function} [config.serialize=JSON.stringify] (subset) => serializedData. Called just before persisting to\n * localStorage. Should transform the subset into a format that can be stored.\n * @param {Function} [config.deserialize=JSON.parse] (persistedData) => subset. Called directly after retrieving\n * persistedState from localStorage. Should transform the data into the format expected by your application\n *\n * @return {Function} An enhanced store\n */\n\n\nfunction persistState(paths, config) {\n  var cfg = _extends({\n    key: 'redux',\n    merge: _utilMergeStateJs2['default'],\n    slicer: _createSlicerJs2['default'],\n    serialize: JSON.stringify,\n    deserialize: JSON.parse\n  }, config);\n\n  var key = cfg.key;\n  var merge = cfg.merge;\n  var slicer = cfg.slicer;\n  var serialize = cfg.serialize;\n  var deserialize = cfg.deserialize;\n  return function (next) {\n    return function (reducer, initialState, enhancer) {\n      if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n        enhancer = initialState;\n        initialState = undefined;\n      }\n\n      var persistedState = undefined;\n      var finalInitialState = undefined;\n\n      try {\n        persistedState = deserialize(localStorage.getItem(key));\n        finalInitialState = merge(initialState, persistedState);\n      } catch (e) {\n        console.warn('Failed to retrieve initialize state from localStorage:', e);\n      }\n\n      var store = next(reducer, finalInitialState, enhancer);\n      var slicerFn = slicer(paths);\n      store.subscribe(function () {\n        var state = store.getState();\n        var subset = slicerFn(state);\n\n        try {\n          localStorage.setItem(key, serialize(subset));\n        } catch (e) {\n          console.warn('Unable to persist state to localStorage:', e);\n        }\n      });\n      return store;\n    };\n  };\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/node_modules/redux-localstorage/lib/persistState.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","persistState","_interopRequireDefault","obj","__esModule","_createSlicerJs","require","_createSlicerJs2","_utilMergeStateJs","_utilMergeStateJs2","paths","config","cfg","merge","slicer","serialize","JSON","stringify","deserialize","parse","next","reducer","initialState","enhancer","undefined","persistedState","finalInitialState","localStorage","getItem","e","console","warn","store","slicerFn","subscribe","state","getState","subset","setItem","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports['default'] = persistState;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _createSlicerJs = require('./createSlicer.js');\n\nvar _createSlicerJs2 = _interopRequireDefault(_createSlicerJs);\n\nvar _utilMergeStateJs = require('./util/mergeState.js');\n\nvar _utilMergeStateJs2 = _interopRequireDefault(_utilMergeStateJs);\n\n/**\n * @description\n * persistState is a Store Enhancer that syncs (a subset of) store state to localStorage.\n *\n * @param {String|String[]} [paths] Specify keys to sync with localStorage, if left undefined the whole store is persisted\n * @param {Object} [config] Optional config object\n * @param {String} [config.key=\"redux\"] String used as localStorage key\n * @param {Function} [config.slicer] (paths) => (state) => subset. A function that returns a subset\n * of store state that should be persisted to localStorage\n * @param {Function} [config.serialize=JSON.stringify] (subset) => serializedData. Called just before persisting to\n * localStorage. Should transform the subset into a format that can be stored.\n * @param {Function} [config.deserialize=JSON.parse] (persistedData) => subset. Called directly after retrieving\n * persistedState from localStorage. Should transform the data into the format expected by your application\n *\n * @return {Function} An enhanced store\n */\n\nfunction persistState(paths, config) {\n  var cfg = _extends({\n    key: 'redux',\n    merge: _utilMergeStateJs2['default'],\n    slicer: _createSlicerJs2['default'],\n    serialize: JSON.stringify,\n    deserialize: JSON.parse\n  }, config);\n\n  var key = cfg.key;\n  var merge = cfg.merge;\n  var slicer = cfg.slicer;\n  var serialize = cfg.serialize;\n  var deserialize = cfg.deserialize;\n\n  return function (next) {\n    return function (reducer, initialState, enhancer) {\n      if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n        enhancer = initialState;\n        initialState = undefined;\n      }\n\n      var persistedState = undefined;\n      var finalInitialState = undefined;\n\n      try {\n        persistedState = deserialize(localStorage.getItem(key));\n        finalInitialState = merge(initialState, persistedState);\n      } catch (e) {\n        console.warn('Failed to retrieve initialize state from localStorage:', e);\n      }\n\n      var store = next(reducer, finalInitialState, enhancer);\n      var slicerFn = slicer(paths);\n\n      store.subscribe(function () {\n        var state = store.getState();\n        var subset = slicerFn(state);\n\n        try {\n          localStorage.setItem(key, serialize(subset));\n        } catch (e) {\n          console.warn('Unable to persist state to localStorage:', e);\n        }\n      });\n\n      return store;\n    };\n  };\n}\n\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}