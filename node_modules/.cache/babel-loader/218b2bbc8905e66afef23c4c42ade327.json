{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getUser } from \"../actions/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Read = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const actionData = useSelector(state => state.action);\n  console.log(actionData);\n  useEffect(() => {\n    dispatch(getUser());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"s\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Read, \"VNWO3rCboT7DKDqPIOMQWpLRKCI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Read;\nexport default Read; // import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { getUser } from \"../actions/authActions\";\n// import PropTypes from \"prop-types\";\n// class Read extends React.Component {\n//   componentDidMount() {\n//     this.props.getUser()\n//   }\n//   render() {\n//     const { user } = this.props;\n//     console.log(user)\n//     return (\n//       <ul>\n//         {user.map(user =>\n//           <li key={user.id}>{user.name}</li>\n//         )}\n//       </ul>\n//     );\n//   }\n// }\n// Read.propTypes = {\n// \tgetUser: PropTypes.object.isRequired,\n// \tuser: PropTypes.bool,\n// };\n// const mapStateToProps = ({\n//     token, errors\n//   }) => ({\n//     token,\n//     errors\n//   });\n// const mapDispatchToProps = dispatch => ({   \n//     getUser: dispatch(getUser())\n//   })\n// export default connect(mapStateToProps, mapDispatchToProps)(Read);\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx"],"names":["React","useEffect","useSelector","useDispatch","getUser","Read","props","dispatch","actionData","state","action","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,wBAAxB;;;AAIA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEpB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAIA,QAAMK,UAAU,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAA9B;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ,CAACH,OAAO,EAAR,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAGH,CAlBD;;GAAMC,I;UAEeF,W,EAIED,W;;;KANjBG,I;AAoBN,eAAeA,IAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getUser } from \"../actions/authActions\";\n\n\n\nconst Read = (props) => {\n\n    const dispatch = useDispatch();\n\n\n\n    const actionData = useSelector(state => state.action);\n\n   \n\n    console.log(actionData);\n\n    useEffect(() => {\n        dispatch(getUser());\n    }, []);\n    return (\n       <div>s</div>\n    )\n}\n\nexport default Read;\n\n\n// import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { getUser } from \"../actions/authActions\";\n// import PropTypes from \"prop-types\";\n// class Read extends React.Component {\n//   componentDidMount() {\n//     this.props.getUser()\n//   }\n\n//   render() {\n//     const { user } = this.props;\n//     console.log(user)\n\n//     return (\n//       <ul>\n//         {user.map(user =>\n//           <li key={user.id}>{user.name}</li>\n//         )}\n//       </ul>\n//     );\n//   }\n// }\n// Read.propTypes = {\n// \tgetUser: PropTypes.object.isRequired,\n// \tuser: PropTypes.bool,\n// };\n// const mapStateToProps = ({\n//     token, errors\n//   }) => ({\n//     token,\n//     errors\n//   });\n// const mapDispatchToProps = dispatch => ({   \n//     getUser: dispatch(getUser())\n//   })\n// export default connect(mapStateToProps, mapDispatchToProps)(Read);"]},"metadata":{},"sourceType":"module"}