{"ast":null,"code":"import { LOAD_USERS_ERROR, LOAD_USERS_LOADING, LOAD_USERS_SUCCESS } from \"../actions/userss\";\nconst initialState = {\n  data: [],\n  loading: false,\n  error: ''\n};\nexport default function reduxThunkReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_USERS_LOADING:\n      {\n        return { ...state,\n          loading: true,\n          error: ''\n        };\n      }\n\n    case LOAD_USERS_SUCCESS:\n      {\n        return { ...state,\n          data: action.data,\n          loading: false\n        };\n      }\n\n    case LOAD_USERS_ERROR:\n      {\n        return { ...state,\n          loading: false,\n          error: action.error\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/reducers/user.js"],"names":["LOAD_USERS_ERROR","LOAD_USERS_LOADING","LOAD_USERS_SUCCESS","initialState","data","loading","error","reduxThunkReducer","state","action","type"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,kBAA1B,EAA8CC,kBAA9C,QAAuE,mBAAvE;AAEA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,IAAI,EAAE,EADY;AAElBC,EAAAA,OAAO,EAAE,KAFS;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAArB;AAMA,eAAe,SAASC,iBAAT,GAAyD;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,kBAAL;AAAyB;AACrB,eAAO,EACH,GAAGO,KADA;AAEHH,UAAAA,OAAO,EAAE,IAFN;AAGHC,UAAAA,KAAK,EAAC;AAHH,SAAP;AAKH;;AACD,SAAKJ,kBAAL;AAAyB;AACrB,eAAO,EACH,GAAGM,KADA;AAEHJ,UAAAA,IAAI,EAAEK,MAAM,CAACL,IAFV;AAGHC,UAAAA,OAAO,EAAE;AAHN,SAAP;AAKH;;AACD,SAAKL,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGQ,KADA;AAEHH,UAAAA,OAAO,EAAE,KAFN;AAGHC,UAAAA,KAAK,EAAEG,MAAM,CAACH;AAHX,SAAP;AAKH;;AACD;AAAS;AACL,eAAOE,KAAP;AACH;AAxBL;AA0BF","sourcesContent":["import {LOAD_USERS_ERROR, LOAD_USERS_LOADING, LOAD_USERS_SUCCESS} from \"../actions/userss\";\n\nconst initialState = {\n   data: [],\n   loading: false,\n   error: ''\n};\n\nexport default function reduxThunkReducer(state = initialState, action) {\n   switch (action.type) {\n       case LOAD_USERS_LOADING: {\n           return {\n               ...state,\n               loading: true,\n               error:''\n           };\n       }\n       case LOAD_USERS_SUCCESS: {\n           return {\n               ...state,\n               data: action.data,\n               loading: false\n           }\n       }\n       case LOAD_USERS_ERROR: {\n           return {\n               ...state,\n               loading: false,\n               error: action.error\n           };\n       }\n       default: {\n           return state;\n       }\n   }\n}"]},"metadata":{},"sourceType":"module"}