{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/App.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import \"./App.css\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import Navbar from \"./components/layout/Navbar\";\n// import Landing from \"./components/layout/Landing\";\n// import Login from \"./components/auth/Login\";\n// import Register from \"./components/auth/Register\";\n// import PrivateRoute from \"./routing/PrivateRoute\";\n// import NotFound from \"./components/NotFound\";\n// import Dashboard from \"./components/Dashboard\";\n// // import setAuthToken from \"./utils/setAuthToken\";\n// // import store from \"./store\";\n// // import { loadUser } from \"./actions/auth\";\n// // if (localStorage.token) {\n// // \tsetAuthToken(localStorage.token);\n// // }\n// function App() {\n// \treturn (\n// \t\t<>\n// \t\t\t<div className=\"App\">\n// \t\t\t\t<Router>\n// \t\t\t\t\t<Navbar />\n// \t\t\t\t\t<Switch>\n// \t\t\t\t\t\t<Route exact path=\"/\" component={Landing} />\n// \t\t\t\t\t\t<PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n// \t\t\t\t\t\t<Route exact path=\"/register\" component={Register} />\n// \t\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\n// \t\t\t\t\t\t<Route exact path=\"\" component={NotFound} />\n// \t\t\t\t\t</Switch>\n// \t\t\t\t</Router>\n// \t\t\t</div>\n// \t\t</>\n// \t);\n// }\n// export default App;\n// // import React, { Component } from 'react';\n// // import { Route, BrowserRouter, Switch} from 'react-router-dom'\n// // import Login from './Login'\n// // import Signup from './Signup'\n// // import Login from \"./components/auth/Login\";\n// // import Register from \"./components/auth/Register\";\n// // // import Welcome from './Welcome'\n// //  import PrivateRoute from \"./routing/PrivateRoute\";\n// //  import Dashboard from \"./components/Dashboard\";\n// //  import Navbar from \"./components/layout/Navbar\";\n// // //    import Landing from \"./components/layout/Landing\";\n// // export default class App extends Component {\n// //   render() {\n// //     return(\n// //         <BrowserRouter>\n// //           <div>\n// //             <Switch>\n// // \t\t\t<Route exact path=\"/\" component={Navbar} />\n// //               <Route path='/login' component={Login} />\n// //               <Route path='/signup' component={Register} />\n// // \t\t\t  <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n// //               {/* <Route path='/welcome' component={Welcome} /> */}\n// //               <Route render={() => <h3>No Match</h3>} />\n// //             </Switch>\n// //           </div>\n// //         </BrowserRouter>)\n// //   }\n// // }\n// // import React, { Component } from 'react';\n// // import { connect} from 'react-redux';\n// // import { Route, BrowserRouter, Switch, Redirect} from 'react-router-dom'\n// //  import Login from \"./components/auth/Login\";\n// //  import Register from \"./components/auth/Register\";\n// //  import Dashboard from \"./components/Dashboard\";\n// //  import Navbar from \"./components/layout/Navbar\";\n// //  import PropTypes from \"prop-types\";\n// // import requireAuth from 'components/requireAuth';\n// // function PrivateRoute ({ component: Component, isAuthenticated, ...rest }) {\n// //   return (\n// //     <Route\n// //       {...rest}\n// //       render={(props) => isAuthenticated === true\n// //         ? <Component {...props} />\n// //         : <Redirect to={{ pathname: '/login', state: { from: props.location }}} />}\n// //     />\n// //   )\n// // }\n// // PrivateRoute.propTypes = {\n// // \tcomponent: PropTypes.func.isRequired,\n// // \t// isAuthenticated: PropTypes.func.isRequired,\n// // \tlocation: PropTypes.shape({\n// // \t\tpathname: PropTypes.string.isRequired,\n// // \t  }),\n// // \t  isAuthenticated: PropTypes.shape({\n// // \t\tpathname: PropTypes.bool.isRequired,\n// // \t  }),\n// // };\n// // // for login/signup\n// // function PublicRoute ({component: Component, isAuthenticated, ...rest}) {\n// //   return (\n// //     <Route\n// //       {...rest}\n// //       render={(props) => isAuthenticated === false\n// //         ? <Component {...props} />\n// //         : <Redirect to='/dashboard' />}\n// //     />\n// //   )\n// // }\n// // PublicRoute.propTypes = {\n// // \t// auth: PropTypes.object.isRequired,\n// // \tcomponent: PropTypes.func.isRequired,\n// // \tisAuthenticated: PropTypes.bool.isRequired,\n// // \t// location: PropTypes.object.isRequired\n// // };\n// // class App extends Component {\n// //   render(){\n// //     return(\n// //         <BrowserRouter>\n// //           <div>\n// //             <Navbar/>\n// //             <Switch>\n// //                 <PublicRoute isAuthenticated={this.props.isAuthenticated} path='/login' component={Login} />\n// //                 <PublicRoute isAuthenticated={this.props.isAuthenticated} path='/register' component={Register} />\n// //                 <PrivateRoute isAuthenticated={this.props.isAuthenticated} path='/dashboard' component={requireAuth(Dashboard)} />\n// //                 <Route render={() => <h3>Not Found 404</h3>} />\n// //             </Switch>\n// //           </div>\n// //         </BrowserRouter>)\n// //   }\n// // }\n// // PublicRoute.propTypes = {\n// // \t// auth: PropTypes.object.isRequired,\n// // \tcomponent: PropTypes.object.isRequired,\n// // };\n// // App.propTypes = {\n// // \t// auth: PropTypes.object.isRequired,\n// // \t// component: PropTypes.object.isRequired,\n// // \tisAuthenticated: PropTypes.bool.isRequired,\n// // \t// location: PropTypes.object.isRequired\n// // };\n// // function mapStateToProps(state){\n// //     return {\n// //         isAuthenticated: state.isAuthenticated\n// //     }\n// // }\n// // export default connect(mapStateToProps)(App)\n// import React, { Component } from 'react';\n// import { Router, Route } from 'react-router-dom';\n// import {Login} from './components/auth/Login';\n// import { Register } from './components/auth/Register';\n// import {Home} from './components/Home/Home';\n//  import { history } from './helpers/history';\n// // import { PrivateRoute } from './components/PrivateRoute'\n// import { connect } from 'react-redux';\n// // import { alertActions } from './actions';\n// import './App.css';\n// // import PropTypes from \"prop-types\";\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     history.listen((location, action) => {\n//         // clear alert on location change\n//         // this.props.clearAlerts();\n//     });\n//   }\n//   render() {\n//     // const { alert } = this.props;\n//     return (\n//       <div>\n//          {/* {alert.message &&\n//             <div className={`alert ${alert.type}`}>{alert.message}</div>\n//           } */}\n//         <Router history={history}>\n//             <div>\n//             <Route exact path=\"/dashboard\" component={Home} />\n//             <Route path=\"/login\" component={Login} />\n//             <Route path=\"/register\" component={Register} />\n//             </div>\n//         </Router>\n//       </div>\n//     );\n//   }\n// }\n// // App.propTypes = {\n// // \tclearAlerts: PropTypes.object.isRequired,\n// // \talert: PropTypes.object.isRequired,\n// // \t//  \tisAuthenticated: PropTypes.bool.isRequired,\n// // \t//  location: PropTypes.object.isRequired\n// // \t };\n// // function mapState(state) {\n// //   const { alert } = state;\n// //   return { alert };\n// // }\n// // const actionCreators = {\n// //   clearAlerts: alertActions.clear\n// // };\n// const connectedApp = connect()(App);\n// export { connectedApp as App };\n// // export default App;\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport { loadUser } from \"./actions/authActions\"; //   import { signIn } from \"./actions/authActions\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PrivateRoute from \"./routing/PrivateRoute\"; //  import NotFound from \"./components/NotFound\";\n\nimport Dashboard from \"./components/Dashboard\";\nimport { interceptor } from \"./utils/interceptor\"; //  import auth from './auth/authenticator';\n//  import UsersPage from './components/users/UsersPage';\n// import UserPage from './components/users/UserPage';\n// import NewUserPage from './components/users/NewUserPage';\n// import Listing from \"components/Listing\";\n// import Read from \"./pages/Read\";\n// import Create from \"./pages/Create\";\n// import Update from \"./pages/Update\";\n// import setAuthToken from \"./utils/setAuthToken\";\n// import store from \"./store\";\n// import { loadUser } from \"./actions/auth\";\n// if (localStorage.token) {\n// \tsetAuthToken(localStorage.token);\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const requireAuth = (nextState, replace) => {\n  // \tif (!auth.loggedIn()) {\n  // \t\treplace({\n  // \t\t\tpathname: '/login',\n  // \t\t\tstate: { \n  // \t\t\t\tnextPathname: nextState.location.pathname\n  // \t\t\t}\n  // \t\t});\n  // \t}\n  // };\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const refreshToken = {\n    refreshToken: localStorage.getItem(\"refreshToken\")\n  };\n  useEffect(() => {\n    isLoggedIn && dispatch(loadUser(refreshToken)); //  isLoggedIn && dispatch(signIn);\n  }, []);\n  interceptor();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(PrivateRoute, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 30\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/dashboard\",\n              element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/about\",\n              element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: Register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"\",\n            element: Landing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"1UeP8vQEPN1o+Z4PF2Q18e5AyvA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/App.js"],"names":["React","useEffect","BrowserRouter","Router","Switch","Route","Navbar","Landing","Login","Register","loadUser","useDispatch","useSelector","PrivateRoute","Dashboard","interceptor","App","dispatch","isLoggedIn","state","auth","refreshToken","localStorage","getItem"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACC,OAAOC,MAAP,MAAmB,4BAAnB;AACD,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACC,SAASC,QAAT,QAAyB,uBAAzB,C,CACD;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACC,OAAOC,YAAP,MAAyB,wBAAzB,C,CACD;;AACC,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B,C,CAED;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACC,QAAMO,UAAU,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,UAAvB,CAA9B;AAED,QAAMG,YAAY,GAAG;AACnBA,IAAAA,YAAY,EAAEC,YAAY,CAACC,OAAb,CAAqB,cAArB;AADK,GAArB;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACXiB,IAAAA,UAAU,IAAID,QAAQ,CAACP,QAAQ,CAACW,YAAD,CAAT,CAAtB,CADW,CAEjB;AACE,GAHQ,EAGN,EAHM,CAAT;AAIAN,EAAAA,WAAW;AACZ,sBACC;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACC,QAAC,MAAD;AAAA,gCACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,MAAD;AAAA,kCACD,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,OAAO,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBAAzB;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,YAAZ;AAAyB,cAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,eAKD,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,kBALC,eAMJ,QAAC,KAAD;AAAQ,YAAA,IAAI,EAAC,WAAb;AAAyB,YAAA,OAAO,EAAEN;AAAlC;AAAA;AAAA;AAAA;AAAA,kBANI,eAQJ,QAAC,KAAD;AAAQ,YAAA,IAAI,EAAC,EAAb;AAAgB,YAAA,OAAO,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA,kBARI;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAqCA;;GA9DQS,G;UAaUL,W,EACGC,W;;;KAdbI,G;AAgET,eAAeA,GAAf","sourcesContent":["// import React from \"react\";\n// import \"./App.css\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import Navbar from \"./components/layout/Navbar\";\n// import Landing from \"./components/layout/Landing\";\n// import Login from \"./components/auth/Login\";\n// import Register from \"./components/auth/Register\";\n// import PrivateRoute from \"./routing/PrivateRoute\";\n// import NotFound from \"./components/NotFound\";\n// import Dashboard from \"./components/Dashboard\";\n// // import setAuthToken from \"./utils/setAuthToken\";\n// // import store from \"./store\";\n// // import { loadUser } from \"./actions/auth\";\n// // if (localStorage.token) {\n// // \tsetAuthToken(localStorage.token);\n// // }\n\n// function App() {\n// \treturn (\n// \t\t<>\n// \t\t\t<div className=\"App\">\n// \t\t\t\t<Router>\n// \t\t\t\t\t<Navbar />\n// \t\t\t\t\t<Switch>\n// \t\t\t\t\t\t<Route exact path=\"/\" component={Landing} />\n// \t\t\t\t\t\t<PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n// \t\t\t\t\t\t<Route exact path=\"/register\" component={Register} />\n// \t\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\n// \t\t\t\t\t\t<Route exact path=\"\" component={NotFound} />\n\t\t\t\t\t\t\n// \t\t\t\t\t</Switch>\n// \t\t\t\t</Router>\n// \t\t\t</div>\n// \t\t</>\n// \t);\n// }\n// export default App;\n\n\n\n// // import React, { Component } from 'react';\n// // import { Route, BrowserRouter, Switch} from 'react-router-dom'\n// // import Login from './Login'\n// // import Signup from './Signup'\n\n// // import Login from \"./components/auth/Login\";\n// // import Register from \"./components/auth/Register\";\n\n// // // import Welcome from './Welcome'\n// //  import PrivateRoute from \"./routing/PrivateRoute\";\n// //  import Dashboard from \"./components/Dashboard\";\n// //  import Navbar from \"./components/layout/Navbar\";\n// // //    import Landing from \"./components/layout/Landing\";\n// // export default class App extends Component {\n// //   render() {\n// //     return(\n// //         <BrowserRouter>\n// //           <div>\n// //             <Switch>\n// // \t\t\t<Route exact path=\"/\" component={Navbar} />\n// //               <Route path='/login' component={Login} />\n// //               <Route path='/signup' component={Register} />\n// // \t\t\t  <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n\t\t\t \n// //               {/* <Route path='/welcome' component={Welcome} /> */}\n// //               <Route render={() => <h3>No Match</h3>} />\n// //             </Switch>\n// //           </div>\n// //         </BrowserRouter>)\n// //   }\n// // }\n\n\n// // import React, { Component } from 'react';\n// // import { connect} from 'react-redux';\n// // import { Route, BrowserRouter, Switch, Redirect} from 'react-router-dom'\n// //  import Login from \"./components/auth/Login\";\n// //  import Register from \"./components/auth/Register\";\n// //  import Dashboard from \"./components/Dashboard\";\n// //  import Navbar from \"./components/layout/Navbar\";\n// //  import PropTypes from \"prop-types\";\n// // import requireAuth from 'components/requireAuth';\n \n// // function PrivateRoute ({ component: Component, isAuthenticated, ...rest }) {\n// //   return (\n// //     <Route\n// //       {...rest}\n// //       render={(props) => isAuthenticated === true\n// //         ? <Component {...props} />\n// //         : <Redirect to={{ pathname: '/login', state: { from: props.location }}} />}\n// //     />\n// //   )\n// // }\n// // PrivateRoute.propTypes = {\n\n// // \tcomponent: PropTypes.func.isRequired,\n// // \t// isAuthenticated: PropTypes.func.isRequired,\n// // \tlocation: PropTypes.shape({\n// // \t\tpathname: PropTypes.string.isRequired,\n// // \t  }),\n// // \t  isAuthenticated: PropTypes.shape({\n// // \t\tpathname: PropTypes.bool.isRequired,\n// // \t  }),\n// // };\n// // // for login/signup\n// // function PublicRoute ({component: Component, isAuthenticated, ...rest}) {\n// //   return (\n// //     <Route\n// //       {...rest}\n// //       render={(props) => isAuthenticated === false\n// //         ? <Component {...props} />\n// //         : <Redirect to='/dashboard' />}\n// //     />\n// //   )\n// // }\n// // PublicRoute.propTypes = {\n// // \t// auth: PropTypes.object.isRequired,\n// // \tcomponent: PropTypes.func.isRequired,\n// // \tisAuthenticated: PropTypes.bool.isRequired,\n// // \t// location: PropTypes.object.isRequired\n// // };\n// // class App extends Component {\n// //   render(){\n// //     return(\n// //         <BrowserRouter>\n// //           <div>\n// //             <Navbar/>\n// //             <Switch>\n// //                 <PublicRoute isAuthenticated={this.props.isAuthenticated} path='/login' component={Login} />\n// //                 <PublicRoute isAuthenticated={this.props.isAuthenticated} path='/register' component={Register} />\n// //                 <PrivateRoute isAuthenticated={this.props.isAuthenticated} path='/dashboard' component={requireAuth(Dashboard)} />\n// //                 <Route render={() => <h3>Not Found 404</h3>} />\n// //             </Switch>\n// //           </div>\n// //         </BrowserRouter>)\n// //   }\n// // }\n// // PublicRoute.propTypes = {\n// // \t// auth: PropTypes.object.isRequired,\n// // \tcomponent: PropTypes.object.isRequired,\n// // };\n// // App.propTypes = {\n// // \t// auth: PropTypes.object.isRequired,\n// // \t// component: PropTypes.object.isRequired,\n// // \tisAuthenticated: PropTypes.bool.isRequired,\n// // \t// location: PropTypes.object.isRequired\n// // };\n// // function mapStateToProps(state){\n// //     return {\n// //         isAuthenticated: state.isAuthenticated\n// //     }\n// // }\n\n// // export default connect(mapStateToProps)(App)\n\n\n\n\n\n\n// import React, { Component } from 'react';\n// import { Router, Route } from 'react-router-dom';\n\n// import {Login} from './components/auth/Login';\n// import { Register } from './components/auth/Register';\n// import {Home} from './components/Home/Home';\n\n//  import { history } from './helpers/history';\n// // import { PrivateRoute } from './components/PrivateRoute'\n// import { connect } from 'react-redux';\n// // import { alertActions } from './actions';\n// import './App.css';\n// // import PropTypes from \"prop-types\";\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     history.listen((location, action) => {\n//         // clear alert on location change\n//         // this.props.clearAlerts();\n//     });\n//   }\n\n//   render() {\n//     // const { alert } = this.props;\n//     return (\n//       <div>\n//          {/* {alert.message &&\n//             <div className={`alert ${alert.type}`}>{alert.message}</div>\n//           } */}\n\t\t  \n//         <Router history={history}>\n//             <div>\n\t\t\t\t\n//             <Route exact path=\"/dashboard\" component={Home} />\n//             <Route path=\"/login\" component={Login} />\n//             <Route path=\"/register\" component={Register} />\n//             </div>\n//         </Router>\n//       </div>\n//     );\n//   }\n// }\n// // App.propTypes = {\n// // \tclearAlerts: PropTypes.object.isRequired,\n// // \talert: PropTypes.object.isRequired,\n// // \t//  \tisAuthenticated: PropTypes.bool.isRequired,\n// // \t//  location: PropTypes.object.isRequired\n// // \t };\n\n// // function mapState(state) {\n// //   const { alert } = state;\n// //   return { alert };\n// // }\n\n// // const actionCreators = {\n// //   clearAlerts: alertActions.clear\n// // };\n\n// const connectedApp = connect()(App);\n// export { connectedApp as App };\n// // export default App;\n\n\n\nimport React, {useEffect} from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n import Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\n import { loadUser } from \"./actions/authActions\";\n//   import { signIn } from \"./actions/authActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n import PrivateRoute from \"./routing/PrivateRoute\";\n//  import NotFound from \"./components/NotFound\";\n import Dashboard from \"./components/Dashboard\";\n import { interceptor } from \"./utils/interceptor\";\n\n//  import auth from './auth/authenticator';\n//  import UsersPage from './components/users/UsersPage';\n// import UserPage from './components/users/UserPage';\n// import NewUserPage from './components/users/NewUserPage';\n\n// import Listing from \"components/Listing\";\n\n// import Read from \"./pages/Read\";\n// import Create from \"./pages/Create\";\n// import Update from \"./pages/Update\";\n\n// import setAuthToken from \"./utils/setAuthToken\";\n// import store from \"./store\";\n// import { loadUser } from \"./actions/auth\";\n\n// if (localStorage.token) {\n// \tsetAuthToken(localStorage.token);\n// }\n\nfunction App() {\n\n\t// const requireAuth = (nextState, replace) => {\n\t// \tif (!auth.loggedIn()) {\n\t// \t\treplace({\n\t// \t\t\tpathname: '/login',\n\t// \t\t\tstate: { \n\t// \t\t\t\tnextPathname: nextState.location.pathname\n\t// \t\t\t}\n\t// \t\t});\n\t// \t}\n\t// };\n\t\n  const dispatch = useDispatch();\n   const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n\n  const refreshToken = {\n    refreshToken: localStorage.getItem(\"refreshToken\"),\n  };\n\n  useEffect(() => {\n       isLoggedIn && dispatch(loadUser(refreshToken));\n\t//  isLoggedIn && dispatch(signIn);\n  }, []);\n  interceptor();\n\treturn (\n\t\t<>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Router>\n\t\t\t\t <Navbar />\n\t\t\t\t <Routes>\n    <Route path=\"/\" element={<PrivateRoute />} >\n      <Route path=\"/dashboard\" element={<Dashboard />} />\n      <Route path=\"/about\" element={<About />} />\n    </Route>\n    <Route path=\"/login\" element={<Login />} />\n\t<Route  path=\"/register\" element={Register} />\n \n\t<Route  path=\"\" element={Landing} /> \n  </Routes>\n\t\t\t\t\t{/* <Switch>\n\t\t\t\t\t\t <Route exact path=\"/\" component={Landing} /> \n\t\t\t\t\t\t \n\t\t\t\t\t\t <PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\n             {/* <PrivateRoute exact path=\"/dashboard/listing\" component={Listing} /> */}\n\t\t\t\t\t\n\t\t\t\t\t\t{/* <Route exact path=\"/register\" component={Register} />\n\t\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t\t\t <Route exact path=\"\" component={NotFound} /> \n\t\t\t\t\t\t <Route path=\"/users\" component={UsersPage} onEnter={requireAuth}>\n\t\t\t<Route path=\"/users/new\" component={NewUserPage} />\n\t\t\t<Route path=\"/users/:id\" component={UserPage} />\n\t\t</Route> */}\n\n\t\t\t\t\t\t {/* <Route path=\"/\" exact component={Read} />\n        <Route path=\"/create\" exact component={Create} />\n        <Route path=\"/update/:id\" exact component={Update} /> */}\n\t\t\t\t\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}