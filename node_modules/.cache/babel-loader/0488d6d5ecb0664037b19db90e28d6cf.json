{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/JargonList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addFavoriteTerm, removeFavoriteTerm } from '../actions/user';\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    terms: state.terms,\n    favorites: state.favorites\n  };\n};\n\nclass JargonList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showFavorites: false\n    };\n  }\n\n  toggleFavorites() {\n    this.setState({\n      showFavorites: true\n    });\n  }\n\n  toggleJargon() {\n    this.setState({\n      showFavorites: false\n    });\n  }\n\n  render() {\n    if (this.state.showFavorites) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"JS Jargon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.toggleJargon();\n            },\n            children: \" Show Jargon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [this.props.favorites.map((term, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [\" \", term.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", term.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", term.role]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.props.dispatch(removeFavoriteTerm(term.name)),\n                children: \"Remove from favorites\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this);\n          }), \"                \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"JS Jargon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.toggleFavorites();\n          },\n          children: \" Show Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), this.props.terms.map((term, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" \", term.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", term.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", term.role]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.props.dispatch(addFavoriteTerm({\n              name: term.name,\n              email: term.email,\n              role: term.role\n            })),\n            children: \"Add to favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nJargonList.propTypes = {\n  favorites: PropTypes.object.isRequired,\n  dispatch: PropTypes.object.isRequired,\n  terms: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, null)(JargonList);","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/JargonList.js"],"names":["React","connect","addFavoriteTerm","removeFavoriteTerm","PropTypes","mapStateToProps","state","terms","favorites","JargonList","Component","showFavorites","toggleFavorites","setState","toggleJargon","render","props","map","term","index","name","email","role","dispatch","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { addFavoriteTerm, removeFavoriteTerm } from '../actions/user';\nimport PropTypes from \"prop-types\";\nconst mapStateToProps = state => {\n    return {\n        terms: state.terms,\n        favorites: state.favorites\n    };\n};\n\n\nclass JargonList extends React.Component {\n\n    state = {\n        showFavorites: false\n    }\n\n\n    toggleFavorites() {\n        this.setState({ showFavorites: true });\n    }\n    \n    toggleJargon() {\n        this.setState({ showFavorites: false });\n    }\n\n    render() {\n        if (this.state.showFavorites) {\n\n            return (\n                <div>\n                    <h1>\n                        JS Jargon\n                </h1>\n                    <div>\n                        <button onClick={() => { this.toggleJargon() }} > Show Jargon</button>\n                    </div>\n                    <div>\n                        {this.props.favorites.map((term, index) => {\n                            return (\n                                <div key={index}>\n                                    <h1> {term.name}</h1>\n                                    <p> {term.email}</p>\n                                    <p> {term.role}</p>\n                                    <button onClick={() => this.props.dispatch(removeFavoriteTerm(term.name))}>\n                                        Remove from favorites\n                        </button>\n\n                                </div>\n                            );\n                        })}                </div>\n                </div>\n            )\n        }\n        else\n            return (\n                <div>\n                    <h1>\n                        JS Jargon\n                </h1>\n                    <div>\n                        <button onClick={() => { this.toggleFavorites() }} > Show Favorites</button>\n                    </div>\n                    {this.props.terms.map((term, index) => {\n                        return (\n                            <div key={index} >\n                                <h1> {term.name} </h1>\n                                <p> {term.email}</p>\n                                <p> {term.role}</p>\n                                <button onClick={() => this.props.dispatch(addFavoriteTerm({ name: term.name, email: term.email, role: term.role }))}>\n                                    Add to favorites\n                        </button>\n\n\n                            </div>\n                        );\n                    })}\n\n                </div>\n            )\n    }\n}\nJargonList.propTypes = {\n\tfavorites: PropTypes.object.isRequired,\n    dispatch: PropTypes.object.isRequired,\n    terms: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, null)(JargonList);"]},"metadata":{},"sourceType":"module"}