{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/auth/Register.js\";\n// // import React, { useState } from \"react\";\n// // import { connect } from \"react-redux\";\n// // import { Link, Redirect  } from \"react-router-dom\";\n// // import { register } from \"../../actions/auth\";\n// // import PropTypes from \"prop-types\";\n// // import Alert from \"../layout/Alert\";\n// // const Register = ({ register, isAuthenticated }) => {\n// // \tconst [error, setError] = useState(null);\n// // \t// const history = useHistory();\n// // \t// const historyToContacts = () => {\n// // \t//   // 👇️ navigate to /contacts\n// // \t//   history.push('/login');\n// // \t// };\n// // \tconst [formData, setFormData] = useState({\n// // \t\tname: \"\",\n// // \t\temail: \"\",\n// // \t\tpassword: \"\",\n// // \t});\n// // \tconst validateEmail = (email) => {\n// // \t\tconst re =\n// // \t\t  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n// // \t\treturn re.test(String(email).toLowerCase());\n// // \t  };\n// // \tconst { name, email, password} = formData;\n// // \tconst onChange = (e) =>\n// // \t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n// // \tconst onSubmit = async (e) => {\n// // \t\tconsole.log(\"Form data\", e);\n// // \t\te.preventDefault();\n// // \t\tif (formData.name.length < 12) {\n// // \t\t\tsetError('Name  must be at least 12 chars long');\n// // \t\t  }\n// // \t\tif (!validateEmail(formData.email)) {\n// // \t\t\tsetError('Invalid Email');\n// // \t\t  }\n// // \t\t  if (formData.password.length < 8) {\n// // \t\t\tsetError('Password must be at least 8 chars long');\n// // \t\t  }\n// // \t\t  if (!error) {\n// // \t\t\t// No errors.\n// // \t\t  }\n// // \t\t\tregister({ name, email, password });\n// // \t};\n// // \t// Redirect if logged in\n// // \t if (isAuthenticated) {\n// // \t \treturn <Redirect to=\"/login\" />;\n// // \t }\n// // \treturn (\n// // \t\t<div className=\"register-form\">\n// // \t\t\t<h1 className=\"heading\">Sign Up</h1>\n// // \t\t\t<p className=\"lead\">\n// // \t\t\t\t<i className=\"fas fa-user\"></i> Create Your Account\n// // \t\t\t</p>\n// // \t\t\t<Alert />\n// // \t\t\t<br />\n// // \t\t\t{error && <div style={{ color: 'red' }}>{error}</div>}\n// // \t\t\t<form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n// // \t\t\t\t<div className=\"form-group\">\n// // \t\t\t\t\t<input\n// // \t\t\t\t\t\ttype=\"text\"\n// // \t\t\t\t\t\tplaceholder=\"Name\"\n// // \t\t\t\t\t\tname=\"name\"\n// // \t\t\t\t\t\tvalue={name}\n// // \t\t\t\t\t\tonChange={(e) => onChange(e)}\n// // \t\t\t\t\t/>\n// // \t\t\t\t</div>\n// // \t\t\t\t<div className=\"form-group\">\n// // \t\t\t\t\t<input\n// // \t\t\t\t\t\ttype=\"email\"\n// // \t\t\t\t\t\tplaceholder=\"Email Address\"\n// // \t\t\t\t\t\tname=\"email\"\n// // \t\t\t\t\t\tvalue={email}\n// // \t\t\t\t\t\tonChange={(e) => onChange(e)}\n// // \t\t\t\t\t/>\n// // \t\t\t\t</div>\n// // \t\t\t\t<div className=\"form-group\">\n// // \t\t\t\t\t<input\n// // \t\t\t\t\t\ttype=\"password\"\n// // \t\t\t\t\t\tplaceholder=\"Password\"\n// // \t\t\t\t\t\tname=\"password\"\n// // \t\t\t\t\t\tminLength=\"6\"\n// // \t\t\t\t\t\tvalue={password}\n// // \t\t\t\t\t\tonChange={(e) => onChange(e)}\n// // \t\t\t\t\t/>\n// // \t\t\t\t</div>\n// // \t\t\t\t<input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n// // \t\t\t</form>\n// // \t\t\t<p className=\"link\">\n// // \t\t\t\tAlready have an account? <Link to=\"/login\">Sign In</Link>\n// // \t\t\t</p>\n// // \t\t</div>\n// // \t);\n// // };\n// // Register.propTypes = {\n// // \tsetAlert: PropTypes.func.isRequired,\n// // \tregister: PropTypes.func.isRequired,\n// // \tisAuthenticated: PropTypes.bool,\n// // };\n// // const mapStateToProps = (state) => ({\n// // \tisAuthenticated: state.auth.isAuthenticated,\n// // });\n// // export default connect(mapStateToProps, {  register})(Register);\n// // import React, { Component } from 'react';\n// // import PropTypes from 'prop-types';\n// // import { connect } from 'react-redux';\n// // import { register } from '../../actions/auth';\n// // import { withRouter } from 'react-router-dom';\n// // class Register extends Component {\n// //   // pretty standard\n// //   constructor(props) {\n// //     super(props);\n// //     this.state = {\n// // \t\tname: '',\n// //       email: '',\n// //       password: ''\n// //     };\n// //     this.onChange = this.onChange.bind(this);\n// //     this.onSubmit = this.onSubmit.bind(this);\n// //   }\n// //   onChange(e) {\n// //     // change a key in state with whatever the name attribute is\n// //     // either username or password\n// //     this.setState({ [e.target.name]: e.target.value });\n// //   }\n// //   onSubmit(e) {\n// //     e.preventDefault();\n// //     // make sure we use an arrow function here to correctly bind this to this.props.history.push\n// //     this.props.register(this.state).then(\n// //       () => {\n// //         // route to /login once signup is complete\n// //         this.props.history.push('/login');\n// //       },\n// //       // if we get back a status code of >= 400 from the server...\n// //     //   err => {\n// //     //     // not for production - but good for testing for now!\n// //     //     debugger;\n// //     //   }\n// //     );\n// //   }\n// //   render() {\n// //     return (\n// //       <div className=\"row\">\n// //         <div className=\"col-md-4 col-md-offset-4\">\n// //           <form onSubmit={this.onSubmit}>\n// //             <h1>Sign up!</h1>\n// // \t\t\t<div className=\"form-group\">\n// //               <label htmlFor=\"username\">Name</label>\n// //               <input\n// //                 type=\"text\"\n// //                 id=\"name\"\n// //                 name=\"name\"\n// //                 value={this.state.name}\n// //                 onChange={this.onChange}\n// //               />\n// //             </div>\n// //             <div className=\"form-group\">\n// //               <label htmlFor=\"username\">Email</label>\n// //               <input\n// //                 type=\"text\"\n// //                 id=\"email\"\n// //                 name=\"email\"\n// //                 value={this.state.email}\n// //                 onChange={this.onChange}\n// //               />\n// //             </div>\n// //             <div className=\"form-group\">\n// //               <label htmlFor=\"password\">password</label>\n// //               <input\n// //                 type=\"password\"\n// //                 id=\"password\"\n// //                 name=\"password\"\n// //                 value={this.state.password}\n// //                 onChange={this.onChange}\n// //               />\n// //             </div>\n// //             <div className=\"form-group\">\n// //               <button className=\"btn btn-primary btn-lg\">Sign up</button>\n// //             </div>\n// //           </form>\n// //         </div>\n// //       </div>\n// //     );\n// //   }\n// // }\n// // // let's start adding propTypes - it's a best practice\n// // Register.propTypes = {\n// // \tregister: PropTypes.func.isRequired,\n// // \thistory: PropTypes.func.isRequired,\n// // };\n// // export default withRouter(connect(null, { register })(Register));\n// // import React, { Component } from 'react';\n// // import {Link} from 'react-router-dom';\n// // import { connect } from 'react-redux';\n// //  import PropTypes from \"prop-types\";\n// // // import { userActions } from '../../actions';\n// // import { signUp } from \"../../actions/authActions\";\n// // class Register extends Component {\n// //     constructor(props) {\n// // \t\tsuper(props);\n// // \t\tthis.state = {\n// //       \t\tname: '',\n// // \t\t\temail: '',\n// // \t\t\tpassword: '',\n// // \t\t\tsubmitted : false\n// // \t\t};\n// // \t\tthis.handleInputChange = this.handleInputChange.bind(this);\n// // \t\tthis.submitRegister = this.submitRegister.bind(this);\n// // \t}\n// // \thandleInputChange(e) {\n// // \t\tconst name = e.target.name;\n// // \t\tconst value = e.target.value;\n// // \t\tthis.setState({\n// // \t\t\t[name]: value\n// // \t\t});\n// // \t}\n// // \tsubmitRegister(e) {\n// // \t\te.preventDefault();\n// // \t\tthis.setState({ submitted: true });\n// // \t\tconst { name, email, password } = this.state;\n// // \t\tif (email && password) {\n// // \t\t\tthis.props.signUp({name, email, password});\n// // \t\t}\n// // \t}\n// // \trender(){\n// // \t\t//  const { registering  } = this.props;\n// //         const { name, email, password, submitted } = this.state;\n// // \t\treturn(\n// // \t\t\t<div className=\"col-md-4 col-md-offset-4\">\n// // \t\t\t<h2 className=\"text-center\">User Registration</h2><form>\n// // \t\t\t<div className={'form-group' + (submitted && !name ? ' has-error' : '')}>\n// // \t\t\t\t\t<label>Name:</label>\n// // \t\t\t\t\t<input type=\"text\" id=\"name\" className=\"form-control input-shadow\" placeholder=\"Enter Name\" value={this.state.name} onChange={this.handleInputChange} name=\"name\"/>\n// // \t\t\t \t\t\t\t\t\t\t\t { submitted && !name && <div className=\"help-block\">First Name is required</div> }\n// // \t\t\t</div>\n// // \t\t\t<div className={'form-group' + (submitted && !email ? ' has-error' : '')}>\n// // \t\t\t\t\t<label>Email:</label>\n// // \t\t\t\t\t<input type=\"text\" id=\"email\" className=\"form-control input-shadow\" placeholder=\"Enter Email\" value={this.state.email} onChange={this.handleInputChange} name=\"email\"/>\n// // \t\t\t\t\t\t\t\t\t\t\t{ submitted && !email && <div className=\"help-block\">Email is required</div> }\n// // \t\t\t</div>\n// // \t\t\t<div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\n// // \t\t\t\t\t<label htmlFor=\"password\">Password: </label>\n// // \t\t\t\t\t<input type=\"password\" id=\"password\" className=\"form-control input-shadow\" placeholder=\"Enter Password\" value={this.state.password}\n// // \t\t\t\t\tonChange={this.handleInputChange} name=\"password\"/>\n// // \t\t\t\t\t{ submitted && !name && <div className=\"help-block\">Password is required</div> }\n// // \t\t\t\t\t</div>\n// // \t\t\t\t\t<button type=\"button\" onClick={this.submitRegister} className=\"btn btn-primary btn-block\">Register</button>\n// // \t\t\t<Link to=\"/login\" className=\"btn btn-link\">Login</Link>\n// // \t\t </form></div>\n// // \t\t)\n// // \t}\n// // }\n// // Register.propTypes = {\n// // \tsignUp: PropTypes.object.isRequired,\n// // \t// location: PropTypes.object.isRequired,\n// // \t//  \tisAuthenticated: PropTypes.bool.isRequired,\n// // \t//  location: PropTypes.object.isRequired\n// // \t };\n// // // function mapState(state) {\n// // //     // const { registering } = state.register;\n// // //     // return { registering };\n// // // }\n// // // const actionCreators = {\n// // //     register: signUp.register\n// // // }\n// // const connectedRegister = connect(signUp)(Register);\n// // export { connectedRegister as Register };\n// import React, { useState } from \"react\";\n// import { connect, useDispatch } from \"react-redux\";\n// import { Link, useHistory, Redirect } from \"react-router-dom\";\n// // import { register } from \"../../actions/auth\";\n// import { signUp } from \"../../actions/authActions\";\n// import PropTypes from \"prop-types\";\n// // import Alert from \"../layout/Alert\";\n// // import { setAlert } from \"../../actions/alert\";\n// const Register = ({  signUp, isLoggedIn }) => {\n// \tconst [formData, setFormData] = useState({\n// \t\tname: \"\",\n// \t\temail: \"\",\n// \t\tpassword: \"\",\n// \t});\n// \tconst { name, email, password } = formData;\n// \tconst history = useHistory();\n// \tconst dispatch = useDispatch();\n// \tconst onChange = (e) =>\n// \t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n// \tconst onSubmit = async (e) => {\n// \t\tconsole.log(\"Form data\", e);\n// \t\te.preventDefault();\n// \t\tdispatch(signUp(formData,history));\n// \t\t\t signUp({ name, email, password });\n// \t};\n// \t// Redirect if logged in\n// \tif (isLoggedIn) {\n// \t\treturn <Redirect to=\"/login\" />;\n// \t}\n// \treturn (\n// \t\t<div className=\"register-form\">\n// \t\t\t<h1 className=\"heading\">Sign Up</h1>\n// \t\t\t<p className=\"lead\">\n// \t\t\t\t<i className=\"fas fa-user\"></i> Create Your Account\n// \t\t\t</p>\n// \t\t\t{/* <Alert /> */}\n// \t\t\t<br />\n// \t\t\t<form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n// \t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t<input\n// \t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\tplaceholder=\"Name\"\n// \t\t\t\t\t\tname=\"name\"\n// \t\t\t\t\t\tvalue={name}\n// \t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t/>\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t<input\n// \t\t\t\t\t\ttype=\"email\"\n// \t\t\t\t\t\tplaceholder=\"Email Address\"\n// \t\t\t\t\t\tname=\"email\"\n// \t\t\t\t\t\tvalue={email}\n// \t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t/>\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t<input\n// \t\t\t\t\t\ttype=\"password\"\n// \t\t\t\t\t\tplaceholder=\"Password\"\n// \t\t\t\t\t\tname=\"password\"\n// \t\t\t\t\t\tminLength=\"6\"\n// \t\t\t\t\t\tvalue={password}\n// \t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t/>\n// \t\t\t\t</div>\n// \t\t\t\t<input type=\"submit\" className=\"btn btn-primary\" href=\"/login\" value=\"Register\"/>\n// \t\t\t</form>\n// \t\t\t<p className=\"link\">\n// \t\t\t\tAlready have an account? <Link to=\"/login\">Sign In</Link>\n// \t\t\t</p>\n// \t\t</div>\n// \t);\n// };\n// Register.propTypes = {\n// \t// setAlert: PropTypes.func.isRequired,\n// \tsignUp: PropTypes.func.isRequired,\n// \tisLoggedIn: PropTypes.bool,\n// };\n// const mapStateToProps = (state) => ({\n// \tisAuthenticated: state.auth.isAuthenticated,\n// });\n// export default connect(mapStateToProps, {  signUp })(Register);\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from 'material-ui/TextField';\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton';\nimport Checkbox from 'material-ui/Checkbox';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport asyncValidate from '../asyncValidate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['firstName', 'lastName', 'email', 'favoriteColor', 'notes'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst renderTextField = _ref => {\n  let {\n    input,\n    label,\n    meta: {\n      touched,\n      error\n    },\n    ...custom\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    hintText: label,\n    floatingLabelText: label,\n    errorText: touched && error,\n    ...input,\n    ...custom\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 438,\n    columnNumber: 3\n  }, this);\n};\n\nconst renderCheckbox = _ref2 => {\n  let {\n    input,\n    label\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Checkbox, {\n    label: label,\n    checked: input.value ? true : false,\n    onCheck: input.onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 447,\n    columnNumber: 3\n  }, this);\n};\n\nconst renderRadioGroup = _ref3 => {\n  let {\n    input,\n    ...rest\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(RadioButtonGroup, { ...input,\n    ...rest,\n    valueSelected: input.value,\n    onChange: (event, value) => input.onChange(value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 3\n  }, this);\n};\n\nconst renderSelectField = _ref4 => {\n  let {\n    input,\n    label,\n    meta: {\n      touched,\n      error\n    },\n    children,\n    ...custom\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(SelectField, {\n    floatingLabelText: label,\n    errorText: touched && error,\n    ...input,\n    onChange: (event, index, value) => input.onChange(value),\n    children: children,\n    ...custom\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 459,\n    columnNumber: 3\n  }, this);\n};\n\nconst Register = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"firstName\",\n        component: renderTextField,\n        label: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"lastName\",\n        component: renderTextField,\n        label: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        component: renderTextField,\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"sex\",\n        component: renderRadioGroup,\n        children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"male\",\n          label: \"male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"female\",\n          label: \"female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"favoriteColor\",\n        component: renderSelectField,\n        label: \"Favorite Color\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 'ff0000',\n          primaryText: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: '00ff00',\n          primaryText: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: '0000ff',\n          primaryText: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"employed\",\n        component: renderCheckbox,\n        label: \"Employed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"notes\",\n        component: renderTextField,\n        label: \"Notes\",\n        multiLine: true,\n        rows: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: pristine || submitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        disabled: pristine || submitting,\n        onClick: reset,\n        children: \"Clear Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Register;\nexport default reduxForm({\n  form: 'MaterialUiForm',\n  // a unique identifier for this form\n  validate,\n  asyncValidate\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/auth/Register.js"],"names":["React","Field","reduxForm","TextField","RadioButton","RadioButtonGroup","Checkbox","SelectField","MenuItem","asyncValidate","validate","values","errors","requiredFields","forEach","field","email","test","renderTextField","input","label","meta","touched","error","custom","renderCheckbox","value","onChange","renderRadioGroup","rest","event","renderSelectField","children","index","Register","props","handleSubmit","pristine","reset","submitting","form"],"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","sourcesContent":["// // import React, { useState } from \"react\";\r\n// // import { connect } from \"react-redux\";\r\n// // import { Link, Redirect  } from \"react-router-dom\";\r\n// // import { register } from \"../../actions/auth\";\r\n// // import PropTypes from \"prop-types\";\r\n// // import Alert from \"../layout/Alert\";\r\n\r\n// // const Register = ({ register, isAuthenticated }) => {\r\n// // \tconst [error, setError] = useState(null);\r\n\r\n// // \t// const history = useHistory();\r\n\r\n// // \t// const historyToContacts = () => {\r\n// // \t//   // 👇️ navigate to /contacts\r\n// // \t//   history.push('/login');\r\n// // \t// };\r\n// // \tconst [formData, setFormData] = useState({\r\n// // \t\tname: \"\",\r\n// // \t\temail: \"\",\r\n// // \t\tpassword: \"\",\r\n\t\t\r\n// // \t});\r\n// // \tconst validateEmail = (email) => {\r\n// // \t\tconst re =\r\n// // \t\t  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n// // \t\treturn re.test(String(email).toLowerCase());\r\n// // \t  };\r\n\r\n// // \tconst { name, email, password} = formData;\r\n\r\n// // \tconst onChange = (e) =>\r\n// // \t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n// // \tconst onSubmit = async (e) => {\r\n// // \t\tconsole.log(\"Form data\", e);\r\n// // \t\te.preventDefault();\r\n\r\n// // \t\tif (formData.name.length < 12) {\r\n// // \t\t\tsetError('Name  must be at least 12 chars long');\r\n// // \t\t  }\r\n\t  \r\n// // \t\tif (!validateEmail(formData.email)) {\r\n// // \t\t\tsetError('Invalid Email');\r\n// // \t\t  }\r\n\t  \r\n// // \t\t  if (formData.password.length < 8) {\r\n// // \t\t\tsetError('Password must be at least 8 chars long');\r\n// // \t\t  }\r\n\t  \r\n// // \t\t  if (!error) {\r\n// // \t\t\t// No errors.\r\n// // \t\t  }\r\n// // \t\t\tregister({ name, email, password });\r\n\t\t\r\n// // \t};\r\n\r\n// // \t// Redirect if logged in\r\n// // \t if (isAuthenticated) {\r\n// // \t \treturn <Redirect to=\"/login\" />;\r\n// // \t }\r\n\t\r\n\r\n// // \treturn (\r\n// // \t\t<div className=\"register-form\">\r\n// // \t\t\t<h1 className=\"heading\">Sign Up</h1>\r\n// // \t\t\t<p className=\"lead\">\r\n// // \t\t\t\t<i className=\"fas fa-user\"></i> Create Your Account\r\n// // \t\t\t</p>\r\n// // \t\t\t<Alert />\r\n// // \t\t\t<br />\r\n// // \t\t\t{error && <div style={{ color: 'red' }}>{error}</div>}\r\n// // \t\t\t<form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n// // \t\t\t\t<div className=\"form-group\">\r\n// // \t\t\t\t\t<input\r\n// // \t\t\t\t\t\ttype=\"text\"\r\n// // \t\t\t\t\t\tplaceholder=\"Name\"\r\n// // \t\t\t\t\t\tname=\"name\"\r\n// // \t\t\t\t\t\tvalue={name}\r\n// // \t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n// // \t\t\t\t\t/>\r\n// // \t\t\t\t</div>\r\n// // \t\t\t\t<div className=\"form-group\">\r\n// // \t\t\t\t\t<input\r\n// // \t\t\t\t\t\ttype=\"email\"\r\n// // \t\t\t\t\t\tplaceholder=\"Email Address\"\r\n// // \t\t\t\t\t\tname=\"email\"\r\n// // \t\t\t\t\t\tvalue={email}\r\n// // \t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\r\n// // \t\t\t\t\t/>\r\n// // \t\t\t\t</div>\r\n// // \t\t\t\t<div className=\"form-group\">\r\n// // \t\t\t\t\t<input\r\n// // \t\t\t\t\t\ttype=\"password\"\r\n// // \t\t\t\t\t\tplaceholder=\"Password\"\r\n// // \t\t\t\t\t\tname=\"password\"\r\n// // \t\t\t\t\t\tminLength=\"6\"\r\n// // \t\t\t\t\t\tvalue={password}\r\n// // \t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\r\n// // \t\t\t\t\t/>\r\n// // \t\t\t\t</div>\r\n\t\t\t\t\r\n// // \t\t\t\t<input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n// // \t\t\t</form>\r\n// // \t\t\t<p className=\"link\">\r\n// // \t\t\t\tAlready have an account? <Link to=\"/login\">Sign In</Link>\r\n// // \t\t\t</p>\r\n// // \t\t</div>\r\n// // \t);\r\n// // };\r\n\r\n// // Register.propTypes = {\r\n// // \tsetAlert: PropTypes.func.isRequired,\r\n// // \tregister: PropTypes.func.isRequired,\r\n// // \tisAuthenticated: PropTypes.bool,\r\n// // };\r\n\r\n// // const mapStateToProps = (state) => ({\r\n// // \tisAuthenticated: state.auth.isAuthenticated,\r\n// // });\r\n\r\n// // export default connect(mapStateToProps, {  register})(Register);\r\n\r\n\r\n\r\n\r\n// // import React, { Component } from 'react';\r\n// // import PropTypes from 'prop-types';\r\n// // import { connect } from 'react-redux';\r\n// // import { register } from '../../actions/auth';\r\n// // import { withRouter } from 'react-router-dom';\r\n\r\n// // class Register extends Component {\r\n// //   // pretty standard\r\n// //   constructor(props) {\r\n// //     super(props);\r\n// //     this.state = {\r\n// // \t\tname: '',\r\n// //       email: '',\r\n// //       password: ''\r\n// //     };\r\n\r\n// //     this.onChange = this.onChange.bind(this);\r\n// //     this.onSubmit = this.onSubmit.bind(this);\r\n// //   }\r\n\r\n// //   onChange(e) {\r\n// //     // change a key in state with whatever the name attribute is\r\n// //     // either username or password\r\n// //     this.setState({ [e.target.name]: e.target.value });\r\n// //   }\r\n\r\n// //   onSubmit(e) {\r\n// //     e.preventDefault();\r\n// //     // make sure we use an arrow function here to correctly bind this to this.props.history.push\r\n// //     this.props.register(this.state).then(\r\n// //       () => {\r\n// //         // route to /login once signup is complete\r\n// //         this.props.history.push('/login');\r\n// //       },\r\n// //       // if we get back a status code of >= 400 from the server...\r\n// //     //   err => {\r\n// //     //     // not for production - but good for testing for now!\r\n// //     //     debugger;\r\n// //     //   }\r\n// //     );\r\n// //   }\r\n\r\n// //   render() {\r\n// //     return (\r\n// //       <div className=\"row\">\r\n// //         <div className=\"col-md-4 col-md-offset-4\">\r\n// //           <form onSubmit={this.onSubmit}>\r\n// //             <h1>Sign up!</h1>\r\n// // \t\t\t<div className=\"form-group\">\r\n// //               <label htmlFor=\"username\">Name</label>\r\n// //               <input\r\n// //                 type=\"text\"\r\n// //                 id=\"name\"\r\n// //                 name=\"name\"\r\n// //                 value={this.state.name}\r\n// //                 onChange={this.onChange}\r\n// //               />\r\n// //             </div>\r\n// //             <div className=\"form-group\">\r\n// //               <label htmlFor=\"username\">Email</label>\r\n// //               <input\r\n// //                 type=\"text\"\r\n// //                 id=\"email\"\r\n// //                 name=\"email\"\r\n// //                 value={this.state.email}\r\n// //                 onChange={this.onChange}\r\n// //               />\r\n// //             </div>\r\n// //             <div className=\"form-group\">\r\n// //               <label htmlFor=\"password\">password</label>\r\n// //               <input\r\n// //                 type=\"password\"\r\n// //                 id=\"password\"\r\n// //                 name=\"password\"\r\n// //                 value={this.state.password}\r\n// //                 onChange={this.onChange}\r\n// //               />\r\n// //             </div>\r\n// //             <div className=\"form-group\">\r\n// //               <button className=\"btn btn-primary btn-lg\">Sign up</button>\r\n// //             </div>\r\n// //           </form>\r\n// //         </div>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n// // }\r\n\r\n// // // let's start adding propTypes - it's a best practice\r\n// // Register.propTypes = {\r\n// // \tregister: PropTypes.func.isRequired,\r\n// // \thistory: PropTypes.func.isRequired,\r\n\r\n\t\r\n// // };\r\n\r\n// // export default withRouter(connect(null, { register })(Register));\r\n\r\n\r\n\r\n\r\n// // import React, { Component } from 'react';\r\n// // import {Link} from 'react-router-dom';\r\n// // import { connect } from 'react-redux';\r\n// //  import PropTypes from \"prop-types\";\r\n// // // import { userActions } from '../../actions';\r\n// // import { signUp } from \"../../actions/authActions\";\r\n// // class Register extends Component {\r\n// //     constructor(props) {\r\n// // \t\tsuper(props);\r\n\r\n// // \t\tthis.state = {\r\n// //       \t\tname: '',\r\n// // \t\t\temail: '',\r\n// // \t\t\tpassword: '',\r\n// // \t\t\tsubmitted : false\r\n// // \t\t};\r\n// // \t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n// // \t\tthis.submitRegister = this.submitRegister.bind(this);\r\n\t\t\r\n// // \t}\r\n\r\n// // \thandleInputChange(e) {\r\n// // \t\tconst name = e.target.name;\r\n// // \t\tconst value = e.target.value;\r\n// // \t\tthis.setState({\r\n// // \t\t\t[name]: value\r\n// // \t\t});\r\n// // \t}\r\n\r\n// // \tsubmitRegister(e) {\r\n// // \t\te.preventDefault();\r\n// // \t\tthis.setState({ submitted: true });\r\n// // \t\tconst { name, email, password } = this.state;\r\n// // \t\tif (email && password) {\r\n// // \t\t\tthis.props.signUp({name, email, password});\r\n// // \t\t}\r\n// // \t}\r\n\r\n// // \trender(){\r\n// // \t\t//  const { registering  } = this.props;\r\n// //         const { name, email, password, submitted } = this.state;\r\n// // \t\treturn(\r\n\r\n// // \t\t\t<div className=\"col-md-4 col-md-offset-4\">\r\n// // \t\t\t<h2 className=\"text-center\">User Registration</h2><form>\r\n// // \t\t\t<div className={'form-group' + (submitted && !name ? ' has-error' : '')}>\r\n// // \t\t\t\t\t<label>Name:</label>\r\n// // \t\t\t\t\t<input type=\"text\" id=\"name\" className=\"form-control input-shadow\" placeholder=\"Enter Name\" value={this.state.name} onChange={this.handleInputChange} name=\"name\"/>\r\n// // \t\t\t \t\t\t\t\t\t\t\t { submitted && !name && <div className=\"help-block\">First Name is required</div> }\r\n// // \t\t\t</div>\r\n// // \t\t\t<div className={'form-group' + (submitted && !email ? ' has-error' : '')}>\r\n// // \t\t\t\t\t<label>Email:</label>\r\n// // \t\t\t\t\t<input type=\"text\" id=\"email\" className=\"form-control input-shadow\" placeholder=\"Enter Email\" value={this.state.email} onChange={this.handleInputChange} name=\"email\"/>\r\n// // \t\t\t\t\t\t\t\t\t\t\t{ submitted && !email && <div className=\"help-block\">Email is required</div> }\r\n// // \t\t\t</div>\r\n// // \t\t\t<div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\r\n// // \t\t\t\t\t<label htmlFor=\"password\">Password: </label>\r\n// // \t\t\t\t\t<input type=\"password\" id=\"password\" className=\"form-control input-shadow\" placeholder=\"Enter Password\" value={this.state.password}\r\n// // \t\t\t\t\tonChange={this.handleInputChange} name=\"password\"/>\r\n// // \t\t\t\t\t{ submitted && !name && <div className=\"help-block\">Password is required</div> }\r\n// // \t\t\t\t\t</div>\r\n// // \t\t\t\t\t<button type=\"button\" onClick={this.submitRegister} className=\"btn btn-primary btn-block\">Register</button>\r\n// // \t\t\t<Link to=\"/login\" className=\"btn btn-link\">Login</Link>\r\n// // \t\t </form></div>\r\n// // \t\t)\r\n// // \t}\r\n\r\n// // }\r\n\r\n// // Register.propTypes = {\r\n// // \tsignUp: PropTypes.object.isRequired,\r\n// // \t// location: PropTypes.object.isRequired,\r\n// // \t//  \tisAuthenticated: PropTypes.bool.isRequired,\r\n// // \t//  location: PropTypes.object.isRequired\r\n// // \t };\r\n// // // function mapState(state) {\r\n// // //     // const { registering } = state.register;\r\n// // //     // return { registering };\r\n// // // }\r\n\r\n// // // const actionCreators = {\r\n// // //     register: signUp.register\r\n// // // }\r\n\r\n// // const connectedRegister = connect(signUp)(Register);\r\n// // export { connectedRegister as Register };\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { connect, useDispatch } from \"react-redux\";\r\n// import { Link, useHistory, Redirect } from \"react-router-dom\";\r\n// // import { register } from \"../../actions/auth\";\r\n// import { signUp } from \"../../actions/authActions\";\r\n// import PropTypes from \"prop-types\";\r\n\r\n\r\n// // import Alert from \"../layout/Alert\";\r\n// // import { setAlert } from \"../../actions/alert\";\r\n\r\n// const Register = ({  signUp, isLoggedIn }) => {\r\n// \tconst [formData, setFormData] = useState({\r\n// \t\tname: \"\",\r\n// \t\temail: \"\",\r\n// \t\tpassword: \"\",\r\n// \t});\r\n\r\n// \tconst { name, email, password } = formData;\r\n// \tconst history = useHistory();\r\n// \tconst dispatch = useDispatch();\r\n// \tconst onChange = (e) =>\r\n// \t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\t\r\n// \tconst onSubmit = async (e) => {\r\n// \t\tconsole.log(\"Form data\", e);\r\n// \t\te.preventDefault();\r\n// \t\tdispatch(signUp(formData,history));\r\n// \t\t\t signUp({ name, email, password });\r\n\t\t\r\n// \t};\r\n\r\n// \t// Redirect if logged in\r\n// \tif (isLoggedIn) {\r\n// \t\treturn <Redirect to=\"/login\" />;\r\n// \t}\r\n\r\n// \treturn (\r\n// \t\t<div className=\"register-form\">\r\n// \t\t\t<h1 className=\"heading\">Sign Up</h1>\r\n// \t\t\t<p className=\"lead\">\r\n// \t\t\t\t<i className=\"fas fa-user\"></i> Create Your Account\r\n// \t\t\t</p>\r\n// \t\t\t{/* <Alert /> */}\r\n// \t\t\t<br />\r\n// \t\t\t<form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n// \t\t\t\t<div className=\"form-group\">\r\n// \t\t\t\t\t<input\r\n// \t\t\t\t\t\ttype=\"text\"\r\n// \t\t\t\t\t\tplaceholder=\"Name\"\r\n// \t\t\t\t\t\tname=\"name\"\r\n// \t\t\t\t\t\tvalue={name}\r\n// \t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t</div>\r\n// \t\t\t\t<div className=\"form-group\">\r\n// \t\t\t\t\t<input\r\n// \t\t\t\t\t\ttype=\"email\"\r\n// \t\t\t\t\t\tplaceholder=\"Email Address\"\r\n// \t\t\t\t\t\tname=\"email\"\r\n// \t\t\t\t\t\tvalue={email}\r\n// \t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t</div>\r\n// \t\t\t\t<div className=\"form-group\">\r\n// \t\t\t\t\t<input\r\n// \t\t\t\t\t\ttype=\"password\"\r\n// \t\t\t\t\t\tplaceholder=\"Password\"\r\n// \t\t\t\t\t\tname=\"password\"\r\n// \t\t\t\t\t\tminLength=\"6\"\r\n// \t\t\t\t\t\tvalue={password}\r\n// \t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t</div>\r\n\t\t\t\t\r\n// \t\t\t\t<input type=\"submit\" className=\"btn btn-primary\" href=\"/login\" value=\"Register\"/>\r\n\t\t\t\t\r\n// \t\t\t</form>\r\n// \t\t\t<p className=\"link\">\r\n// \t\t\t\tAlready have an account? <Link to=\"/login\">Sign In</Link>\r\n// \t\t\t</p>\r\n// \t\t</div>\r\n// \t);\r\n// };\r\n\r\n// Register.propTypes = {\r\n// \t// setAlert: PropTypes.func.isRequired,\r\n// \tsignUp: PropTypes.func.isRequired,\r\n// \tisLoggedIn: PropTypes.bool,\r\n// };\r\n\r\n// const mapStateToProps = (state) => ({\r\n// \tisAuthenticated: state.auth.isAuthenticated,\r\n// });\r\n\r\n// export default connect(mapStateToProps, {  signUp })(Register);\r\n\r\nimport React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport TextField from 'material-ui/TextField'\r\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton'\r\nimport Checkbox from 'material-ui/Checkbox'\r\nimport SelectField from 'material-ui/SelectField'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport asyncValidate from '../asyncValidate'\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [ 'firstName', 'lastName', 'email', 'favoriteColor', 'notes' ]\r\n  requiredFields.forEach(field => {\r\n    if (!values[ field ]) {\r\n      errors[ field ] = 'Required'\r\n    }\r\n  })\r\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n  return errors\r\n}\r\n\r\nconst renderTextField = ({ input, label, meta: { touched, error }, ...custom }) => (\r\n  <TextField hintText={label}\r\n    floatingLabelText={label}\r\n    errorText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n  />\r\n)\r\n\r\nconst renderCheckbox = ({ input, label }) => (\r\n  <Checkbox label={label}\r\n    checked={input.value ? true : false}\r\n    onCheck={input.onChange}/>\r\n)\r\n\r\nconst renderRadioGroup = ({ input, ...rest }) => (\r\n  <RadioButtonGroup {...input} {...rest}\r\n    valueSelected={input.value}\r\n    onChange={(event, value) => input.onChange(value)}/>\r\n)\r\n\r\nconst renderSelectField = ({ input, label, meta: { touched, error }, children, ...custom }) => (\r\n  <SelectField\r\n    floatingLabelText={label}\r\n    errorText={touched && error}\r\n    {...input}\r\n    onChange={(event, index, value) => input.onChange(value)}\r\n    children={children}\r\n    {...custom}/>\r\n)\r\n\r\nconst Register = props => {\r\n  const { handleSubmit, pristine, reset, submitting } = props\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field name=\"firstName\" component={renderTextField} label=\"First Name\"/>\r\n      </div>\r\n      <div>\r\n        <Field name=\"lastName\" component={renderTextField} label=\"Last Name\"/>\r\n      </div>\r\n      <div>\r\n        <Field name=\"email\" component={renderTextField} label=\"Email\"/>\r\n      </div>\r\n      <div>\r\n        <Field name=\"sex\" component={renderRadioGroup}>\r\n          <RadioButton value=\"male\" label=\"male\"/>\r\n          <RadioButton value=\"female\" label=\"female\"/>\r\n        </Field>\r\n      </div>\r\n      <div>\r\n        <Field name=\"favoriteColor\" component={renderSelectField} label=\"Favorite Color\">\r\n          <MenuItem value={'ff0000'} primaryText=\"Red\"/>\r\n          <MenuItem value={'00ff00'} primaryText=\"Green\"/>\r\n          <MenuItem value={'0000ff'} primaryText=\"Blue\"/>\r\n        </Field>\r\n      </div>\r\n      <div>\r\n        <Field name=\"employed\" component={renderCheckbox} label=\"Employed\"/>\r\n      </div>\r\n      <div>\r\n        <Field name=\"notes\" component={renderTextField} label=\"Notes\" multiLine={true} rows={2}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" disabled={pristine || submitting}>Submit</button>\r\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'MaterialUiForm',  // a unique identifier for this form\r\n  validate,\r\n  asyncValidate\r\n})(Register)"]},"metadata":{},"sourceType":"module"}