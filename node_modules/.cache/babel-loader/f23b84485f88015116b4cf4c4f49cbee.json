{"ast":null,"code":"import { CREATE_USER_REQUEST, CREATE_USER_SUCCESS, CREATE_USER_FAILURE } from \"../actions/usersActiontypes\";\nimport api from \"../services/api\";\nexport function createUser(data, history) {\n  return dispatch => {\n    dispatch({\n      type: CREATE_USER_REQUEST\n    });\n    api.post('/v1/users', data).then(function (res) {\n      console.log(\"res=>\", res.data);\n      setTimeout(() => {\n        dispatch({\n          type: CREATE_USER_SUCCESS,\n          payload: res.data\n        });\n        history.push(\"/\");\n      }, 1000);\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        var _response$data;\n\n        dispatch({\n          type: CREATE_USER_FAILURE,\n          payload: response.data\n        });\n        alert((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message);\n      }\n    });\n  };\n} // export function getUsers() {\n//   return (dispatch) => {\n//     dispatch({ type: GET_USER_REQUEST });\n//     axios\n//       .get(`${api_url}/api/user`)\n//       .then(function (res) {\n//         console.log(\"res =>\", res.data);\n//         dispatch({\n//           type: GET_USER_SUCCESS,\n//           payload: res.data,\n//         });\n//       })\n//       .catch(function (error) {\n//         const { response } = error;\n//         console.log(\"err\", response);\n//         if (response !== undefined) {\n//           dispatch({\n//             type: GET_USER_FAILURE,\n//             payload: response?.data,\n//           });\n//         }\n//       });\n//   };\n// }\n// export function getUserById(id) {\n//   return (dispatch) => {\n//     dispatch({ type: GET_USER_BYID_REQUEST });\n//     axios\n//       .get(`${api_url}/api/user/${id}`)\n//       .then(function (res) {\n//         console.log(\"res =>\", res.data);\n//         dispatch({\n//           type: GET_USER_BYID_SUCCESS,\n//           payload: res.data,\n//         });\n//       })\n//       .catch(function (error) {\n//         const { response } = error;\n//         console.log(\"err\", response);\n//         if (response !== undefined) {\n//           dispatch({\n//             type: GET_USER_BYID_FAILURE,\n//             payload: response.data,\n//           });\n//         }\n//       });\n//   };\n// }\n// export function updateUserById(id, data, history) {\n//   return (dispatch) => {\n//     dispatch({ type: UPDATE_USER_BYID_REQUEST });\n//     axios\n//       .put(`${api_url}/api/user/${id}`, data)\n//       .then(function (res) {\n//         console.log(\"res=>\", res.data);\n//         setTimeout(() => {\n//           dispatch({\n//             type: UPDATE_USER_BYID_SUCCESS,\n//             payload: res.data,\n//           });\n//           history.push(\"/\");\n//         }, 1000);\n//       })\n//       .catch(function (error) {\n//         const { response } = error;\n//         console.log(\"err\", response);\n//         if (response !== undefined) {\n//           dispatch({\n//             type: UPDATE_USER_BYID_FAILURE,\n//             payload: response.data,\n//           });\n//           alert(response.data?.message);\n//         }\n//       });\n//   };\n// }\n// export function deleteUserById(id) {\n//   return (dispatch) => {\n//     dispatch({ type: DELETE_USER_BYID_REQUEST });\n//     axios\n//       .delete(`${api_url}/api/user/${id}`)\n//       .then(function (res) {\n//         console.log(\"res =>\", res.data);\n//         dispatch({\n//           type: DELETE_USER_BYID_SUCCESS,\n//           payload: id,\n//         });\n//       })\n//       .catch(function (error) {\n//         const { response } = error;\n//         console.log(\"err\", response);\n//         if (response !== undefined) {\n//           dispatch({\n//             type: DELETE_USER_BYID_FAILURE,\n//             payload: response.data,\n//           });\n//           alert(response.data?.message);\n//         }\n//       });\n//   };\n// }","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/user.js"],"names":["CREATE_USER_REQUEST","CREATE_USER_SUCCESS","CREATE_USER_FAILURE","api","createUser","data","history","dispatch","type","post","then","res","console","log","setTimeout","payload","push","catch","error","response","undefined","alert","message"],"mappings":"AAAA,SACEA,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,QAIO,6BAJP;AAKA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,OAA1B,EAAmC;AACxC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AACAG,IAAAA,GAAG,CACAM,IADH,CACQ,WADR,EACqBJ,IADrB,EAEGK,IAFH,CAEQ,UAAUC,GAAV,EAAe;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAAG,CAACN,IAAzB;AACAS,MAAAA,UAAU,CAAC,MAAM;AACfP,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEP,mBADC;AAEPc,UAAAA,OAAO,EAAEJ,GAAG,CAACN;AAFN,SAAD,CAAR;AAIAC,QAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACD,OANS,EAMP,IANO,CAAV;AAOD,KAXH,EAYGC,KAZH,CAYS,UAAUC,KAAV,EAAiB;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAeD,KAArB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBM,QAAnB;;AACA,UAAIA,QAAQ,KAAKC,SAAjB,EAA4B;AAAA;;AAC1Bb,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEN,mBADC;AAEPa,UAAAA,OAAO,EAAEI,QAAQ,CAACd;AAFX,SAAD,CAAR;AAIAgB,QAAAA,KAAK,mBAACF,QAAQ,CAACd,IAAV,mDAAC,eAAeiB,OAAhB,CAAL;AACD;AACF,KAtBH;AAuBD,GAzBD;AA0BD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {\n  CREATE_USER_REQUEST,\n  CREATE_USER_SUCCESS,\n  CREATE_USER_FAILURE\n} from \"../actions/usersActiontypes\";\nimport api from \"../services/api\";\n\nexport function createUser(data, history) {\n  return (dispatch) => {\n    dispatch({ type: CREATE_USER_REQUEST });\n    api\n      .post('/v1/users', data)\n      .then(function (res) {\n        console.log(\"res=>\", res.data);\n        setTimeout(() => {\n          dispatch({\n            type: CREATE_USER_SUCCESS,\n            payload: res.data,\n          });\n          history.push(\"/\");\n        }, 1000);\n      })\n      .catch(function (error) {\n        const { response } = error;\n        console.log(\"err\", response);\n        if (response !== undefined) {\n          dispatch({\n            type: CREATE_USER_FAILURE,\n            payload: response.data,\n          });\n          alert(response.data?.message);\n        }\n      });\n  };\n}\n\n// export function getUsers() {\n//   return (dispatch) => {\n//     dispatch({ type: GET_USER_REQUEST });\n//     axios\n//       .get(`${api_url}/api/user`)\n//       .then(function (res) {\n//         console.log(\"res =>\", res.data);\n//         dispatch({\n//           type: GET_USER_SUCCESS,\n//           payload: res.data,\n//         });\n//       })\n//       .catch(function (error) {\n//         const { response } = error;\n//         console.log(\"err\", response);\n//         if (response !== undefined) {\n//           dispatch({\n//             type: GET_USER_FAILURE,\n//             payload: response?.data,\n//           });\n//         }\n//       });\n//   };\n// }\n\n// export function getUserById(id) {\n//   return (dispatch) => {\n//     dispatch({ type: GET_USER_BYID_REQUEST });\n//     axios\n//       .get(`${api_url}/api/user/${id}`)\n//       .then(function (res) {\n//         console.log(\"res =>\", res.data);\n//         dispatch({\n//           type: GET_USER_BYID_SUCCESS,\n//           payload: res.data,\n//         });\n//       })\n//       .catch(function (error) {\n//         const { response } = error;\n//         console.log(\"err\", response);\n//         if (response !== undefined) {\n//           dispatch({\n//             type: GET_USER_BYID_FAILURE,\n//             payload: response.data,\n//           });\n//         }\n//       });\n//   };\n// }\n\n// export function updateUserById(id, data, history) {\n//   return (dispatch) => {\n//     dispatch({ type: UPDATE_USER_BYID_REQUEST });\n//     axios\n//       .put(`${api_url}/api/user/${id}`, data)\n//       .then(function (res) {\n//         console.log(\"res=>\", res.data);\n//         setTimeout(() => {\n//           dispatch({\n//             type: UPDATE_USER_BYID_SUCCESS,\n//             payload: res.data,\n//           });\n//           history.push(\"/\");\n//         }, 1000);\n//       })\n//       .catch(function (error) {\n//         const { response } = error;\n//         console.log(\"err\", response);\n//         if (response !== undefined) {\n//           dispatch({\n//             type: UPDATE_USER_BYID_FAILURE,\n//             payload: response.data,\n//           });\n//           alert(response.data?.message);\n//         }\n//       });\n//   };\n// }\n\n// export function deleteUserById(id) {\n//   return (dispatch) => {\n//     dispatch({ type: DELETE_USER_BYID_REQUEST });\n//     axios\n//       .delete(`${api_url}/api/user/${id}`)\n//       .then(function (res) {\n//         console.log(\"res =>\", res.data);\n//         dispatch({\n//           type: DELETE_USER_BYID_SUCCESS,\n//           payload: id,\n//         });\n//       })\n//       .catch(function (error) {\n//         const { response } = error;\n//         console.log(\"err\", response);\n//         if (response !== undefined) {\n//           dispatch({\n//             type: DELETE_USER_BYID_FAILURE,\n//             payload: response.data,\n//           });\n//           alert(response.data?.message);\n//         }\n//       });\n//   };\n// }"]},"metadata":{},"sourceType":"module"}