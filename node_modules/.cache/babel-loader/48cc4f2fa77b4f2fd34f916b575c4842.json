{"ast":null,"code":"import api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\"; //  import jwtDecode from \"jwt-decode\";\n\nexport const signUp = user => {\n  return dispatch => {\n    dispatch(actions.userSignupRequest());\n    api.post(`v1/auth/register`, user).then(token => {\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userSignupSuccess(token));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userSignupFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n};\nexport const loadUser = refreshToken => {\n  return dispatch => {\n    dispatch(actions.loadUserRequest());\n    api.post('v1/auth/refresh-tokens', refreshToken).then(token => {\n      localStorage.setItem(\"token\", token.data.access.token);\n      localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n      const {\n        sub: userId\n      } = jwtDecode(token.data.access.token);\n      console.log(userId);\n\n      const loadUserDetails = userId => {\n        api.get(`v1/users/${userId}`).then(user => {\n          console.log(user.data);\n          dispatch(actions.loadUserSuccess(user.data));\n        });\n      };\n\n      loadUserDetails(userId);\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.loadUserFailure(errorMessage));\n      toast.error(error.errorMessage, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n}; // export const loadUser = (refreshToken) => {\n//   return dispatch => {\n//     dispatch(actions.loadUserRequest());\n//       api.post('/v1/auth/refresh-tokens', refreshToken)\n//           .then(token => {\n//             console.log(refreshToken)\n//            localStorage.setItem(\"token\", token.data.access.token);\n//           //  const { sub: userId } = jwtDecode(token.data.access.token);\n//           //         console.log(userId);\n//                     // const loadUserDetails = (userId) => {\n//                     //   api.get('/v1/users'`${userId}`).then((user) => {\n//                     //     console.log(user.data);\n//                     //     dispatch(actions.loadUserSuccess(user.data));\n//                     //   });\n//                     // };\n//                     // loadUserDetails(userId);\n//           });\n//   }\n// }\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n// export const fetchUsers = () => {\n//   return dispatch => {\n//     dispatch(actions.fetchUsersRequest);\n//     api\n//       .get(\"/v1/users\")\n//       .then(response => {\n//         const users = response.data;\n//         console.log(users);\n//         dispatch(actions.fetchUsersSucess(users));\n//       })\n//       .catch(error => {\n//         const errorMsg = error.message;\n//         dispatch(actions.fetchUsersFailure(errorMsg));\n//       });\n//   };\n// };\n\nexport const signIn = user => {\n  return dispatch => {\n    dispatch(actions.userLoginRequest());\n    api.post(`v1/auth/login`, user).then(token => {\n      // console.log(token)\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userLoginSuccess(token));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userLoginFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n};\nexport const logOut = () => {\n  localStorage.removeItem(\"token\"); // localStorage.removeItem(\"refreshToken\");\n\n  localStorage.removeItem(\"redux\");\n  return dispatch => {\n    dispatch(actions.userLogout());\n  };\n};","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/authActions.js"],"names":["api","toast","actions","signUp","user","dispatch","userSignupRequest","post","then","token","localStorage","setItem","data","tokens","access","userSignupSuccess","catch","error","errorMessage","message","userSignupFailure","console","log","position","POSITION","TOP_RIGHT","loadUser","refreshToken","loadUserRequest","refresh","sub","userId","jwtDecode","loadUserDetails","get","loadUserSuccess","loadUserFailure","signIn","userLoginRequest","userLoginSuccess","userLoginFailure","logOut","removeItem","userLogout"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB,C,CACA;;AAMA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAU;AAC9B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACH,OAAO,CAACI,iBAAR,EAAD,CAAR;AACAN,IAAAA,GAAG,CACAO,IADH,CACS,kBADT,EAC4BH,IAD5B,EAEGI,IAFH,CAESC,KAAD,IAAW;AACfC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkBC,MAAlB,CAAyBL,KAAvD;AACAJ,MAAAA,QAAQ,CAACH,OAAO,CAACa,iBAAR,CAA0BN,KAA1B,CAAD,CAAR;AAED,KANH,EAOGO,KAPH,CAOUC,KAAD,IAAW;AAChB,YAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACAd,MAAAA,QAAQ,CAACH,OAAO,CAACkB,iBAAR,CAA0BF,YAA1B,CAAD,CAAR;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAhB,MAAAA,KAAK,CAACgB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EAA2B;AACzBI,QAAAA,QAAQ,EAAEtB,KAAK,CAACuB,QAAN,CAAeC;AADA,OAA3B;AAGD,KAdH;AAeD,GAjBD;AAkBD,CAnBM;AAsBP,OAAO,MAAMC,QAAQ,GAAIC,YAAD,IAAkB;AACxC,SAAQtB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACH,OAAO,CAAC0B,eAAR,EAAD,CAAR;AACA5B,IAAAA,GAAG,CACAO,IADH,CACQ,wBADR,EACkCoB,YADlC,EAEGnB,IAFH,CAESC,KAAD,IAAW;AACfC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAAK,CAACG,IAAN,CAAWE,MAAX,CAAkBL,KAAhD;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,KAAK,CAACG,IAAN,CAAWiB,OAAX,CAAmBpB,KAAxD;AACA,YAAM;AAAEqB,QAAAA,GAAG,EAAEC;AAAP,UAAkBC,SAAS,CAACvB,KAAK,CAACG,IAAN,CAAWE,MAAX,CAAkBL,KAAnB,CAAjC;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;;AACA,YAAME,eAAe,GAAIF,MAAD,IAAY;AAClC/B,QAAAA,GAAG,CAACkC,GAAJ,CAAS,YAAWH,MAAO,EAA3B,EAA8BvB,IAA9B,CAAoCJ,IAAD,IAAU;AAC3CiB,UAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAI,CAACQ,IAAjB;AACAP,UAAAA,QAAQ,CAACH,OAAO,CAACiC,eAAR,CAAwB/B,IAAI,CAACQ,IAA7B,CAAD,CAAR;AACD,SAHD;AAID,OALD;;AAMAqB,MAAAA,eAAe,CAACF,MAAD,CAAf;AACD,KAdH,EAeGf,KAfH,CAeUC,KAAD,IAAW;AAChB,YAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACAd,MAAAA,QAAQ,CAACH,OAAO,CAACkC,eAAR,CAAwBlB,YAAxB,CAAD,CAAR;AACAjB,MAAAA,KAAK,CAACgB,KAAN,CAAYA,KAAK,CAACC,YAAlB,EAAgC;AAC9BK,QAAAA,QAAQ,EAAEtB,KAAK,CAACuB,QAAN,CAAeC;AADK,OAAhC;AAGD,KArBH;AAsBD,GAxBD;AAyBD,CA1BM,C,CA4BP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA,OAAO,MAAMY,MAAM,GAAIjC,IAAD,IAAU;AAC9B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACH,OAAO,CAACoC,gBAAR,EAAD,CAAR;AACAtC,IAAAA,GAAG,CACAO,IADH,CACS,eADT,EACyBH,IADzB,EAEGI,IAFH,CAESC,KAAD,IAAW;AACf;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkBC,MAAlB,CAAyBL,KAAvD;AACAJ,MAAAA,QAAQ,CAACH,OAAO,CAACqC,gBAAR,CAAyB9B,KAAzB,CAAD,CAAR;AACD,KANH,EAOGO,KAPH,CAOUC,KAAD,IAAW;AAChB,YAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACAd,MAAAA,QAAQ,CAACH,OAAO,CAACsC,gBAAR,CAAyBtB,YAAzB,CAAD,CAAR;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAhB,MAAAA,KAAK,CAACgB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EAA2B;AACzBI,QAAAA,QAAQ,EAAEtB,KAAK,CAACuB,QAAN,CAAeC;AADA,OAA3B;AAGD,KAdH;AAeD,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAMgB,MAAM,GAAG,MAAM;AAC1B/B,EAAAA,YAAY,CAACgC,UAAb,CAAwB,OAAxB,EAD0B,CAE1B;;AACAhC,EAAAA,YAAY,CAACgC,UAAb,CAAwB,OAAxB;AACA,SAAQrC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACH,OAAO,CAACyC,UAAR,EAAD,CAAR;AACD,GAFD;AAGD,CAPM","sourcesContent":["import api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\";\n//  import jwtDecode from \"jwt-decode\";\n\n\n\n\n\nexport const signUp = (user) => {\n  return (dispatch) => {\n    dispatch(actions.userSignupRequest());\n    api\n      .post(`v1/auth/register`, user)\n      .then((token) => {\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\n        dispatch(actions.userSignupSuccess(token));\n        \n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.userSignupFailure(errorMessage));\n        console.log(error);\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\n\nexport const loadUser = (refreshToken) => {\n  return (dispatch) => {\n    dispatch(actions.loadUserRequest());\n    api\n      .post('v1/auth/refresh-tokens', refreshToken)\n      .then((token) => {\n        localStorage.setItem(\"token\", token.data.access.token);\n        localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n        const { sub: userId } = jwtDecode(token.data.access.token);\n        console.log(userId);\n        const loadUserDetails = (userId) => {\n          api.get(`v1/users/${userId}`).then((user) => {\n            console.log(user.data);\n            dispatch(actions.loadUserSuccess(user.data));\n          });\n        };\n        loadUserDetails(userId);\n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.loadUserFailure(errorMessage));\n        toast.error(error.errorMessage, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\n// export const loadUser = (refreshToken) => {\n//   return dispatch => {\n//     dispatch(actions.loadUserRequest());\n//       api.post('/v1/auth/refresh-tokens', refreshToken)\n//           .then(token => {\n//             console.log(refreshToken)\n//            localStorage.setItem(\"token\", token.data.access.token);\n\n//           //  const { sub: userId } = jwtDecode(token.data.access.token);\n//           //         console.log(userId);\n//                     // const loadUserDetails = (userId) => {\n//                     //   api.get('/v1/users'`${userId}`).then((user) => {\n//                     //     console.log(user.data);\n//                     //     dispatch(actions.loadUserSuccess(user.data));\n//                     //   });\n//                     // };\n//                     // loadUserDetails(userId);\n//           });\n//   }\n// }\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n\n\n\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n\n\n// export const fetchUsers = () => {\n//   return dispatch => {\n//     dispatch(actions.fetchUsersRequest);\n//     api\n//       .get(\"/v1/users\")\n//       .then(response => {\n//         const users = response.data;\n//         console.log(users);\n//         dispatch(actions.fetchUsersSucess(users));\n//       })\n//       .catch(error => {\n//         const errorMsg = error.message;\n//         dispatch(actions.fetchUsersFailure(errorMsg));\n//       });\n//   };\n// };\n\n\n\n\n\n\n\n\n\nexport const signIn = (user) => {\n  return (dispatch) => {\n    dispatch(actions.userLoginRequest());\n    api\n      .post(`v1/auth/login`, user)\n      .then((token) => {\n        // console.log(token)\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\n        dispatch(actions.userLoginSuccess(token));\n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.userLoginFailure(errorMessage));\n        console.log(error);\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\nexport const logOut = () => {\n  localStorage.removeItem(\"token\");\n  // localStorage.removeItem(\"refreshToken\");\n  localStorage.removeItem(\"redux\");\n  return (dispatch) => {\n    dispatch(actions.userLogout());\n  };\n};\n"]},"metadata":{},"sourceType":"module"}