{"ast":null,"code":"import { getUsers, deleteUser } from './actions';\nimport api from \"../services/api\"; /// add a new user\n// export const addUserAction = (user) => {\n//     return (dispatch) => {\n//         /// axios is a library used to make request to an API, \n//         /// return data and manipulate the data .\n//         axios.post('https://ti-react-test.herokuapp.com/users', user)\n//             .then(response => {\n//                 console.log(response);\n//                 dispatch(addUser(response.data))\n//             })\n//             .catch(error => {\n//                 console.log(\"eror\", error);\n//             });\n//     }\n// }\n/// fetch data of a single user  basedin id\n// export const getUserAction = (id) => {\n//     return (dispatch) => {\n//         axios.get(`https://ti-react-test.herokuapp.com/users/${id}`)\n//             .then(response => {\n//                 console.log(response);\n//                 dispatch(getUser(response.data)\n//                 );\n//             })\n//             .catch(error => {\n//                 console.log(error);\n//             });\n//     }\n// }\n/// fetch all users \n\nexport const getUsersAction = () => {\n  return dispatch => {\n    api.get('v1//users').then(response => {\n      console.log(response); /// dispatch function dispatches an action which triggers state changes in the store\n\n      dispatch(getUsers(response.data));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; /// delete a user\n\nexport const deleteUserAction = id => {\n  return dispatch => {\n    api.delete(`/v1/users/${id}`).then(response => {\n      console.log(response);\n      dispatch(deleteUser());\n      dispatch(getUsersAction());\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; /// update the existing data of a user\n// export const updateUserAction = (user, id) => {\n//     return (dispatch) => {\n//         axios.put(`https://ti-react-test.herokuapp.com/users/${id}`, user)\n//             .then(response => {\n//                 console.log(response);\n//                 dispatch(updateUser());\n//                 dispatch(getUsersAction());\n//             })\n//             .catch(error => {\n//                 console.log(error);\n//             });\n//     }\n// }","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/creators.js"],"names":["getUsers","deleteUser","api","getUsersAction","dispatch","get","then","response","console","log","data","catch","error","deleteUserAction","id","delete"],"mappings":"AAAA,SAAUA,QAAV,EAAoBC,UAApB,QAAuC,WAAvC;AAEA,OAAOC,GAAP,MAAgB,iBAAhB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAQC,QAAD,IAAc;AACjBF,IAAAA,GAAG,CAACG,GAAJ,CAAQ,WAAR,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EADc,CAEd;;AACAH,MAAAA,QAAQ,CAACJ,QAAQ,CAACO,QAAQ,CAACG,IAAV,CAAT,CAAR;AAGH,KAPL,EAQKC,KARL,CAQWC,KAAK,IAAI;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,KAVL;AAWH,GAZD;AAaH,CAdM,C,CAgBP;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,EAAD,IAAQ;AACpC,SAAQV,QAAD,IAAc;AACjBF,IAAAA,GAAG,CAACa,MAAJ,CAAY,aAAYD,EAAG,EAA3B,EACKR,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,MAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACAG,MAAAA,QAAQ,CAACD,cAAc,EAAf,CAAR;AACH,KALL,EAMKQ,KANL,CAMWC,KAAK,IAAI;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,KARL;AASH,GAVD;AAWH,CAZM,C,CAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {  getUsers, deleteUser  } from './actions';\n\nimport api from \"../services/api\";\n\n\n/// add a new user\n// export const addUserAction = (user) => {\n//     return (dispatch) => {\n//         /// axios is a library used to make request to an API, \n//         /// return data and manipulate the data .\n//         axios.post('https://ti-react-test.herokuapp.com/users', user)\n//             .then(response => {\n//                 console.log(response);\n//                 dispatch(addUser(response.data))\n//             })\n//             .catch(error => {\n//                 console.log(\"eror\", error);\n//             });\n//     }\n// }\n\n/// fetch data of a single user  basedin id\n// export const getUserAction = (id) => {\n//     return (dispatch) => {\n//         axios.get(`https://ti-react-test.herokuapp.com/users/${id}`)\n//             .then(response => {\n//                 console.log(response);\n//                 dispatch(getUser(response.data)\n//                 );\n//             })\n//             .catch(error => {\n//                 console.log(error);\n//             });\n//     }\n// }\n\n/// fetch all users \nexport const getUsersAction = () => {\n    return (dispatch) => {\n        api.get('v1//users')\n            .then(response => {\n                console.log(response);\n                /// dispatch function dispatches an action which triggers state changes in the store\n                dispatch(getUsers(response.data)\n                );\n\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n}\n\n/// delete a user\nexport const deleteUserAction = (id) => {\n    return (dispatch) => {\n        api.delete(`/v1/users/${id}`)\n            .then(response => {\n                console.log(response);\n                dispatch(deleteUser());\n                dispatch(getUsersAction());\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n}\n\n/// update the existing data of a user\n// export const updateUserAction = (user, id) => {\n//     return (dispatch) => {\n//         axios.put(`https://ti-react-test.herokuapp.com/users/${id}`, user)\n//             .then(response => {\n//                 console.log(response);\n//                 dispatch(updateUser());\n//                 dispatch(getUsersAction());\n//             })\n//             .catch(error => {\n//                 console.log(error);\n//             });\n//     }\n// }"]},"metadata":{},"sourceType":"module"}