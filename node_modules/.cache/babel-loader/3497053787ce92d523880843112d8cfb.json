{"ast":null,"code":"const API = 'http://localhost:5001/v1';\n\nclass UserApi {// static createUser(user) {\n  // \tconst headers = Object.assign({\n  // \t\t'Content-Type': 'application/json'\n  // \t}, this.requestHeaders());\n  // \tconst request = new Request(`${process.env.API_HOST}/users`, {\n  // \t\tmethod: 'POST',\n  // \t\theaders: headers, \n  // \t\tbody: JSON.stringify({\n  // \t\t\tuser: user\n  // \t\t})\n  // \t});\n  // \treturn fetch(request)\n  // \t\t.then(response => {\n  // \t\t\treturn response.json();\n  // \t\t}).catch(error => {\n  // \t\t\treturn error;\n  // \t\t});\n  // };\n  // static updateUser(user) {\n  // \tconst headers = Object.assign({\n  // \t\t'Content-Type': 'application/json'\n  // \t}, this.requestHeaders());\n  // \tconst request = new Request(`${process.env.API_HOST}/users/${user.id}`, {\n  // \t\tmethod: 'PUT',\n  // \t\theaders: headers,\n  // \t\tbody: JSON.stringify({\n  // \t\t\tuser: user\n  // \t\t})\n  // \t});\n  // \treturn fetch(request)\n  // \t\t.then(response => {\n  // \t\t\treturn response.json();\n  // \t\t}).catch(error => {\n  // \t\t\treturn error;\n  // \t\t});\n  // };\n  // static deleteUser(user) {\n  // \tconst headers = Object.assign({\n  // \t\t'Content-Type': 'application/json'\n  // \t}, this.requestHeaders());\n  // \tconst request = new Request(`${process.env.API_HOST}/users/${user.id}`, {\n  // \t\tmethod: 'DELETE',\n  // \t\theaders: headers\n  // \t});\n  // \treturn fetch(request)\n  // \t\t.then(response => {\n  // \t\t\treturn response.json();\n  // \t\t}).catch(error => {\n  // \t\t\treturn error;\n  // \t\t});\n  // };\n\n  static requestHeaders() {\n    return {\n      'AUTHORIZATION': `Bearer ${sessionStorage.token}`\n    };\n  }\n\n  static getAllUsers() {\n    const headers = this.requestHeaders();\n    console.log(\"sachin\");\n    const request = new Request(`${API}/users`, {\n      method: 'GET',\n      headers: headers\n    });\n    return fetch(request).then(response => {\n      return response.json();\n    }).catch(error => {\n      return error;\n    });\n  }\n\n}\n\nexport default UserApi;","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/services/userApi.jsx"],"names":["API","UserApi","requestHeaders","sessionStorage","token","getAllUsers","headers","console","log","request","Request","method","fetch","then","response","json","catch","error"],"mappings":"AAAA,MAAMA,GAAG,GAAG,0BAAZ;;AACA,MAAMC,OAAN,CAAc,CAwBb;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhFqB,SAAdC,cAAc,GAAG;AACvB,WAAO;AACN,uBAAkB,UAASC,cAAc,CAACC,KAAM;AAD1C,KAAP;AAGA;;AAEiB,SAAXC,WAAW,GAAG;AACpB,UAAMC,OAAO,GAAG,KAAKJ,cAAL,EAAhB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAa,GAAEV,GAAI,QAAnB,EAA4B;AAC3CW,MAAAA,MAAM,EAAE,KADmC;AAE3CL,MAAAA,OAAO,EAAEA;AAFkC,KAA5B,CAAhB;AAKA,WAAOM,KAAK,CAACH,OAAD,CAAL,CACLI,IADK,CACAC,QAAQ,IAAI;AACjB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,KAHK,EAGHC,KAHG,CAGGC,KAAK,IAAI;AACjB,aAAOA,KAAP;AACA,KALK,CAAP;AAMA;;AAtBY;;AAqFd,eAAehB,OAAf","sourcesContent":["const API = 'http://localhost:5001/v1'\nclass UserApi {\n\n\tstatic requestHeaders() {\n\t\treturn {\n\t\t\t'AUTHORIZATION': `Bearer ${sessionStorage.token}`\n\t\t};\n\t};\n\t\n\tstatic getAllUsers() {\n\t\tconst headers = this.requestHeaders();\n\t\tconsole.log(\"sachin\")\n\t\tconst request = new Request(`${API}/users`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: headers\n\t\t});\n\t\t\n\t\treturn fetch(request)\n\t\t\t.then(response => {\n\t\t\t\treturn response.json();\n\t\t\t}).catch(error => {\n\t\t\t\treturn error;\n\t\t\t});\n\t};\n\t\n\t// static createUser(user) {\n\t// \tconst headers = Object.assign({\n\t// \t\t'Content-Type': 'application/json'\n\t// \t}, this.requestHeaders());\n\t\t\n\t// \tconst request = new Request(`${process.env.API_HOST}/users`, {\n\t// \t\tmethod: 'POST',\n\t// \t\theaders: headers, \n\t// \t\tbody: JSON.stringify({\n\t// \t\t\tuser: user\n\t// \t\t})\n\t// \t});\n\t\t\n\t// \treturn fetch(request)\n\t// \t\t.then(response => {\n\t// \t\t\treturn response.json();\n\t// \t\t}).catch(error => {\n\t// \t\t\treturn error;\n\t// \t\t});\n\t// };\n\t\n\t// static updateUser(user) {\n\t// \tconst headers = Object.assign({\n\t// \t\t'Content-Type': 'application/json'\n\t// \t}, this.requestHeaders());\n\t\t\n\t// \tconst request = new Request(`${process.env.API_HOST}/users/${user.id}`, {\n\t// \t\tmethod: 'PUT',\n\t// \t\theaders: headers,\n\t// \t\tbody: JSON.stringify({\n\t// \t\t\tuser: user\n\t// \t\t})\n\t// \t});\n\t\t\n\t// \treturn fetch(request)\n\t// \t\t.then(response => {\n\t// \t\t\treturn response.json();\n\t// \t\t}).catch(error => {\n\t// \t\t\treturn error;\n\t// \t\t});\n\t// };\n\t\n\t// static deleteUser(user) {\n\t// \tconst headers = Object.assign({\n\t// \t\t'Content-Type': 'application/json'\n\t// \t}, this.requestHeaders());\n\t\t\n\t// \tconst request = new Request(`${process.env.API_HOST}/users/${user.id}`, {\n\t// \t\tmethod: 'DELETE',\n\t// \t\theaders: headers\n\t// \t});\n\t\t\n\t// \treturn fetch(request)\n\t// \t\t.then(response => {\n\t// \t\t\treturn response.json();\n\t// \t\t}).catch(error => {\n\t// \t\t\treturn error;\n\t// \t\t});\n\t// };\n}\n\nexport default UserApi;"]},"metadata":{},"sourceType":"module"}