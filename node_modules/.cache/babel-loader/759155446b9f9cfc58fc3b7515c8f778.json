{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/users';\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Read extends Component {\n  componentDidMount() {\n    const {\n      fetchData\n    } = this.props;\n    fetchData();\n  }\n\n  render() {\n    const mydata = this.props.user.user;\n    console.log(\"Data .....<>\", mydata);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Main\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nRead.propTypes = {\n  user: PropTypes.object.isRequired,\n  fetchData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.fetch\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchData: actions.fetchData\n})(Read); // import * as React from 'react';\n// import { connect } from 'react-redux';\n// import { loadUsers } from \"../actions/users\";\n// import PropTypes from \"prop-types\";\n// class Read extends React.Component {\n//    componentDidMount() {\n//        this.props.loadUsers();\n//    };\n//    render() {\n//        if (this.props.loading) {\n//            return <div>Loading</div>\n//        }\n//        if (this.props.error) {\n//            return <div style={{ color: 'red' }}>ERROR: {this.props.error}</div>\n//        }\n//        return (\n//            <table>\n//                <thead>\n//                    <tr>\n//                        <th>Name</th>\n//                        <th>Email</th>\n//                        <th>Role</th>\n//                    </tr>\n//                </thead>\n//                <tbody>\n//                {this.props.data.map(u =>\n//                    <tr key={u.id}>\n//                        <td>{u.name}</td>\n//                        <td>{u.email}</td>\n//                        <td>{u.role}</td>\n//                    </tr>\n//                )}\n//                </tbody>\n//            </table>\n//        );\n//    }\n// }\n// const mapStateToProps = state => ({\n//    data: state.users.data,\n//    getUsers: state.users.getUsers,\n//    error: state.users.error,\n// });\n// Read.propTypes = {\n// \tloadUsers: PropTypes.func.isRequired,\n// \tloading: PropTypes.bool,\n//   error: PropTypes.string,\n//   data: PropTypes.array,\n// };\n// const mapDispatchToProps = {\n//   loadUsers\n// };\n// export default connect(\n//    mapStateToProps,\n//    mapDispatchToProps\n// )(Read);\n// // import React from \"react\";\n// // import { Link } from \"react-router-dom\";\n// // import { connect } from \"react-redux\";\n// // import { getUsers, deleteUserById } from \"../actions/users\";\n// // import PropTypes from \"prop-types\";\n// // class Read extends React.Component {\n// //   constructor(props) {\n// //     super(props);\n// //     this.state = {};\n// //   }\n// //   componentDidMount() {\n// //     this.props.getUsers();\n// //   }\n// //   handleDelete = (id) => {\n// //     const result = window.confirm(\"Are you sure to delete?\");\n// //     if (result) {\n// //       this.props.deleteUserById(id);\n// //     }\n// //   };\n// //   render() {\n// //     const { items } = this.props;\n// //     return (\n// //       <React.Fragment>\n// //         <h5 style={{ textAlign: \"center\" }} className=\"my-4\">\n// //           ReactJs CRUD App With React Redux Thunk\n// //         </h5>\n// //         <div className=\"col-md-6 offset-md-3\">\n// //           <Link to={`/create`} className=\"btn btn-success\">\n// //             Create\n// //           </Link>\n// //           <table className=\"table\">\n// //             <thead>\n// //               <tr>\n// //                 <th scope=\"col\">Sr.No.</th>\n// //                 <th scope=\"col\">Name</th>\n// //                 <th scope=\"col\">Email</th>\n// //                 <th scope=\"col\">Role</th>\n// //                 <th scope=\"col\">Action</th>\n// //               </tr>\n// //             </thead>\n// //             <tbody>\n// //               {items.map((item, index) => {\n// //                   console.log(item)\n// //                 return (\n// //                   <tr key={index}>\n// //                     <th scope=\"row\">{index + 1}</th>\n// //                     <td>{item.name}</td>\n// //                     <td>{item.email}</td>\n// //                     <td>{item.role}</td>\n// //                     <td>\n// //                       <Link\n// //                         to={`/update/${item._id}`}\n// //                         className=\"btn btn-success mx-1\"\n// //                       >\n// //                         Update\n// //                       </Link>\n// //                       <button\n// //                         className=\"btn btn-danger mx-1\"\n// //                         onClick={() => this.handleDelete(item._id)}\n// //                       >\n// //                         Delete\n// //                       </button>\n// //                     </td>\n// //                   </tr>\n// //                 );\n// //               })};\n// //             </tbody>\n// //           </table>\n// //         </div>\n// //       </React.Fragment>\n// //     );\n// //   }\n// // }\n// // Read.propTypes = {\n// // \tgetUsers: PropTypes.func.isRequired,\n// // \tdeleteUserById: PropTypes.func,\n// //     items: PropTypes.func,\n// // };\n// // function mapState(state) {\n// //   const { items } = state.users;\n// //   return { items };\n// // }\n// // const actionCreators = {\n// //   getUsers: getUsers,\n// //   deleteUserById: deleteUserById,\n// // };\n// // export default connect(mapState, actionCreators)(Read);\n// // export { connected as ReadPage };","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx"],"names":["React","Component","connect","actions","PropTypes","Read","componentDidMount","fetchData","props","render","mydata","user","console","log","propTypes","object","isRequired","func","mapStateToProps","state","fetch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AACA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAGzBK,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKC,KAA3B;AACAD,IAAAA,SAAS;AACZ;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBA,IAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,MAA5B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAhBwB;;AAkB7BL,IAAI,CAACS,SAAL,GAAiB;AAChBH,EAAAA,IAAI,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UADP;AAEhBT,EAAAA,SAAS,EAAEH,SAAS,CAACa,IAAV,CAAeD;AAFV,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAD,IAAU;AAC7B,SAAO;AACHR,IAAAA,IAAI,EAAEQ,KAAK,CAACC;AADT,GAAP;AAGH,CAJD;;AAMA,eAAelB,OAAO,CAACgB,eAAD,EAAkB;AAACX,EAAAA,SAAS,EAAEJ,OAAO,CAACI;AAApB,CAAlB,CAAP,CAAyDF,IAAzD,CAAfsourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/users';\nimport PropTypes from \"prop-types\";\nclass Read extends Component {\n\n\n    componentDidMount() {\n        const { fetchData } = this.props\n        fetchData();\n    }\n\n    render() {\n        const mydata = this.props.user.user;\n        console.log(\"Data .....<>\", mydata);\n        return(\n            <div>\n                Main     \n            </div>\n        );\n    }\n}\nRead.propTypes = {\n\tuser: PropTypes.object.isRequired,\n\tfetchData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps =(state)=> {\n    return {\n        user: state.fetch\n    }\n}\n\nexport default connect(mapStateToProps, {fetchData: actions.fetchData})(Read);\n\n\n// import * as React from 'react';\n// import { connect } from 'react-redux';\n// import { loadUsers } from \"../actions/users\";\n// import PropTypes from \"prop-types\";\n// class Read extends React.Component {\n//    componentDidMount() {\n//        this.props.loadUsers();\n//    };\n    \n//    render() {\n//        if (this.props.loading) {\n//            return <div>Loading</div>\n//        }\n       \n//        if (this.props.error) {\n//            return <div style={{ color: 'red' }}>ERROR: {this.props.error}</div>\n//        }\n    \n//        return (\n//            <table>\n//                <thead>\n//                    <tr>\n//                        <th>Name</th>\n//                        <th>Email</th>\n//                        <th>Role</th>\n//                    </tr>\n//                </thead>\n//                <tbody>\n//                {this.props.data.map(u =>\n//                    <tr key={u.id}>\n//                        <td>{u.name}</td>\n//                        <td>{u.email}</td>\n//                        <td>{u.role}</td>\n                       \n//                    </tr>\n//                )}\n//                </tbody>\n//            </table>\n//        );\n//    }\n// }\n\n// const mapStateToProps = state => ({\n//    data: state.users.data,\n//    getUsers: state.users.getUsers,\n//    error: state.users.error,\n// });\n\n// Read.propTypes = {\n// \tloadUsers: PropTypes.func.isRequired,\n// \tloading: PropTypes.bool,\n//   error: PropTypes.string,\n//   data: PropTypes.array,\n// };\n\n// const mapDispatchToProps = {\n//   loadUsers\n// };\n\n// export default connect(\n//    mapStateToProps,\n//    mapDispatchToProps\n// )(Read);\n\n// // import React from \"react\";\n// // import { Link } from \"react-router-dom\";\n// // import { connect } from \"react-redux\";\n// // import { getUsers, deleteUserById } from \"../actions/users\";\n// // import PropTypes from \"prop-types\";\n// // class Read extends React.Component {\n// //   constructor(props) {\n// //     super(props);\n// //     this.state = {};\n// //   }\n\n// //   componentDidMount() {\n// //     this.props.getUsers();\n// //   }\n\n// //   handleDelete = (id) => {\n// //     const result = window.confirm(\"Are you sure to delete?\");\n// //     if (result) {\n// //       this.props.deleteUserById(id);\n// //     }\n// //   };\n\n// //   render() {\n// //     const { items } = this.props;\n// //     return (\n// //       <React.Fragment>\n// //         <h5 style={{ textAlign: \"center\" }} className=\"my-4\">\n// //           ReactJs CRUD App With React Redux Thunk\n// //         </h5>\n// //         <div className=\"col-md-6 offset-md-3\">\n// //           <Link to={`/create`} className=\"btn btn-success\">\n// //             Create\n// //           </Link>\n// //           <table className=\"table\">\n// //             <thead>\n// //               <tr>\n// //                 <th scope=\"col\">Sr.No.</th>\n// //                 <th scope=\"col\">Name</th>\n// //                 <th scope=\"col\">Email</th>\n// //                 <th scope=\"col\">Role</th>\n// //                 <th scope=\"col\">Action</th>\n// //               </tr>\n// //             </thead>\n// //             <tbody>\n// //               {items.map((item, index) => {\n// //                   console.log(item)\n// //                 return (\n// //                   <tr key={index}>\n                      \n// //                     <th scope=\"row\">{index + 1}</th>\n// //                     <td>{item.name}</td>\n// //                     <td>{item.email}</td>\n// //                     <td>{item.role}</td>\n// //                     <td>\n// //                       <Link\n// //                         to={`/update/${item._id}`}\n// //                         className=\"btn btn-success mx-1\"\n// //                       >\n// //                         Update\n// //                       </Link>\n// //                       <button\n// //                         className=\"btn btn-danger mx-1\"\n// //                         onClick={() => this.handleDelete(item._id)}\n// //                       >\n// //                         Delete\n// //                       </button>\n// //                     </td>\n// //                   </tr>\n// //                 );\n// //               })};\n// //             </tbody>\n// //           </table>\n// //         </div>\n// //       </React.Fragment>\n// //     );\n// //   }\n// // }\n\n// // Read.propTypes = {\n// // \tgetUsers: PropTypes.func.isRequired,\n// // \tdeleteUserById: PropTypes.func,\n// //     items: PropTypes.func,\n  \n// // };\n\n// // function mapState(state) {\n// //   const { items } = state.users;\n// //   return { items };\n// // }\n\n// // const actionCreators = {\n// //   getUsers: getUsers,\n// //   deleteUserById: deleteUserById,\n// // };\n\n// // export default connect(mapState, actionCreators)(Read);\n// // export { connected as ReadPage };"]},"metadata":{},"sourceType":"module"}