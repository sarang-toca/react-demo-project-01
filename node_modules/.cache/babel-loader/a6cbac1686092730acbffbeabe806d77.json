{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  loading: false,\n  isLoggedIn: false,\n  editing: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    token: \"\",\n    role: \"\"\n  },\n  users: [],\n  error: \"\"\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.FETCH:\n      return { ...state\n      };\n\n    case actionTypes.FETCH_SUCCESS:\n      return { ...state,\n        data: action.payload\n      };\n\n    case actionTypes.FAILED:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case actionTypes.USER_SIGNUP_REQUEST:\n    case actionTypes.USER_LOGIN_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case actionTypes.USER_SIGNUP_SUCCESS:\n    case actionTypes.USER_LOGIN_SUCCESS:\n      {\n        const token = action.payload.data.tokens.access.token;\n        const user = action.payload.data.user;\n        console.log(token, user);\n        return { ...state,\n          loading: false,\n          isLoggedIn: true,\n          user: {\n            id: user.id,\n            name: user.name,\n            email: user.email,\n            role: user.role,\n            token\n          }\n        };\n      }\n\n    case actionTypes.USER_SIGNUP_FAILURE:\n    case actionTypes.USER_LOGIN_FAILURE:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n    // case actionTypes.ADD_USER:\n    //   return{\n    //       ...state,\n    //       users:state.users.concat(action.payload),\n    //       editing:false\n    //   }\n\n    case actionTypes.USER_LOGOUT:\n      {\n        return initialState;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/reducers/authReducer.js"],"names":["actionTypes","initialState","loading","isLoggedIn","editing","user","id","name","email","token","role","users","error","authReducer","state","action","type","FETCH","FETCH_SUCCESS","data","payload","FAILED","USER_SIGNUP_REQUEST","USER_LOGIN_REQUEST","USER_SIGNUP_SUCCESS","USER_LOGIN_SUCCESS","tokens","access","console","log","USER_SIGNUP_FAILURE","USER_LOGIN_FAILURE","USER_LOGOUT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,OAAO,EAAC,KAHW;AAInBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,EADA;AAEJC,IAAAA,IAAI,EAAE,EAFF;AAGJC,IAAAA,KAAK,EAAE,EAHH;AAIJC,IAAAA,KAAK,EAAE,EAJH;AAKJC,IAAAA,IAAI,EAAE;AALF,GAJa;AAWnBC,EAAAA,KAAK,EAAE,EAXY;AAYnBC,EAAAA,KAAK,EAAE;AAZY,CAArB;;AAeA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBb,YAAyB;AAAA,MAAXc,MAAW;;AAEpD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKhB,WAAW,CAACiB,KAAjB;AACE,aAAO,EACH,GAAGH;AADA,OAAP;;AAGJ,SAAKd,WAAW,CAACkB,aAAjB;AACI,aAAO,EACH,GAAGJ,KADA;AAEFK,QAAAA,IAAI,EAAEJ,MAAM,CAACK;AAFX,OAAP;;AAIJ,SAAKpB,WAAW,CAACqB,MAAjB;AACI,aAAO,EACL,GAAGP,KADE;AAELZ,QAAAA,OAAO,EAAC,KAFH;AAGLU,QAAAA,KAAK,EAACG,MAAM,CAACK;AAHR,OAAP;;AAKF,SAAKpB,WAAW,CAACsB,mBAAjB;AACA,SAAKtB,WAAW,CAACuB,kBAAjB;AACE,aAAO,EACL,GAAGT,KADE;AAELZ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKF,WAAW,CAACwB,mBAAjB;AACA,SAAKxB,WAAW,CAACyB,kBAAjB;AAAqC;AACnC,cAAMhB,KAAK,GAAGM,MAAM,CAACK,OAAP,CAAeD,IAAf,CAAoBO,MAApB,CAA2BC,MAA3B,CAAkClB,KAAhD;AACA,cAAMJ,IAAI,GAAGU,MAAM,CAACK,OAAP,CAAeD,IAAf,CAAoBd,IAAjC;AACAuB,QAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ,EAAmBJ,IAAnB;AACA,eAAO,EACL,GAAGS,KADE;AAELZ,UAAAA,OAAO,EAAE,KAFJ;AAGLC,UAAAA,UAAU,EAAE,IAHP;AAILE,UAAAA,IAAI,EAAE;AACJC,YAAAA,EAAE,EAAED,IAAI,CAACC,EADL;AAEJC,YAAAA,IAAI,EAAEF,IAAI,CAACE,IAFP;AAGJC,YAAAA,KAAK,EAAEH,IAAI,CAACG,KAHR;AAIJE,YAAAA,IAAI,EAAEL,IAAI,CAACK,IAJP;AAKJD,YAAAA;AALI;AAJD,SAAP;AAYD;;AACD,SAAKT,WAAW,CAAC8B,mBAAjB;AACA,SAAK9B,WAAW,CAAC+B,kBAAjB;AACE,aAAO,EACL,GAAGjB,KADE;AAELZ,QAAAA,OAAO,EAAE,KAFJ;AAGLU,QAAAA,KAAK,EAAEG,MAAM,CAACK;AAHT,OAAP;AAOA;AACA;AACA;AACA;AACA;AACA;;AACF,SAAKpB,WAAW,CAACgC,WAAjB;AAA8B;AAC5B,eAAO/B,YAAP;AACD;;AACD;AACE,aAAOa,KAAP;AA5DJ;AA8DD,CAhED;;AAkEA,eAAeD,WAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  loading: false,\n  isLoggedIn: false,\n  editing:false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    token: \"\",\n    role: \"\",\n  },\n  users: [],\n  error: \"\",\n};\n\nconst authReducer = (state = initialState, action) => {\n  \n  switch (action.type) {\n  \n    case actionTypes.FETCH:\n      return {\n          ...state\n      }\n  case actionTypes.FETCH_SUCCESS:\n      return {\n          ...state,\n           data: action.payload\n      }\n  case actionTypes.FAILED:\n      return {\n        ...state,\n        loading:false,\n        error:action.payload\n      }\n    case actionTypes.USER_SIGNUP_REQUEST:\n    case actionTypes.USER_LOGIN_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.USER_SIGNUP_SUCCESS:\n    case actionTypes.USER_LOGIN_SUCCESS: {\n      const token = action.payload.data.tokens.access.token;\n      const user = action.payload.data.user;\n      console.log(token, user);\n      return {\n        ...state,\n        loading: false,\n        isLoggedIn: true,\n        user: {\n          id: user.id,\n          name: user.name,\n          email: user.email,\n          role: user.role,\n          token,\n        },\n      };\n    }\n    case actionTypes.USER_SIGNUP_FAILURE:\n    case actionTypes.USER_LOGIN_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n\n\n      // case actionTypes.ADD_USER:\n      //   return{\n      //       ...state,\n      //       users:state.users.concat(action.payload),\n      //       editing:false\n      //   }\n    case actionTypes.USER_LOGOUT: {\n      return initialState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}