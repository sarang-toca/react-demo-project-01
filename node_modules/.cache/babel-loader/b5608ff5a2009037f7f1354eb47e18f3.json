{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/ArticleList.js\";\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// import PropTypes from \"prop-types\";\n// class ArticleList extends Component {\n//   render() {\n//     if(this.props.articles.length) {\n//       return (\n//         <div>\n//           <h4>Articles</h4>\n//           {this.props.articles.map(article => {\n//             return (\n//               <div key={ article.id }>\n//                 <hr/>          \n//                 <h4><Link to={`/articles/${article.id}`}>{article.id}: {article.name}</Link></h4>\n//                 <p>{article.email}</p>\n//               </div>\n//             );\n//           })}\n//         </div>\n//       )    \n//     } else {\n//       return (<div>No Articles</div>)\n//     }\n//   }\n// }\n// ArticleList.propTypes = {\n// \tarticles: PropTypes.func.isRequired,\n// \t// isLoggedIn: PropTypes.bool,\n// };\n// const mapStateToProps = (state) => ({ articles: state.articles });\n// export default connect(mapStateToProps)(ArticleList);\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getArticles } from \"../actions/user\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ArticleList extends React.Component {\n  componentDidMount() {\n    this.props.getArticles();\n  }\n\n  render() {\n    if (this.props.getArticles) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this);\n    }\n\n    if (this.props.error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: [\"ERROR: \", this.props.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Active?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.props.data.map(u => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: u.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: u.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: u.active ? 'Yes' : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: u.posts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: u.messages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 24\n          }, this)]\n        }, u.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 20\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nArticleList.propTypes = {\n  getArticles: PropTypes.func.isRequired,\n  error: PropTypes.bool,\n  data: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  articles: state.ArticleList.articles,\n  data: state.reduxThunk.data,\n  getArticles: state.ArticleList.getArticles,\n  error: state.ArticleList.error\n});\n\nconst mapDispatchToProps = {\n  getArticles\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleList);","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/ArticleList.js"],"names":["React","connect","getArticles","PropTypes","ArticleList","Component","componentDidMount","props","render","error","color","data","map","u","name","lastName","active","posts","messages","id","propTypes","func","isRequired","bool","mapStateToProps","state","articles","reduxThunk","mapDispatchToProps"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// import PropTypes from \"prop-types\";\n// class ArticleList extends Component {\n\n//   render() {\n//     if(this.props.articles.length) {\n//       return (\n//         <div>\n//           <h4>Articles</h4>\n//           {this.props.articles.map(article => {\n//             return (\n//               <div key={ article.id }>\n//                 <hr/>          \n//                 <h4><Link to={`/articles/${article.id}`}>{article.id}: {article.name}</Link></h4>\n//                 <p>{article.email}</p>\n//               </div>\n//             );\n//           })}\n//         </div>\n//       )    \n//     } else {\n//       return (<div>No Articles</div>)\n//     }\n//   }\n// }\n// ArticleList.propTypes = {\n// \tarticles: PropTypes.func.isRequired,\n// \t// isLoggedIn: PropTypes.bool,\n// };\n\n// const mapStateToProps = (state) => ({ articles: state.articles });\n\n// export default connect(mapStateToProps)(ArticleList);\n\n\n\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport {getArticles} from \"../actions/user\";\nimport PropTypes from \"prop-types\";\nclass ArticleList extends React.Component {\n   componentDidMount() {\n       this.props.getArticles();\n   };\n    \n   render() {\n       if (this.props.getArticles) {\n           return <div>Loading</div>\n       }\n       \n       if (this.props.error) {\n           return <div style={{ color: 'red' }}>ERROR: {this.props.error}</div>\n       }\n    \n       return (\n           <table>\n               <thead>\n                   <tr>\n                       <th>First Name</th>\n                       <th>Last Name</th>\n                       <th>Active?</th>\n                       <th>Posts</th>\n                       <th>Messages</th>\n                   </tr>\n               </thead>\n               <tbody>\n               {this.props.data.map(u =>\n                   <tr key={u.id}>\n                       <td>{u.name}</td>\n                       <td>{u.lastName}</td>\n                       <td>{u.active ? 'Yes' : 'No'}</td>\n                       <td>{u.posts}</td>\n                       <td>{u.messages}</td>\n                   </tr>\n               )}\n               </tbody>\n           </table>\n       );\n   }\n}\n\nArticleList.propTypes = {\n\tgetArticles: PropTypes.func.isRequired,\n\terror: PropTypes.bool,\n     data: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n    articles: state.ArticleList.articles,\n    data: state.reduxThunk.data,\ngetArticles: state.ArticleList.getArticles,\n    error: state.ArticleList.error,\n});\n\nconst mapDispatchToProps = {\n    getArticles\n};\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(ArticleList);"]},"metadata":{},"sourceType":"module"}