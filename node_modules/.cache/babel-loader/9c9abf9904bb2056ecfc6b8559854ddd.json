{"ast":null,"code":"import api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\";\nimport jwtDecode from \"jwt-decode\";\nexport const getUsers = results => {\n  return dispatch => {\n    dispatch(actions.fetchUserBegin());\n    api.get(`v1/users`, results).then(function (response) {\n      console.log(response);\n      dispatch(actions.fetchUserSuccess(response));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.fetchUserFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n}; // export const addUser = (user) => {\n//   return (dispatch) => {\n//     setTimeout(() => {\n//       dispatch(addUserAsync(user)); //we call the dispatch function inside another dispatch with help of redux thunk\n//     }, 5000);\n//   };\n// };\n//  export const addUser = (user) => {\n//   return (dispatch) => {\n//     return api.post('/v1/users',user)\n//       .then(response => {\n//         localStorage.setItem(\"token\", response.data.tokens.access.token);\n//         dispatch(actions.addUserAsync(response))\n//       })\n//       .catch(error => {\n//         throw(error);\n//       });\n//   };\n// };\n\nexport const signUp = user => {\n  return dispatch => {\n    dispatch(actions.userSignupRequest());\n    api.post(`v1/auth/register`, user).then(token => {\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userSignupSuccess(token));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userSignupFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n}; // export const loadUser = (refreshToken) => {\n//   return dispatch => {\n//     dispatch(actions.loadUserRequest());\n//       api.post('/v1/auth/refresh-tokens', refreshToken)\n//           .then(token => {\n//             console.log(refreshToken)\n//            localStorage.setItem(\"token\", token.data.access.token);\n//           //  const { sub: userId } = jwtDecode(token.data.access.token);\n//           //         console.log(userId);\n//                     // const loadUserDetails = (userId) => {\n//                     //   api.get('/v1/users'`${userId}`).then((user) => {\n//                     //     console.log(user.data);\n//                     //     dispatch(actions.loadUserSuccess(user.data));\n//                     //   });\n//                     // };\n//                     // loadUserDetails(userId);\n//           });\n//   }\n// }\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n\nexport const loadUser = refreshToken => {\n  return dispatch => {\n    dispatch(actions.loadUserRequest());\n    api.post(`/v1/auth/refresh-tokens`, refreshToken).then(token => {\n      console.log(refreshToken);\n      localStorage.setItem(\"token\", token.data.access.token);\n      localStorage.setItem(`refreshToken`, token.data.refresh.token);\n      const {\n        sub: userId\n      } = jwtDecode(token.data.access.token);\n      console.log(userId);\n\n      const loadUserDetails = userId => {\n        api.get(`/v1/users/${userId}`).then(user => {\n          console.log(user.data);\n          dispatch(actions.loadUserSuccess(user.data));\n        });\n      };\n\n      loadUserDetails(userId);\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.loadUserFailure(errorMessage));\n      toast.error(error.errorMessage, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n}; // export const fetchUsers = () => {\n//   return dispatch => {\n//     dispatch(actions.fetchUsersRequest);\n//     api\n//       .get(\"/v1/users\")\n//       .then(response => {\n//         const users = response.data;\n//         console.log(users);\n//         dispatch(actions.fetchUsersSucess(users));\n//       })\n//       .catch(error => {\n//         const errorMsg = error.message;\n//         dispatch(actions.fetchUsersFailure(errorMsg));\n//       });\n//   };\n// };\n\nexport const signIn = user => {\n  return dispatch => {\n    dispatch(actions.userLoginRequest());\n    api.post(`v1/auth/login`, user).then(token => {\n      // console.log(token)\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userLoginSuccess(token));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userLoginFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n};\nexport const logOut = () => {\n  localStorage.removeItem(\"token\"); // localStorage.removeItem(\"refreshToken\");\n\n  localStorage.removeItem(\"redux\");\n  return dispatch => {\n    dispatch(actions.userLogout());\n  };\n};","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/authActions.js"],"names":["api","toast","actions","jwtDecode","getUsers","results","dispatch","fetchUserBegin","get","then","response","console","log","fetchUserSuccess","catch","error","errorMessage","message","fetchUserFailure","position","POSITION","TOP_RIGHT","signUp","user","userSignupRequest","post","token","localStorage","setItem","data","tokens","access","userSignupSuccess","userSignupFailure","loadUser","refreshToken","loadUserRequest","refresh","sub","userId","loadUserDetails","loadUserSuccess","loadUserFailure","signIn","userLoginRequest","userLoginSuccess","userLoginFailure","logOut","removeItem","userLogout"],"mappings":"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","sourcesContent":["import api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\";\nimport jwtDecode from \"jwt-decode\";\n \n\n   export const getUsers = (results) => {\n    return (dispatch) => {\n      dispatch(actions.fetchUserBegin());\n      api\n        .get(`v1/users`, results)\n        .then(function (response) {\n          console.log(response)\n          dispatch(actions.fetchUserSuccess(response));\n          \n        })\n        .catch((error) => {\n          const errorMessage = error.message;\n          dispatch(actions.fetchUserFailure(errorMessage));\n          console.log(error);\n          toast.error(error.message, {\n            position: toast.POSITION.TOP_RIGHT,\n          });\n        });\n    };\n  };\n  \n  // export const addUser = (user) => {\n  //   return (dispatch) => {\n  //     setTimeout(() => {\n  //       dispatch(addUserAsync(user)); //we call the dispatch function inside another dispatch with help of redux thunk\n  //     }, 5000);\n  //   };\n  // };\n\n//  export const addUser = (user) => {\n//   return (dispatch) => {\n    \n//     return api.post('/v1/users',user)\n      \n//       .then(response => {\n//         localStorage.setItem(\"token\", response.data.tokens.access.token);\n//         dispatch(actions.addUserAsync(response))\n//       })\n//       .catch(error => {\n//         throw(error);\n//       });\n//   };\n// };\n\n\n\nexport const signUp = (user) => {\n  return (dispatch) => {\n    dispatch(actions.userSignupRequest());\n    api\n      .post(`v1/auth/register`, user)\n      .then((token) => {\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\n        dispatch(actions.userSignupSuccess(token));\n        \n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.userSignupFailure(errorMessage));\n        console.log(error);\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\n\n\n\n// export const loadUser = (refreshToken) => {\n//   return dispatch => {\n//     dispatch(actions.loadUserRequest());\n//       api.post('/v1/auth/refresh-tokens', refreshToken)\n//           .then(token => {\n//             console.log(refreshToken)\n//            localStorage.setItem(\"token\", token.data.access.token);\n\n//           //  const { sub: userId } = jwtDecode(token.data.access.token);\n//           //         console.log(userId);\n//                     // const loadUserDetails = (userId) => {\n//                     //   api.get('/v1/users'`${userId}`).then((user) => {\n//                     //     console.log(user.data);\n//                     //     dispatch(actions.loadUserSuccess(user.data));\n//                     //   });\n//                     // };\n//                     // loadUserDetails(userId);\n//           });\n//   }\n// }\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n\n\n\nexport const loadUser = (refreshToken) => {\n  return (dispatch) => {\n    dispatch(actions.loadUserRequest());\n    api\n      .post(`/v1/auth/refresh-tokens`, refreshToken)\n      .then((token) => {\n        console.log(refreshToken)\n        localStorage.setItem(\"token\", token.data.access.token);\n         localStorage.setItem(`refreshToken`, token.data.refresh.token);\n         const { sub: userId } = jwtDecode(token.data.access.token);\n                 console.log(userId);\n                 const loadUserDetails = (userId) => {\n                   api.get(`/v1/users/${userId}`).then((user) => {\n                     console.log(user.data);\n                     dispatch(actions.loadUserSuccess(user.data));\n                   });\n                 };\n                 loadUserDetails(userId);\n       \n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.loadUserFailure(errorMessage));\n        toast.error(error.errorMessage, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\n\n// export const fetchUsers = () => {\n//   return dispatch => {\n//     dispatch(actions.fetchUsersRequest);\n//     api\n//       .get(\"/v1/users\")\n//       .then(response => {\n//         const users = response.data;\n//         console.log(users);\n//         dispatch(actions.fetchUsersSucess(users));\n//       })\n//       .catch(error => {\n//         const errorMsg = error.message;\n//         dispatch(actions.fetchUsersFailure(errorMsg));\n//       });\n//   };\n// };\n\n\n\n\n\n\n\n\n\nexport const signIn = (user) => {\n  return (dispatch) => {\n    dispatch(actions.userLoginRequest());\n    api\n      .post(`v1/auth/login`, user)\n      .then((token) => {\n        // console.log(token)\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\n        dispatch(actions.userLoginSuccess(token));\n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.userLoginFailure(errorMessage));\n        console.log(error);\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\n\n\n\nexport const logOut = () => {\n  localStorage.removeItem(\"token\");\n  // localStorage.removeItem(\"refreshToken\");\n  localStorage.removeItem(\"redux\");\n  return (dispatch) => {\n    dispatch(actions.userLogout());\n  };\n};\n"]},"metadata":{},"sourceType":"module"}