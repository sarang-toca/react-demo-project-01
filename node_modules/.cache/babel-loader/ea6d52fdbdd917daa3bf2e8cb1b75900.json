{"ast":null,"code":"import api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\"; //  import jwtDecode from \"jwt-decode\";\n\nexport const fetchGithubData = () => {\n  return dispatch => {\n    console.log(\"sachin\");\n    return api.get('/v1/users').then(response => {\n      dispatch(actions.fetchData(response.data));\n    }).catch(error => {\n      throw error;\n    });\n  };\n};\nexport const signUp = user => {\n  return dispatch => {\n    dispatch(actions.userSignupRequest());\n    api.post(`v1/auth/register`, user).then(token => {\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userSignupSuccess(token));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userSignupFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n}; // export const loadUser = (refreshToken) => {\n//   return dispatch => {\n//     dispatch(actions.loadUserRequest());\n//       api.post('/v1/auth/refresh-tokens', refreshToken)\n//           .then(token => {\n//             console.log(refreshToken)\n//            localStorage.setItem(\"token\", token.data.access.token);\n//           //  const { sub: userId } = jwtDecode(token.data.access.token);\n//           //         console.log(userId);\n//                     // const loadUserDetails = (userId) => {\n//                     //   api.get('/v1/users'`${userId}`).then((user) => {\n//                     //     console.log(user.data);\n//                     //     dispatch(actions.loadUserSuccess(user.data));\n//                     //   });\n//                     // };\n//                     // loadUserDetails(userId);\n//           });\n//   }\n// }\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n// export const fetchUsers = () => {\n//   return dispatch => {\n//     dispatch(actions.fetchUsersRequest);\n//     api\n//       .get(\"/v1/users\")\n//       .then(response => {\n//         const users = response.data;\n//         console.log(users);\n//         dispatch(actions.fetchUsersSucess(users));\n//       })\n//       .catch(error => {\n//         const errorMsg = error.message;\n//         dispatch(actions.fetchUsersFailure(errorMsg));\n//       });\n//   };\n// };\n\nexport const signIn = user => {\n  return dispatch => {\n    dispatch(actions.userLoginRequest());\n    api.post(`v1/auth/login`, user).then(token => {\n      // console.log(token)\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userLoginSuccess(token));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userLoginFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n};\nexport const logOut = () => {\n  localStorage.removeItem(\"token\"); // localStorage.removeItem(\"refreshToken\");\n\n  localStorage.removeItem(\"redux\");\n  return dispatch => {\n    dispatch(actions.userLogout());\n  };\n};","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/authActions.js"],"names":["api","toast","actions","fetchGithubData","dispatch","console","log","get","then","response","fetchData","data","catch","error","signUp","user","userSignupRequest","post","token","localStorage","setItem","tokens","access","userSignupSuccess","errorMessage","message","userSignupFailure","position","POSITION","TOP_RIGHT","signIn","userLoginRequest","userLoginSuccess","userLoginFailure","logOut","removeItem","userLogout"],"mappings":"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","sourcesContent":["import api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\";\n//  import jwtDecode from \"jwt-decode\";\n\n\n\n export const fetchGithubData = () => {\n  return (dispatch) => {\n    console.log(\"sachin\")\n    return api.get('/v1/users')\n      .then(response => {\n        dispatch(actions.fetchData(response.data))\n      })\n      .catch(error => {\n        throw(error);\n      });\n  };\n};\n\nexport const signUp = (user) => {\n  return (dispatch) => {\n    dispatch(actions.userSignupRequest());\n    api\n      .post(`v1/auth/register`, user)\n      .then((token) => {\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\n        dispatch(actions.userSignupSuccess(token));\n        \n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.userSignupFailure(errorMessage));\n        console.log(error);\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\n\n\n\n// export const loadUser = (refreshToken) => {\n//   return dispatch => {\n//     dispatch(actions.loadUserRequest());\n//       api.post('/v1/auth/refresh-tokens', refreshToken)\n//           .then(token => {\n//             console.log(refreshToken)\n//            localStorage.setItem(\"token\", token.data.access.token);\n\n//           //  const { sub: userId } = jwtDecode(token.data.access.token);\n//           //         console.log(userId);\n//                     // const loadUserDetails = (userId) => {\n//                     //   api.get('/v1/users'`${userId}`).then((user) => {\n//                     //     console.log(user.data);\n//                     //     dispatch(actions.loadUserSuccess(user.data));\n//                     //   });\n//                     // };\n//                     // loadUserDetails(userId);\n//           });\n//   }\n// }\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n\n\n\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n\n\n// export const fetchUsers = () => {\n//   return dispatch => {\n//     dispatch(actions.fetchUsersRequest);\n//     api\n//       .get(\"/v1/users\")\n//       .then(response => {\n//         const users = response.data;\n//         console.log(users);\n//         dispatch(actions.fetchUsersSucess(users));\n//       })\n//       .catch(error => {\n//         const errorMsg = error.message;\n//         dispatch(actions.fetchUsersFailure(errorMsg));\n//       });\n//   };\n// };\n\n\n\n\n\n\n\n\n\nexport const signIn = (user) => {\n  return (dispatch) => {\n    dispatch(actions.userLoginRequest());\n    api\n      .post(`v1/auth/login`, user)\n      .then((token) => {\n        // console.log(token)\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\n        dispatch(actions.userLoginSuccess(token));\n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.userLoginFailure(errorMessage));\n        console.log(error);\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\nexport const logOut = () => {\n  localStorage.removeItem(\"token\");\n  // localStorage.removeItem(\"refreshToken\");\n  localStorage.removeItem(\"redux\");\n  return (dispatch) => {\n    dispatch(actions.userLogout());\n  };\n};\n"]},"metadata":{},"sourceType":"module"}