{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Create.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles, TextField, Button, CircularProgress } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createUser } from \"../actions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"50ch\"\n    },\n    buttonProgress: {\n      color: \"#fff\",\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      marginTop: -12,\n      marginLeft: -12\n    }\n  }\n}));\n\nfunction Create() {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const loading = useSelector(state => {\n    var _state$users;\n\n    return (_state$users = state.users) === null || _state$users === void 0 ? void 0 : _state$users.loading;\n  });\n  const [inputs, setInputs] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    handleValidate(inputs);\n  }, [inputs]);\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(inputs => ({ ...inputs,\n      [name]: value\n    }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSubmitted(true);\n\n    if (handleValidate(inputs)) {\n      dispatch(createUser(inputs, history));\n    }\n  }\n\n  function handleValidate(values) {\n    const errors = {};\n    let isValid = true;\n\n    if (!values.name) {\n      isValid = false;\n      errors.name = \"Please enter name\";\n    }\n\n    if (!values.email) {\n      isValid = false;\n      errors.email = \"Please enter email.\";\n    }\n\n    if (!values.password) {\n      isValid = false;\n      errors.password = \"Please enter password\";\n    }\n\n    if (!values.role) {\n      isValid = false;\n      errors.role = \"Please enter role\";\n    }\n\n    setErrors(errors);\n    return isValid;\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Create User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n      },\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        name: \"name\",\n        label: \"Name\",\n        value: inputs.name,\n        onChange: handleChange,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        name: \"email\",\n        label: \"email\",\n        value: inputs.email,\n        onChange: handleChange,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        value: inputs.password,\n        onChange: handleChange,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        name: \"role\",\n        label: \"role\",\n        value: inputs.role,\n        onChange: handleChange,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: loading,\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: submitted,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24,\n        className: classes.buttonProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"/FuTXcp8oqlg6LiC1cB38lqAFnQ=\", false, function () {\n  return [useStyles, useHistory, useDispatch, useSelector];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Create.jsx"],"names":["React","useState","useEffect","useHistory","makeStyles","TextField","Button","CircularProgress","useSelector","useDispatch","createUser","useStyles","theme","root","margin","spacing","width","buttonProgress","color","position","top","left","marginTop","marginLeft","Create","classes","history","dispatch","loading","state","users","inputs","setInputs","name","email","password","role","errors","setErrors","submitted","setSubmitted","handleValidate","handleChange","e","value","target","handleSubmit","preventDefault","values","isValid","textAlign","display","justifyContent","alignItems","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  makeStyles,\n  TextField,\n  Button,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createUser } from \"../actions/user\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"50ch\",\n    },\n    buttonProgress: {\n      color: \"#fff\",\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  },\n}));\n\nfunction Create() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.users?.loading);\n  const [inputs, setInputs] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n\n  useEffect(() => {\n    handleValidate(inputs);\n  }, [inputs]);\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSubmitted(true);\n    if (handleValidate(inputs)) {\n      dispatch(createUser(inputs, history));\n    }\n  }\n\n  function handleValidate(values) {\n    const errors = {};\n    let isValid = true;\n    if (!values.name) {\n      isValid = false;\n      errors.name = \"Please enter name\";\n    }\n    if (!values.email) {\n      isValid = false;\n      errors.email = \"Please enter email.\";\n    }\n    if (!values.password) {\n      isValid = false;\n      errors.password = \"Please enter password\";\n    }\n    if (!values.role) {\n        isValid = false;\n        errors.role = \"Please enter role\";\n      }\n    setErrors(errors);\n    return isValid;\n  }\n\n  return (\n    <React.Fragment>\n      <h1 style={{ textAlign: \"center\" }}>Create User</h1>\n      <form\n        className={classes.root}\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n        }}\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          type=\"text\"\n          name=\"name\"\n          label=\"Name\"\n          value={inputs.name}\n          onChange={handleChange}\n          fullWidth\n        />\n        <TextField\n          type=\"text\"\n          name=\"email\"\n          label=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          fullWidth\n        />\n        <TextField\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={inputs.password}\n          onChange={handleChange}\n          fullWidth\n        />\n                <TextField\n          type=\"text\"\n          name=\"role\"\n          label=\"role\"\n          value={inputs.role}\n          onChange={handleChange}\n          fullWidth\n        />\n        <Button\n          disabled={loading}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={submitted}\n        >\n          Submit\n        </Button>\n        {loading && (\n          <CircularProgress size={24} className={classes.buttonProgress} />\n        )}\n      </form>\n    </React.Fragment>\n  );\n}\n\nexport default Create;"]},"metadata":{},"sourceType":"module"}