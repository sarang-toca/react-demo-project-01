{"ast":null,"code":"import { GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILURE, // GET_USER_BYID_REQUEST,\n// GET_USER_BYID_SUCCESS,\n// GET_USER_BYID_FAILURE,\nDELETE_USER_BYID_REQUEST, DELETE_USER_BYID_SUCCESS, DELETE_USER_BYID_FAILURE } from \"./usersActiontypes\";\nimport api from \"../services/api\"; //   const axios = require(\"axios\");\n//   export function createUser(data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: CREATE_USER_REQUEST });\n//       axios\n//         .post(`${api_url}/api/user`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: CREATE_USER_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: CREATE_USER_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n\nexport const getUsers = (name, email, role) => async dispatch => {\n  dispatch({\n    type: GET_USER_REQUEST\n  }); // const user1 = useSelector((state) => state.user);\n  // console.log(\"users-data\", name1)\n\n  try {\n    if (localStorage.getItem(\"token\")) {\n      const response = await api.get('/v1/users', {\n        name: name,\n        email: email,\n        role: role // description: description,\n\n      });\n      console.log(\"sachin\");\n      const res = response.data;\n      dispatch({\n        type: GET_USER_SUCCESS,\n        payload: res\n      });\n    } // users${name}\n    // console.log(\"users\", response);\n\n  } catch (error) {\n    // console.log(error.response);\n    const {\n      response\n    } = error;\n    console.log(error.response.status);\n    console.log(error.response.data.error); //   console.log(\"err\", response);\n\n    if (response !== undefined) {\n      dispatch({\n        type: GET_USER_FAILURE,\n        payload: response.data\n      });\n    } //   const { response } = error;\n    //       console.log(\"err\", response);\n    //       if (response !== undefined) {\n    //         dispatch({\n    //           type: GET_USER_FAILURE,\n    //           payload: response.data,\n    //         });\n    //         alert(response.data?.message);\n    //       }\n\n  }\n}; //   export function getUsers() {\n//    return (dispatch) => {\n//       dispatch({ type: GET_USER_REQUEST });\n//       try {\n//         if (localStorage.getItem(\"token\")) {\n//           const response = api.get(`/v1/users`);\n//           const res = response.data;\n//           dispatch({\n//             type: GET_USER_SUCCESS,\n//             payload: res.data,\n//           });\n//         }\n//         // users${name}\n//         // console.log(\"users\", response);\n//       } catch (error) {\n//         // console.log(error.response);\n//         const { response } = error;\n//           console.log(error.response.status) \n//      console.log(error.response.data.error) \n//         //   console.log(\"err\", response);\n//           if (error.response.status===401) {\n//             dispatch({\n//               type: GET_USER_FAILURE,\n//               payload: response?.data,\n//             });\n//           }\n//         // toast.error(error.response?.data?.message, {\n//         //   position: toast.POSITION.CENTER_RIGHT,\n//         // });\n//     //   api\n//     //     .get('/v1/users')\n//     //     .then(function (response) {\n//     //         console.log(\"sachin\")\n//     //         localStorage.setItem(\"token\", response.data.tokens.access.token);\n//     //       console.log(\"res =>\", response.data.tokens);\n//     //       dispatch({\n//     //         type: GET_USER_SUCCESS,\n//     //         payload: response.data,\n//     //       });\n//     //     })\n//     //     .catch(function (error) {\n//     //       const { response } = error;\n//     //       console.log(error.response.status) \n//     //  console.log(error.response.data.error) \n//     //     //   console.log(\"err\", response);\n//     //       if (error.response.status===401) {\n//     //         dispatch({\n//     //           type: GET_USER_FAILURE,\n//     //           payload: response?.data,\n//     //         });\n//     //       }\n//     //     });\n//     };\n//   }\n// }\n//   export function getUserById(id) {\n//     return (dispatch) => {\n//       dispatch({ type: GET_USER_BYID_REQUEST });\n//       api\n//         .get(`/v1/users/${id}`)\n//         .then(function (response) {\n//             localStorage.setItem(\"token\", response.data.tokens.access.token);\n//           console.log(\"res =>\", response.data.tokens);\n//           dispatch({\n//             type: GET_USER_BYID_SUCCESS,\n//             payload: response.data.tokens,\n//           });\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: GET_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//           }\n//         });\n//     };\n//   }\n\nexport function deleteUserById(id) {\n  return dispatch => {\n    dispatch({\n      type: DELETE_USER_BYID_REQUEST\n    });\n    api.delete(`/v1/users/${id}`).then(function (res) {\n      console.log(\"res =>\", res.data);\n      dispatch({\n        type: DELETE_USER_BYID_SUCCESS,\n        payload: id\n      });\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        var _response$data;\n\n        dispatch({\n          type: DELETE_USER_BYID_FAILURE,\n          payload: response.data\n        });\n        alert((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message);\n      }\n    });\n  };\n} //   export function updateUserById(id, data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: UPDATE_USER_BYID_REQUEST });\n//       axios\n//         .put(`${api_url}/api/user/${id}`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: UPDATE_USER_BYID_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: UPDATE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n//   export function deleteUserById(id) {\n//     return (dispatch) => {\n//       dispatch({ type: DELETE_USER_BYID_REQUEST });\n//       axios\n//         .delete(`${api_url}/api/user/${id}`)\n//         .then(function (res) {\n//           console.log(\"res =>\", res.data);\n//           dispatch({\n//             type: DELETE_USER_BYID_SUCCESS,\n//             payload: id,\n//           });\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: DELETE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/user.js"],"names":["GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","DELETE_USER_BYID_REQUEST","DELETE_USER_BYID_SUCCESS","DELETE_USER_BYID_FAILURE","api","getUsers","name","email","role","dispatch","type","localStorage","getItem","response","get","console","log","res","data","payload","error","status","undefined","deleteUserById","id","delete","then","catch","alert","message"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,EAII;AACA;AACA;AAEAC,wBARJ,EASEC,wBATF,EAUEC,wBAVF,QAWS,oBAXT;AAYE,OAAOC,GAAP,MAAiB,iBAAjB,C,CACF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GACnB,CAACC,IAAD,EAAMC,KAAN,EAAYC,IAAZ,KACA,MAAOC,QAAP,IAAoB;AAClBA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR,CADkB,CAElB;AACA;;AAEA,MAAI;AACF,QAAIa,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAEjC,YAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAJ,CAAQ,WAAR,EAAoB;AACvCR,QAAAA,IAAI,EAAEA,IADiC;AAEvCC,QAAAA,KAAK,EAAEA,KAFgC;AAGvCC,QAAAA,IAAI,EAAEA,IAHiC,CAIvC;;AAJuC,OAApB,CAAvB;AAMAO,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,YAAMC,GAAG,GAAGJ,QAAQ,CAACK,IAArB;AACAT,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEX,gBADC;AAEPoB,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAID,KAfC,CAgBF;AACA;;AACD,GAlBD,CAkBE,OAAOG,KAAP,EAAc;AACd;AAEA,UAAM;AAAEP,MAAAA;AAAF,QAAeO,KAArB;AACUL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACP,QAAN,CAAeQ,MAA3B;AACLN,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACP,QAAN,CAAeK,IAAf,CAAoBE,KAAhC,EALS,CAMN;;AACE,QAAIP,QAAQ,KAAKS,SAAjB,EAA4B;AAC1Bb,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEV,gBADC;AAEPmB,QAAAA,OAAO,EAAEN,QAAQ,CAACK;AAFX,OAAD,CAAR;AAID,KAZG,CAchB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC;AACF,CAjDI,C,CAoDP;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,OAAO,SAASK,cAAT,CAAwBC,EAAxB,EAA4B;AACjC,SAAQf,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACAG,IAAAA,GAAG,CACAqB,MADH,CACW,aAAYD,EAAG,EAD1B,EAEGE,IAFH,CAEQ,UAAUT,GAAV,EAAe;AACnBF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,GAAG,CAACC,IAA1B;AACAT,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER,wBADC;AAEPiB,QAAAA,OAAO,EAAEK;AAFF,OAAD,CAAR;AAID,KARH,EASGG,KATH,CASS,UAAUP,KAAV,EAAiB;AACtB,YAAM;AAAEP,QAAAA;AAAF,UAAeO,KAArB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,QAAnB;;AACA,UAAIA,QAAQ,KAAKS,SAAjB,EAA4B;AAAA;;AAC1Bb,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEP,wBADC;AAEPgB,UAAAA,OAAO,EAAEN,QAAQ,CAACK;AAFX,SAAD,CAAR;AAIAU,QAAAA,KAAK,mBAACf,QAAQ,CAACK,IAAV,mDAAC,eAAeW,OAAhB,CAAL;AACD;AACF,KAnBH;AAoBD,GAtBD;AAuBD,C,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    GET_USER_FAILURE,\n    // GET_USER_BYID_REQUEST,\n    // GET_USER_BYID_SUCCESS,\n    // GET_USER_BYID_FAILURE,\n    \n    DELETE_USER_BYID_REQUEST,\n  DELETE_USER_BYID_SUCCESS,\n  DELETE_USER_BYID_FAILURE,\n  } from \"./usersActiontypes\";\n  import api  from \"../services/api\";\n//   const axios = require(\"axios\");\n  \n//   export function createUser(data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: CREATE_USER_REQUEST });\n//       axios\n//         .post(`${api_url}/api/user`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: CREATE_USER_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: CREATE_USER_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n  \nexport const getUsers =\n  (name,email,role) =>\n  async (dispatch) => {\n    dispatch({ type: GET_USER_REQUEST });\n    // const user1 = useSelector((state) => state.user);\n    // console.log(\"users-data\", name1)\n\n    try {\n      if (localStorage.getItem(\"token\")) {\n      \n        const response = await api.get('/v1/users',{\n            name: name,\n            email: email,\n            role: role,\n            // description: description,\n        });\n        console.log(\"sachin\")\n        const res = response.data;\n        dispatch({\n          type: GET_USER_SUCCESS,\n          payload: res,\n        });\n      }\n      // users${name}\n      // console.log(\"users\", response);\n    } catch (error) {\n      // console.log(error.response);\n\n      const { response } = error;\n                console.log(error.response.status) \n           console.log(error.response.data.error) \n              //   console.log(\"err\", response);\n                if (response !== undefined) {\n                  dispatch({\n                    type: GET_USER_FAILURE,\n                    payload: response.data,\n                  });\n                }\n\n    //   const { response } = error;\n    //       console.log(\"err\", response);\n    //       if (response !== undefined) {\n    //         dispatch({\n    //           type: GET_USER_FAILURE,\n    //           payload: response.data,\n    //         });\n    //         alert(response.data?.message);\n    //       }\n    }\n  };\n\n\n//   export function getUsers() {\n  \n//    return (dispatch) => {\n       \n//       dispatch({ type: GET_USER_REQUEST });\n        \n//       try {\n//         if (localStorage.getItem(\"token\")) {\n//           const response = api.get(`/v1/users`);\n//           const res = response.data;\n//           dispatch({\n//             type: GET_USER_SUCCESS,\n//             payload: res.data,\n//           });\n//         }\n//         // users${name}\n//         // console.log(\"users\", response);\n//       } catch (error) {\n//         // console.log(error.response);\n//         const { response } = error;\n//           console.log(error.response.status) \n//      console.log(error.response.data.error) \n//         //   console.log(\"err\", response);\n//           if (error.response.status===401) {\n//             dispatch({\n//               type: GET_USER_FAILURE,\n//               payload: response?.data,\n//             });\n//           }\n//         // toast.error(error.response?.data?.message, {\n//         //   position: toast.POSITION.CENTER_RIGHT,\n//         // });\n//     //   api\n//     //     .get('/v1/users')\n       \n//     //     .then(function (response) {\n//     //         console.log(\"sachin\")\n//     //         localStorage.setItem(\"token\", response.data.tokens.access.token);\n//     //       console.log(\"res =>\", response.data.tokens);\n          \n//     //       dispatch({\n//     //         type: GET_USER_SUCCESS,\n//     //         payload: response.data,\n//     //       });\n//     //     })\n//     //     .catch(function (error) {\n//     //       const { response } = error;\n//     //       console.log(error.response.status) \n//     //  console.log(error.response.data.error) \n//     //     //   console.log(\"err\", response);\n//     //       if (error.response.status===401) {\n//     //         dispatch({\n//     //           type: GET_USER_FAILURE,\n//     //           payload: response?.data,\n//     //         });\n//     //       }\n//     //     });\n//     };\n//   }\n// }\n  \n//   export function getUserById(id) {\n//     return (dispatch) => {\n//       dispatch({ type: GET_USER_BYID_REQUEST });\n//       api\n//         .get(`/v1/users/${id}`)\n//         .then(function (response) {\n//             localStorage.setItem(\"token\", response.data.tokens.access.token);\n//           console.log(\"res =>\", response.data.tokens);\n//           dispatch({\n//             type: GET_USER_BYID_SUCCESS,\n//             payload: response.data.tokens,\n//           });\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: GET_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//           }\n//         });\n//     };\n//   }\n\n  export function deleteUserById(id) {\n    return (dispatch) => {\n      dispatch({ type: DELETE_USER_BYID_REQUEST });\n      api\n        .delete(`/v1/users/${id}`)\n        .then(function (res) {\n          console.log(\"res =>\", res.data);\n          dispatch({\n            type: DELETE_USER_BYID_SUCCESS,\n            payload: id,\n          });\n        })\n        .catch(function (error) {\n          const { response } = error;\n          console.log(\"err\", response);\n          if (response !== undefined) {\n            dispatch({\n              type: DELETE_USER_BYID_FAILURE,\n              payload: response.data,\n            });\n            alert(response.data?.message);\n          }\n        });\n    };\n  }\n  \n//   export function updateUserById(id, data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: UPDATE_USER_BYID_REQUEST });\n//       axios\n//         .put(`${api_url}/api/user/${id}`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: UPDATE_USER_BYID_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: UPDATE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n  \n//   export function deleteUserById(id) {\n//     return (dispatch) => {\n//       dispatch({ type: DELETE_USER_BYID_REQUEST });\n//       axios\n//         .delete(`${api_url}/api/user/${id}`)\n//         .then(function (res) {\n//           console.log(\"res =>\", res.data);\n//           dispatch({\n//             type: DELETE_USER_BYID_SUCCESS,\n//             payload: id,\n//           });\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: DELETE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }"]},"metadata":{},"sourceType":"module"}