{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers } from \"../actions/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [name, setName] = useState(0);\n  const [email, setEmail] = useState(0);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [name, email, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: email.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RBmM8ar2W1gPjg1wngPPjx607Tc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App; // import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n// import { getUsers, deleteUserById } from \"../actions/users\";\n// import PropTypes from \"prop-types\";\n// class Read extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n//   componentDidMount() {\n//     this.props.getUsers();\n//   }\n//   handleDelete = (id) => {\n//     const result = window.confirm(\"Are you sure to delete?\");\n//     if (result) {\n//       this.props.deleteUserById(id);\n//     }\n//   };\n//   render() {\n//     const { items } = this.props;\n//     return (\n//       <React.Fragment>\n//         <h5 style={{ textAlign: \"center\" }} className=\"my-4\">\n//           ReactJs CRUD App With React Redux Thunk\n//         </h5>\n//         <div className=\"col-md-6 offset-md-3\">\n//           <Link to={`/create`} className=\"btn btn-success\">\n//             Create\n//           </Link>\n//           <table className=\"table\">\n//             <thead>\n//               <tr>\n//                 <th scope=\"col\">Sr.No.</th>\n//                 <th scope=\"col\">Name</th>\n//                 <th scope=\"col\">Email</th>\n//                 <th scope=\"col\">Role</th>\n//                 <th scope=\"col\">Action</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {items?.map((item, index) => {\n//                   console.log(item)\n//                 return (\n//                   <tr key={index}>\n//                     <th scope=\"row\">{index + 1}</th>\n//                     <td>{item.name}</td>\n//                     <td>{item.email}</td>\n//                     <td>{item.role}</td>\n//                     <td>\n//                       <Link\n//                         to={`/update/${item._id}`}\n//                         className=\"btn btn-success mx-1\"\n//                       >\n//                         Update\n//                       </Link>\n//                       <button\n//                         className=\"btn btn-danger mx-1\"\n//                         onClick={() => this.handleDelete(item._id)}\n//                       >\n//                         Delete\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 );\n//               })}\n//             </tbody>\n//           </table>\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\n// Read.propTypes = {\n// \tgetUsers: PropTypes.func.isRequired,\n// \tdeleteUserById: PropTypes.func,\n//     items: PropTypes.array,\n// };\n// function mapState(state) {\n//   const { items } = state.users;\n//   return { items };\n// }\n// const actionCreators = {\n//   getUsers: getUsers,\n//   deleteUserById: deleteUserById,\n// };\n// const connected = connect(mapState, actionCreators)(Read);\n// export { connected as ReadPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getUsers","App","name","setName","email","setEmail","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEC,SAASC,QAAT,QAAyB,kBAAzB;;;AAED,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACN,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEN,CAACE,IAAD,EAAME,KAAN,EAAaE,QAAb,CAFM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,gBAAKJ,IAAI,CAACA;AAAV;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,gBAAKE,KAAK,CAACA;AAAX;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAxBD;;GAAMH,G;UAGaH,W;;;KAHbG,G;AA0BN,eAAeA,GAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n import { getUsers } from \"../actions/users\";\n\nconst App = () => {\n  const [name, setName] = useState(0);\n  const [email, setEmail] = useState(0);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [name,email, dispatch]);\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Hello</h1>\n      {/* {posts.map((post)=>(\n        <h1>{post.title}</h1>\n      ))} */}\n      {/* Trying to display title and description */}\n      <h1>{name.name}</h1>  \n      <h1>{email.email}</h1>  \n\n\n    </div>\n  );\n};\n\nexport default App;\n\n\n// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n// import { getUsers, deleteUserById } from \"../actions/users\";\n// import PropTypes from \"prop-types\";\n// class Read extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n\n//   componentDidMount() {\n//     this.props.getUsers();\n//   }\n\n//   handleDelete = (id) => {\n//     const result = window.confirm(\"Are you sure to delete?\");\n//     if (result) {\n//       this.props.deleteUserById(id);\n//     }\n//   };\n\n//   render() {\n//     const { items } = this.props;\n//     return (\n//       <React.Fragment>\n//         <h5 style={{ textAlign: \"center\" }} className=\"my-4\">\n//           ReactJs CRUD App With React Redux Thunk\n//         </h5>\n//         <div className=\"col-md-6 offset-md-3\">\n//           <Link to={`/create`} className=\"btn btn-success\">\n//             Create\n//           </Link>\n//           <table className=\"table\">\n//             <thead>\n//               <tr>\n//                 <th scope=\"col\">Sr.No.</th>\n//                 <th scope=\"col\">Name</th>\n//                 <th scope=\"col\">Email</th>\n//                 <th scope=\"col\">Role</th>\n//                 <th scope=\"col\">Action</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {items?.map((item, index) => {\n//                   console.log(item)\n//                 return (\n//                   <tr key={index}>\n                      \n//                     <th scope=\"row\">{index + 1}</th>\n//                     <td>{item.name}</td>\n//                     <td>{item.email}</td>\n//                     <td>{item.role}</td>\n//                     <td>\n//                       <Link\n//                         to={`/update/${item._id}`}\n//                         className=\"btn btn-success mx-1\"\n//                       >\n//                         Update\n//                       </Link>\n//                       <button\n//                         className=\"btn btn-danger mx-1\"\n//                         onClick={() => this.handleDelete(item._id)}\n//                       >\n//                         Delete\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 );\n//               })}\n//             </tbody>\n//           </table>\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\n\n// Read.propTypes = {\n// \tgetUsers: PropTypes.func.isRequired,\n// \tdeleteUserById: PropTypes.func,\n//     items: PropTypes.array,\n  \n// };\n\n// function mapState(state) {\n//   const { items } = state.users;\n//   return { items };\n// }\n\n// const actionCreators = {\n//   getUsers: getUsers,\n//   deleteUserById: deleteUserById,\n// };\n\n// const connected = connect(mapState, actionCreators)(Read);\n// export { connected as ReadPage };"]},"metadata":{},"sourceType":"module"}