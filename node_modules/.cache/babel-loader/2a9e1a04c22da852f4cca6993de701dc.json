{"ast":null,"code":"import { getUsers, deleteUser, updateUser, getUser, addUser } from './actions';\nimport api from \"../services/api\"; /// add a new user\n\nexport const addUserAction = user => {\n  return dispatch => {\n    api.post('/v1/users', user).then(response => {\n      console.log(response);\n      dispatch(addUser(response.data));\n    }).catch(error => {\n      console.log(\"eror\", error);\n    });\n  };\n};\nexport const getUserAction = id => {\n  return dispatch => {\n    api.get(`/v1/users/${id}`).then(response => {\n      console.log(response);\n      dispatch(getUser(response.data));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const getUsersAction = () => {\n  return dispatch => {\n    api.get('v1/users').then(response => {\n      console.log(response); /// dispatch function dispatches an action which triggers state changes in the store\n\n      dispatch(getUsers(response.data));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const deleteUserAction = id => {\n  return dispatch => {\n    api.delete(`/v1/users/${id}`).then(response => {\n      console.log(response);\n      dispatch(deleteUser());\n      dispatch(getUsersAction());\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const updateUserAction = (data, id) => {\n  return dispatch => {\n    api.patch(`/v1/users/${id}`, {\n      name: data.name,\n      email: data.email\n    }).then(response => {\n      // history.push(\"/dashboard\", data);\n      console.log(response);\n      dispatch(updateUser(response.data));\n      dispatch(getUsersAction());\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/creators.js"],"names":["getUsers","deleteUser","updateUser","getUser","addUser","api","addUserAction","user","dispatch","post","then","response","console","log","data","catch","error","getUserAction","id","get","getUsersAction","deleteUserAction","delete","updateUserAction","patch","name","email"],"mappings":"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","sourcesContent":["import {  getUsers, deleteUser, updateUser, getUser, addUser  } from './actions';\n\nimport api from \"../services/api\";\n\n\n/// add a new user\nexport const addUserAction = (user) => {\n    return (dispatch) => {\n        api.post('/v1/users', user)\n            .then(response => {\n                console.log(response);\n                dispatch(addUser(response.data))\n            })\n            .catch(error => {\n                console.log(\"eror\", error);\n            });\n    }\n}\n\nexport const getUserAction = (id) => {\n    return (dispatch) => {\n        api.get(`/v1/users/${id}`)\n            .then(response => {\n                console.log(response);\n                dispatch(getUser(response.data)\n                );\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n}\n \nexport const getUsersAction = () => {\n    return (dispatch) => {\n        api.get('v1/users')\n            .then(response => {\n                console.log(response);\n                /// dispatch function dispatches an action which triggers state changes in the store\n                dispatch(getUsers(response.data)\n                );\n\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n}\n\n\nexport const deleteUserAction = (id) => {\n    return (dispatch) => {\n        api.delete(`/v1/users/${id}`)\n            .then(response => {\n                console.log(response);\n                dispatch(deleteUser());\n                dispatch(getUsersAction());\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n}\n\n\nexport const updateUserAction = (data, id ) => {\n    return (dispatch) => {\n        api.patch(`/v1/users/${id}`,{\n            \n            name: data.name,\n            email: data.email,\n          \n        })\n            .then(response => {\n                // history.push(\"/dashboard\", data);\n                console.log(response);\n                dispatch(updateUser(response.data));\n               \n                dispatch(getUsersAction());\n                \n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}