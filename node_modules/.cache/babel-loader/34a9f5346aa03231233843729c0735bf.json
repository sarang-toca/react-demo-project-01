{"ast":null,"code":"import { GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILURE, GET_USER_BYID_REQUEST, GET_USER_BYID_SUCCESS, GET_USER_BYID_FAILURE } from \"./usersActiontypes\";\nimport api from \"../services/api\"; //   const axios = require(\"axios\");\n//   export function createUser(data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: CREATE_USER_REQUEST });\n//       axios\n//         .post(`${api_url}/api/user`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: CREATE_USER_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: CREATE_USER_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n\nexport function getUsers() {\n  return dispatch => {\n    dispatch({\n      type: GET_USER_REQUEST\n    });\n    api.get('/v1/users').then(function (res) {\n      console.log(res);\n      console.log(\"res =>\", res.data);\n      this.user.authenticated = true;\n      dispatch({\n        type: GET_USER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(error.response.status);\n      console.log(error.response.data.error); //   console.log(\"err\", response);\n\n      if (error.response.status === 401) {\n        dispatch({\n          type: GET_USER_FAILURE,\n          payload: response === null || response === void 0 ? void 0 : response.data\n        });\n      }\n    });\n  };\n}\nexport function getUserById(id) {\n  return dispatch => {\n    dispatch({\n      type: GET_USER_BYID_REQUEST\n    });\n    api.get(`/v1/users/${id}`).then(function (res) {\n      console.log(\"res =>\", res.data);\n      dispatch({\n        type: GET_USER_BYID_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        dispatch({\n          type: GET_USER_BYID_FAILURE,\n          payload: response.data\n        });\n      }\n    });\n  };\n} //   export function updateUserById(id, data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: UPDATE_USER_BYID_REQUEST });\n//       axios\n//         .put(`${api_url}/api/user/${id}`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: UPDATE_USER_BYID_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: UPDATE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n//   export function deleteUserById(id) {\n//     return (dispatch) => {\n//       dispatch({ type: DELETE_USER_BYID_REQUEST });\n//       axios\n//         .delete(`${api_url}/api/user/${id}`)\n//         .then(function (res) {\n//           console.log(\"res =>\", res.data);\n//           dispatch({\n//             type: DELETE_USER_BYID_SUCCESS,\n//             payload: id,\n//           });\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: DELETE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/user.js"],"names":["GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","GET_USER_BYID_REQUEST","GET_USER_BYID_SUCCESS","GET_USER_BYID_FAILURE","api","getUsers","dispatch","type","get","then","res","console","log","data","user","authenticated","payload","catch","error","response","status","getUserById","id","undefined"],"mappings":"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","sourcesContent":["import {\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    GET_USER_FAILURE,\n    GET_USER_BYID_REQUEST,\n    GET_USER_BYID_SUCCESS,\n    GET_USER_BYID_FAILURE,\n    \n  } from \"./usersActiontypes\";\n  import api  from \"../services/api\";\n//   const axios = require(\"axios\");\n  \n//   export function createUser(data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: CREATE_USER_REQUEST });\n//       axios\n//         .post(`${api_url}/api/user`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: CREATE_USER_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: CREATE_USER_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n  \n  export function getUsers() {\n    return (dispatch) => {\n      dispatch({ type: GET_USER_REQUEST });\n      api\n        .get('/v1/users')\n        .then(function (res) {\n            console.log(res)\n          console.log(\"res =>\", res.data);\n          this.user.authenticated = true;\n          dispatch({\n            type: GET_USER_SUCCESS,\n            payload: res.data,\n          });\n        })\n        .catch(function (error) {\n          const { response } = error;\n          console.log(error.response.status) \n     console.log(error.response.data.error) \n        //   console.log(\"err\", response);\n          if (error.response.status===401) {\n            dispatch({\n              type: GET_USER_FAILURE,\n              payload: response?.data,\n            });\n          }\n        });\n    };\n  }\n  \n  export function getUserById(id) {\n    return (dispatch) => {\n      dispatch({ type: GET_USER_BYID_REQUEST });\n      api\n        .get(`/v1/users/${id}`)\n        .then(function (res) {\n          console.log(\"res =>\", res.data);\n          dispatch({\n            type: GET_USER_BYID_SUCCESS,\n            payload: res.data,\n          });\n        })\n        .catch(function (error) {\n          const { response } = error;\n          console.log(\"err\", response);\n          if (response !== undefined) {\n            dispatch({\n              type: GET_USER_BYID_FAILURE,\n              payload: response.data,\n            });\n          }\n        });\n    };\n  }\n  \n//   export function updateUserById(id, data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: UPDATE_USER_BYID_REQUEST });\n//       axios\n//         .put(`${api_url}/api/user/${id}`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: UPDATE_USER_BYID_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: UPDATE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n  \n//   export function deleteUserById(id) {\n//     return (dispatch) => {\n//       dispatch({ type: DELETE_USER_BYID_REQUEST });\n//       axios\n//         .delete(`${api_url}/api/user/${id}`)\n//         .then(function (res) {\n//           console.log(\"res =>\", res.data);\n//           dispatch({\n//             type: DELETE_USER_BYID_SUCCESS,\n//             payload: id,\n//           });\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: DELETE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }"]},"metadata":{},"sourceType":"module"}