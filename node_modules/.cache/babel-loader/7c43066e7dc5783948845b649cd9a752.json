{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { Link, useHistory } from \"react-router-dom\";\n// import { Form, Button, Label, Input, FormGroup } from \"reactstrap\";\n// // import { v4 as uuid } from \"uuid\";\n// import { addUser } from \"../actions/authActions\";\n// const AddUser = () => {\n//   const [name, setName] = useState();\n//   const [email, setEmail] = useState();\n//   const [password, setPassword] = useState();\n//   const [role, setRole] = useState();\n//   const dispatch = useDispatch();\n//   const nameChangeHandler = (event) => {\n//     setName({ name: event.target.value });\n//     setEmail({  email: event.target.value });\n//     setPassword({  password: event.target.value });\n//     setRole({  role: event.target.value });\n//   };\n//   const history = useHistory();\n//   const onSubmitHandler = () => {\n//     dispatch(addUser(name,email,password,role));\n//     history.push(\"/\");\n//   };\n//   return (\n//     <Form onSubmit={onSubmitHandler}>\n//       <FormGroup>\n//         <Label>Name:</Label>\n//         <Input\n//           type=\"text\"\n//           onChange={nameChangeHandler}\n//           name=\"name\"\n//           placeholder=\"Enter Name\"\n//         />\n//       </FormGroup>\n//       <FormGroup>\n//         <Label>Email:</Label>\n//         <Input\n//           type=\"text\"\n//           onChange={nameChangeHandler}\n//           name=\"email\"\n//           placeholder=\"Enter Email\"\n//         />\n//       </FormGroup>\n//       <FormGroup>\n//         <Label>Password:</Label>\n//         <Input\n//           type=\"password\"\n//           onChange={nameChangeHandler}\n//           name=\"password\"\n//           placeholder=\"Enter Password\"\n//         />\n//       </FormGroup>\n//       <FormGroup>\n//         <Label>Role:</Label>\n//         <Input\n//           type=\"text\"\n//           onChange={nameChangeHandler}\n//           name=\"role\"\n//           placeholder=\"Enter Role\"\n//         />\n//       </FormGroup>\n//       <Button type=\"submit\" color=\"primary\" style={{ marginTop: \"5px\" }}>\n//         Submit\n//       </Button>\n//       <Link\n//         to=\"/\"\n//         className=\"btn btn-danger\"\n//         style={{ marginLeft: \"5px\", marginTop: \"5px\" }}\n//       >\n//         Cancel\n//       </Link>\n//     </Form>\n//   );\n// };\n// export default AddUser;\n// import React, { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { addTransaction } from \"../actions/user\";\n// export default function CreateTransaction() {\n//     const [id, setId] = useState(\"\");\n//     const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [role, setRole] = useState(\"\");\n//   const dispatch = useDispatch();\n//   const addTransactionResult = useSelector((state) => state.TransactionReducer);\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     dispatch(\n//       addTransaction({\n//           id: id,\n//         name: name,\n//         email: email,\n//         password: password,\n//         role: role,\n//       })\n//     );\n//   };\n//   useEffect(() => {\n//     if (addTransactionResult) {\n//       dispatch(addTransaction());\n//       setId(\"\");\n//       setName(\"\");\n//       setEmail(\"\");\n//       setPassword(\"\");\n//       setRole(\"\");\n//     }\n//   }, [addTransactionResult, dispatch]);\n//   return (\n//     <div className=\"antialiased\">\n//       <p className=\"font-bold text-base mb-3\">Create Transaction</p>\n//       <form>\n//         <input\n//           className=\"form-input block w-max outline-none p-1 my-1 border\"\n//           placeholder=\"name customer\"\n//           type=\"text\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//         />\n//         <input\n//           className=\"form-input block w-max outline-none p-1 my-1 border\"\n//           placeholder=\"email\"\n//           type=\"text\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//         />\n//         <input\n//           className=\"form-input block w-max outline-none p-1 my-1 border\"\n//           placeholder=\"Sold Out\"\n//           type=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <input\n//           className=\"form-input block w-max outline-none p-1 my-1 border\"\n//           placeholder=\"Sold Out\"\n//           type=\"text\"\n//           value={role}\n//           onChange={(e) => setRole(e.target.value)}\n//         />\n//         <button\n//           type=\"submit\"\n//           className=\"rounded-lg my-4 w-32 text-white text-lg font-bold bg-sky-600 hover:bg-sky-700\"\n//           onClick={(e) => handleSubmit(e)}\n//         >\n//           Create\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\nimport React, { useState, useEffect } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport { makeStyles, useTheme, AppBar, Toolbar, Typography, Button, TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper, Dialog, DialogActions, DialogContent, DialogContentText, useMediaQuery } from \"@material-ui/core\";\nimport { Add as AddIcon, // Edit as EditIcon,\nDelete as DeleteIcon } from \"@material-ui/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUsers, deleteUserById } from \"../actions/user\"; // import Create from \"./Create\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  table: {\n    flex: 1,\n    alignContent: \"center\",\n    justifyContent: \"center\"\n  }\n}));\n\nfunction Read() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const dispatch = useDispatch();\n  const loading = useSelector(state => {\n    var _state$users;\n\n    return (_state$users = state.users) === null || _state$users === void 0 ? void 0 : _state$users.loading;\n  });\n  const users = useSelector(state => {\n    var _state$users2;\n\n    return (_state$users2 = state.users) === null || _state$users2 === void 0 ? void 0 : _state$users2.items;\n  });\n  const [userId, setUserId] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n  useEffect(() => {\n    console.log('loading', loading);\n\n    if (!loading) {\n      setOpen(loading);\n    }\n  }, [loading]);\n\n  const openDialog = _id => {\n    setOpen(true);\n    setUserId(_id);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const confirmDelete = () => {\n    dispatch(deleteUserById(userId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          children: \"ReactJs CRUD App With React Redux Thunk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 22\n      }, this),\n      children: \"Create User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"S.No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"CreatedAt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"UpdatedAt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: users.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                onClick: () => openDialog(row._id),\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: fullScreen,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"Delete User\",\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        style: {\n          width: 300\n        },\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Are you sure?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          autoFocus: true,\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: confirmDelete,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Read, \"pdHEBmdkVsep6I+jg4pJRjxnLFQ=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery, useDispatch, useSelector, useSelector];\n});\n\n_c = Read;\nexport default Read;\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.js"],"names":["React","useState","useEffect","makeStyles","useTheme","AppBar","Toolbar","Typography","Button","TableContainer","Table","TableBody","TableCell","TableHead","TableRow","Paper","Dialog","DialogActions","DialogContent","DialogContentText","useMediaQuery","Add","AddIcon","Delete","DeleteIcon","useSelector","useDispatch","getUsers","deleteUserById","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","button","margin","table","flex","alignContent","justifyContent","Read","classes","fullScreen","breakpoints","down","dispatch","loading","state","users","items","userId","setUserId","open","setOpen","console","log","openDialog","_id","handleClose","confirmDelete","map","row","index","name","email","role","width"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SACEC,UADF,EAEEC,QAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,cAPF,EAQEC,KARF,EASEC,SATF,EAUEC,SAVF,EAWEC,SAXF,EAYEC,QAZF,EAaEC,KAbF,EAcEC,MAdF,EAeEC,aAfF,EAgBEC,aAhBF,EAiBEC,iBAjBF,EAkBEC,aAlBF,QAmBO,mBAnBP;AAoBA,SACEC,GAAG,IAAIC,OADT,EAEE;AACAC,MAAM,IAAIC,UAHZ,QAIO,oBAJP;AAKA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACC,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,iBAAzC,C,CACD;;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","sourcesContent":["// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { Link, useHistory } from \"react-router-dom\";\n// import { Form, Button, Label, Input, FormGroup } from \"reactstrap\";\n// // import { v4 as uuid } from \"uuid\";\n// import { addUser } from \"../actions/authActions\";\n// const AddUser = () => {\n    \n//   const [name, setName] = useState();\n//   const [email, setEmail] = useState();\n//   const [password, setPassword] = useState();\n//   const [role, setRole] = useState();\n//   const dispatch = useDispatch();\n//   const nameChangeHandler = (event) => {\n//     setName({ name: event.target.value });\n//     setEmail({  email: event.target.value });\n//     setPassword({  password: event.target.value });\n//     setRole({  role: event.target.value });\n//   };\n\n//   const history = useHistory();\n//   const onSubmitHandler = () => {\n//     dispatch(addUser(name,email,password,role));\n    \n//     history.push(\"/\");\n//   };\n//   return (\n//     <Form onSubmit={onSubmitHandler}>\n//       <FormGroup>\n//         <Label>Name:</Label>\n//         <Input\n//           type=\"text\"\n//           onChange={nameChangeHandler}\n//           name=\"name\"\n//           placeholder=\"Enter Name\"\n//         />\n//       </FormGroup>\n//       <FormGroup>\n//         <Label>Email:</Label>\n//         <Input\n//           type=\"text\"\n//           onChange={nameChangeHandler}\n//           name=\"email\"\n//           placeholder=\"Enter Email\"\n//         />\n//       </FormGroup>\n//       <FormGroup>\n//         <Label>Password:</Label>\n//         <Input\n//           type=\"password\"\n//           onChange={nameChangeHandler}\n//           name=\"password\"\n//           placeholder=\"Enter Password\"\n//         />\n//       </FormGroup>\n//       <FormGroup>\n//         <Label>Role:</Label>\n//         <Input\n//           type=\"text\"\n//           onChange={nameChangeHandler}\n//           name=\"role\"\n//           placeholder=\"Enter Role\"\n//         />\n//       </FormGroup>\n//       <Button type=\"submit\" color=\"primary\" style={{ marginTop: \"5px\" }}>\n//         Submit\n//       </Button>\n//       <Link\n//         to=\"/\"\n//         className=\"btn btn-danger\"\n//         style={{ marginLeft: \"5px\", marginTop: \"5px\" }}\n//       >\n//         Cancel\n//       </Link>\n//     </Form>\n//   );\n// };\n\n// export default AddUser;\n\n\n// import React, { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { addTransaction } from \"../actions/user\";\n\n// export default function CreateTransaction() {\n//     const [id, setId] = useState(\"\");\n//     const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [role, setRole] = useState(\"\");\n//   const dispatch = useDispatch();\n//   const addTransactionResult = useSelector((state) => state.TransactionReducer);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     dispatch(\n//       addTransaction({\n//           id: id,\n//         name: name,\n//         email: email,\n//         password: password,\n//         role: role,\n//       })\n//     );\n//   };\n\n//   useEffect(() => {\n//     if (addTransactionResult) {\n//       dispatch(addTransaction());\n//       setId(\"\");\n//       setName(\"\");\n//       setEmail(\"\");\n//       setPassword(\"\");\n//       setRole(\"\");\n//     }\n//   }, [addTransactionResult, dispatch]);\n\n//   return (\n//     <div className=\"antialiased\">\n//       <p className=\"font-bold text-base mb-3\">Create Transaction</p>\n//       <form>\n//         <input\n//           className=\"form-input block w-max outline-none p-1 my-1 border\"\n//           placeholder=\"name customer\"\n//           type=\"text\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//         />\n//         <input\n//           className=\"form-input block w-max outline-none p-1 my-1 border\"\n//           placeholder=\"email\"\n//           type=\"text\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//         />\n//         <input\n//           className=\"form-input block w-max outline-none p-1 my-1 border\"\n//           placeholder=\"Sold Out\"\n//           type=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <input\n//           className=\"form-input block w-max outline-none p-1 my-1 border\"\n//           placeholder=\"Sold Out\"\n//           type=\"text\"\n//           value={role}\n//           onChange={(e) => setRole(e.target.value)}\n//         />\n//         <button\n//           type=\"submit\"\n//           className=\"rounded-lg my-4 w-32 text-white text-lg font-bold bg-sky-600 hover:bg-sky-700\"\n//           onClick={(e) => handleSubmit(e)}\n//         >\n//           Create\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n\nimport React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport {\n  makeStyles,\n  useTheme,\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  TableContainer,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport {\n  Add as AddIcon,\n  // Edit as EditIcon,\n  Delete as DeleteIcon,\n} from \"@material-ui/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\n import { getUsers, deleteUserById } from \"../actions/user\";\n// import Create from \"./Create\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    flex: 1,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nfunction Read() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.users?.loading);\n  const users = useSelector((state) => state.users?.items);\n  const [userId, setUserId] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n\n  useEffect(() => {\n    console.log('loading', loading)\n    if (!loading) {\n      setOpen(loading);\n    }\n  }, [loading]);\n\n  const openDialog = (_id) => {\n    setOpen(true);\n    setUserId(_id);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const confirmDelete = () => {\n    dispatch(deleteUserById(userId));\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            ReactJs CRUD App With React Redux Thunk\n          </Typography>\n        </Toolbar>\n      </AppBar>\n     \n        {/* <Create/> */}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<AddIcon />}\n        >\n          Create User\n        </Button>\n      \n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>S.No</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Email</TableCell>\n              <TableCell>Role</TableCell>\n              <TableCell>CreatedAt</TableCell>\n              <TableCell>UpdatedAt</TableCell>\n              <TableCell>Update</TableCell>\n              <TableCell>Delete</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map((row, index) => (\n              <TableRow key={index}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {index + 1}\n                </TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.email}</TableCell>\n                <TableCell>{row.role}</TableCell>\n              \n                <TableCell>\n                  {/* <Link to={`/update/${row._id}`}>\n                    <EditIcon>edit</EditIcon>\n                  </Link> */}\n                </TableCell>\n                <TableCell>\n                  <DeleteIcon onClick={() => openDialog(row._id)}>\n                    delete\n                  </DeleteIcon>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {open && (\n        <Dialog\n          fullScreen={fullScreen}\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"Delete User\"\n        >\n          <DialogContent style={{ width: 300 }}>\n            <DialogContentText>Are you sure?</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={confirmDelete} color=\"primary\" autoFocus>\n              Delete\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Read;\n"]},"metadata":{},"sourceType":"module"}