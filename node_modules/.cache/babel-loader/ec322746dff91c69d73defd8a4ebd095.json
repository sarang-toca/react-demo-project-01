{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = typeOf;\n\nvar _isArray = Array.isArray || (Array.isArray = function (a) {\n  return '' + a !== a && {}.toString.call(a) === '[object Array]';\n});\n/**\n * @description\n * typeof method that\n * 1. groups all false-y & empty values as void\n * 2. distinguishes between object and array\n *\n * @param {*} thing The thing to inspect\n *\n * @return {String} Actionable type classification\n */\n\n\nfunction typeOf(thing) {\n  if (!thing) return 'void';\n\n  if (_isArray(thing)) {\n    if (!thing.length) return 'void';\n    return 'array';\n  }\n\n  return typeof thing;\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/node_modules/redux-localstorage/lib/util/typeOf.js"],"names":["Object","defineProperty","exports","value","typeOf","_isArray","Array","isArray","a","toString","call","thing","length","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,MAArB;;AACA,IAAIC,QAAQ,GAAGC,KAAK,CAACC,OAAN,KAAkBD,KAAK,CAACC,OAAN,GAAgB,UAAUC,CAAV,EAAa;AAC5D,SAAO,KAAKA,CAAL,KAAWA,CAAX,IAAiB,EAAD,CAAKC,QAAL,CAAcC,IAAd,CAAmBF,CAAnB,MAA0B,gBAAjD;AACD,CAFc,CAAf;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASJ,MAAT,CAAgBO,KAAhB,EAAuB;AACrB,MAAI,CAACA,KAAL,EAAY,OAAO,MAAP;;AAEZ,MAAIN,QAAQ,CAACM,KAAD,CAAZ,EAAqB;AACnB,QAAI,CAACA,KAAK,CAACC,MAAX,EAAmB,OAAO,MAAP;AACnB,WAAO,OAAP;AACD;;AAED,SAAO,OAAOD,KAAd;AACD;;AAEDE,MAAM,CAACX,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = typeOf;\nvar _isArray = Array.isArray || (Array.isArray = function (a) {\n  return '' + a !== a && ({}).toString.call(a) === '[object Array]';\n});\n\n/**\n * @description\n * typeof method that\n * 1. groups all false-y & empty values as void\n * 2. distinguishes between object and array\n *\n * @param {*} thing The thing to inspect\n *\n * @return {String} Actionable type classification\n */\n\nfunction typeOf(thing) {\n  if (!thing) return 'void';\n\n  if (_isArray(thing)) {\n    if (!thing.length) return 'void';\n    return 'array';\n  }\n\n  return typeof thing;\n}\n\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}