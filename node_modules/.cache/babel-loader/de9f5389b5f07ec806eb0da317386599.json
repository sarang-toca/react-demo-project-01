{"ast":null,"code":"import api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\";\nimport jwtDecode from \"jwt-decode\"; // export const addUser = (user) => {\n//   return (dispatch) => {\n//     setTimeout(() => {\n//       dispatch(addUserAsync(user)); //we call the dispatch function inside another dispatch with help of redux thunk\n//     }, 5000);\n//   };\n// };\n\nexport const addUser = user => {\n  return dispatch => {\n    return api.post('/v1/users', user).then(response => {\n      dispatch(actions.addUserAsync(response.data));\n    }).catch(error => {\n      throw error;\n    });\n  };\n};\nexport const signUp = user => {\n  return dispatch => {\n    dispatch(actions.userSignupRequest());\n    api.post(`v1/auth/register`, user).then(token => {\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userSignupSuccess(token));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userSignupFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n}; // export const loadUser = (refreshToken) => {\n//   return dispatch => {\n//     dispatch(actions.loadUserRequest());\n//       api.post('/v1/auth/refresh-tokens', refreshToken)\n//           .then(token => {\n//             console.log(refreshToken)\n//            localStorage.setItem(\"token\", token.data.access.token);\n//           //  const { sub: userId } = jwtDecode(token.data.access.token);\n//           //         console.log(userId);\n//                     // const loadUserDetails = (userId) => {\n//                     //   api.get('/v1/users'`${userId}`).then((user) => {\n//                     //     console.log(user.data);\n//                     //     dispatch(actions.loadUserSuccess(user.data));\n//                     //   });\n//                     // };\n//                     // loadUserDetails(userId);\n//           });\n//   }\n// }\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n\nexport const loadUser = refreshToken => {\n  return dispatch => {\n    dispatch(actions.loadUserRequest());\n    api.post(`/v1/auth/refresh-tokens`, refreshToken).then(token => {\n      console.log(refreshToken);\n      localStorage.setItem(\"token\", token.data.access.token);\n      localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n      const {\n        sub: userId\n      } = jwtDecode(token.data.access.token);\n      console.log(userId);\n\n      const loadUserDetails = userId => {\n        api.get(`/v1/users/${userId}`).then(user => {\n          console.log(user.data);\n          dispatch(actions.loadUserSuccess(user.data));\n        });\n      };\n\n      loadUserDetails(userId);\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.loadUserFailure(errorMessage));\n      toast.error(error.errorMessage, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n}; // export const fetchUsers = () => {\n//   return dispatch => {\n//     dispatch(actions.fetchUsersRequest);\n//     api\n//       .get(\"/v1/users\")\n//       .then(response => {\n//         const users = response.data;\n//         console.log(users);\n//         dispatch(actions.fetchUsersSucess(users));\n//       })\n//       .catch(error => {\n//         const errorMsg = error.message;\n//         dispatch(actions.fetchUsersFailure(errorMsg));\n//       });\n//   };\n// };\n\nexport const signIn = user => {\n  return dispatch => {\n    dispatch(actions.userLoginRequest());\n    api.post(`v1/auth/login`, user).then(token => {\n      // console.log(token)\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userLoginSuccess(token));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userLoginFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n};\nexport const logOut = () => {\n  localStorage.removeItem(\"token\"); // localStorage.removeItem(\"refreshToken\");\n\n  localStorage.removeItem(\"redux\");\n  return dispatch => {\n    dispatch(actions.userLogout());\n  };\n};","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/authActions.js"],"names":["api","toast","actions","jwtDecode","addUser","user","dispatch","post","then","response","addUserAsync","data","catch","error","signUp","userSignupRequest","token","localStorage","setItem","tokens","access","userSignupSuccess","errorMessage","message","userSignupFailure","console","log","position","POSITION","TOP_RIGHT","loadUser","refreshToken","loadUserRequest","refresh","sub","userId","loadUserDetails","get","loadUserSuccess","loadUserFailure","signIn","userLoginRequest","userLoginSuccess","userLoginFailure","logOut","removeItem","userLogout"],"mappings":"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","sourcesContent":["import api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\";\n  import jwtDecode from \"jwt-decode\";\n\n\n\n  // export const addUser = (user) => {\n  //   return (dispatch) => {\n  //     setTimeout(() => {\n  //       dispatch(addUserAsync(user)); //we call the dispatch function inside another dispatch with help of redux thunk\n  //     }, 5000);\n  //   };\n  // };\n\n export const addUser = (user) => {\n  return (dispatch) => {\n    \n    return api.post('/v1/users',user)\n    \n      .then(response => {\n        dispatch(actions.addUserAsync(response.data))\n      })\n      .catch(error => {\n        throw(error);\n      });\n  };\n};\n\n\n\nexport const signUp = (user) => {\n  return (dispatch) => {\n    dispatch(actions.userSignupRequest());\n    api\n      .post(`v1/auth/register`, user)\n      .then((token) => {\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\n        dispatch(actions.userSignupSuccess(token));\n        \n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.userSignupFailure(errorMessage));\n        console.log(error);\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\n\n\n\n// export const loadUser = (refreshToken) => {\n//   return dispatch => {\n//     dispatch(actions.loadUserRequest());\n//       api.post('/v1/auth/refresh-tokens', refreshToken)\n//           .then(token => {\n//             console.log(refreshToken)\n//            localStorage.setItem(\"token\", token.data.access.token);\n\n//           //  const { sub: userId } = jwtDecode(token.data.access.token);\n//           //         console.log(userId);\n//                     // const loadUserDetails = (userId) => {\n//                     //   api.get('/v1/users'`${userId}`).then((user) => {\n//                     //     console.log(user.data);\n//                     //     dispatch(actions.loadUserSuccess(user.data));\n//                     //   });\n//                     // };\n//                     // loadUserDetails(userId);\n//           });\n//   }\n// }\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n\n\n\nexport const loadUser = (refreshToken) => {\n  return (dispatch) => {\n    dispatch(actions.loadUserRequest());\n    api\n      .post(`/v1/auth/refresh-tokens`, refreshToken)\n      .then((token) => {\n        console.log(refreshToken)\n        localStorage.setItem(\"token\", token.data.access.token);\n         localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n         const { sub: userId } = jwtDecode(token.data.access.token);\n                 console.log(userId);\n                 const loadUserDetails = (userId) => {\n                   api.get(`/v1/users/${userId}`).then((user) => {\n                     console.log(user.data);\n                     dispatch(actions.loadUserSuccess(user.data));\n                   });\n                 };\n                 loadUserDetails(userId);\n       \n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.loadUserFailure(errorMessage));\n        toast.error(error.errorMessage, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\n\n// export const fetchUsers = () => {\n//   return dispatch => {\n//     dispatch(actions.fetchUsersRequest);\n//     api\n//       .get(\"/v1/users\")\n//       .then(response => {\n//         const users = response.data;\n//         console.log(users);\n//         dispatch(actions.fetchUsersSucess(users));\n//       })\n//       .catch(error => {\n//         const errorMsg = error.message;\n//         dispatch(actions.fetchUsersFailure(errorMsg));\n//       });\n//   };\n// };\n\n\n\n\n\n\n\n\n\nexport const signIn = (user) => {\n  return (dispatch) => {\n    dispatch(actions.userLoginRequest());\n    api\n      .post(`v1/auth/login`, user)\n      .then((token) => {\n        // console.log(token)\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\n        dispatch(actions.userLoginSuccess(token));\n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.userLoginFailure(errorMessage));\n        console.log(error);\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\nexport const logOut = () => {\n  localStorage.removeItem(\"token\");\n  // localStorage.removeItem(\"refreshToken\");\n  localStorage.removeItem(\"redux\");\n  return (dispatch) => {\n    dispatch(actions.userLogout());\n  };\n};\n"]},"metadata":{},"sourceType":"module"}