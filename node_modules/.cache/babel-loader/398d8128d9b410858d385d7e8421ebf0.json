{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx\";\n// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n// import { getUsers, deleteUserById } from \"../actions/users\";\n// import PropTypes from \"prop-types\";\n// class Read extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n//   componentDidMount() {\n//     this.props.getUsers();\n//   }\n//   handleDelete = (id) => {\n//     const result = window.confirm(\"Are you sure to delete?\");\n//     if (result) {\n//       this.props.deleteUserById(id);\n//     }\n//   };\n//   render() {\n//      const {items}  = this.props;\n//      console.log(items)\n//     return (\n//       <React.Fragment>\n//         <h5 style={{ textAlign: \"center\" }} className=\"my-4\">\n//           ReactJs CRUD App With React Redux Thunk\n//         </h5>\n//         <div className=\"col-md-6 offset-md-3\">\n//           <Link to={`/create`} className=\"btn btn-success\">\n//             Create\n//           </Link>\n//           <table className=\"table\">\n//             <thead>\n//               <tr>\n//                 <th scope=\"col\">Sr.No.</th>\n//                 <th scope=\"col\">Name</th>\n//                 <th scope=\"col\">Email</th>\n//                 <th scope=\"col\">Role</th>\n//                 <th scope=\"col\">Action</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {items && items.map((item, index) => {\n//                   console.log(item)\n//                 return (\n//                   <tr key={index}>\n//                     <th scope=\"row\">{index + 1}</th>\n//                     <td>{item.name}</td>\n//                     <td>{item.email}</td>\n//                     <td>{item.role}</td>\n//                     <td>\n//                       <Link\n//                         to={`/update/${item._id}`}\n//                         className=\"btn btn-success mx-1\"\n//                       >\n//                         Update\n//                       </Link>\n//                       <button\n//                         className=\"btn btn-danger mx-1\"\n//                         onClick={() => this.handleDelete(item._id)}\n//                       >\n//                         Delete\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 );\n//               })};\n//             </tbody>\n//           </table>\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\n// Read.propTypes = {\n// \tgetUsers: PropTypes.func.isRequired,\n// \tdeleteUserById: PropTypes.func,\n//     items: PropTypes.array,\n//     map: PropTypes.func,\n// };\n// // function mapDispatchToProps(dispatch) {\n// //   return {\n// //     getUsers: () => { dispatch(getUsers()) }\n// //   }\n// // }\n// function mapState(state) {\n//   const { items } = state.users;\n//   return { items };\n// }\n// const actionCreators = {\n//   getUsers: getUsers,\n//   deleteUserById: deleteUserById,\n// };\n// // const connected = connect(mapState, actionCreators)(Read);\n// //  export { connected as ReadPage };\n// export default connect(mapState, actionCreators)(Read)\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { loadUsers } from \"../actions/userss\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Read extends React.Component {\n  componentDidMount() {\n    this.props.loadUsers();\n  }\n\n  render() {\n    const {\n      users\n    } = this.props; //      console.log(items)\n\n    if (this.props.error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: [\"ERROR: \", this.props.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users && users.map((item, index) => {\n          console.log(item);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.data,\n  loading: state.loading,\n  error: state.error\n});\n\nconst mapDispatchToProps = {\n  loadUsers\n};\nRead.propTypes = {\n  loadUsers: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n  error: PropTypes.bool,\n  users: PropTypes.object\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Read);","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx"],"names":["React","connect","loadUsers","PropTypes","Read","Component","componentDidMount","props","render","users","error","color","map","item","index","console","log","name","email","role","mapStateToProps","state","data","loading","mapDispatchToProps","propTypes","func","isRequired","bool","object"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n// import { getUsers, deleteUserById } from \"../actions/users\";\n// import PropTypes from \"prop-types\";\n// class Read extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n\n//   componentDidMount() {\n//     this.props.getUsers();\n//   }\n\n//   handleDelete = (id) => {\n//     const result = window.confirm(\"Are you sure to delete?\");\n//     if (result) {\n//       this.props.deleteUserById(id);\n//     }\n//   };\n\n//   render() {\n//      const {items}  = this.props;\n//      console.log(items)\n   \n    \n//     return (\n//       <React.Fragment>\n//         <h5 style={{ textAlign: \"center\" }} className=\"my-4\">\n//           ReactJs CRUD App With React Redux Thunk\n//         </h5>\n//         <div className=\"col-md-6 offset-md-3\">\n//           <Link to={`/create`} className=\"btn btn-success\">\n//             Create\n//           </Link>\n//           <table className=\"table\">\n//             <thead>\n//               <tr>\n//                 <th scope=\"col\">Sr.No.</th>\n//                 <th scope=\"col\">Name</th>\n//                 <th scope=\"col\">Email</th>\n//                 <th scope=\"col\">Role</th>\n//                 <th scope=\"col\">Action</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {items && items.map((item, index) => {\n//                   console.log(item)\n//                 return (\n//                   <tr key={index}>\n                      \n//                     <th scope=\"row\">{index + 1}</th>\n//                     <td>{item.name}</td>\n//                     <td>{item.email}</td>\n//                     <td>{item.role}</td>\n//                     <td>\n//                       <Link\n//                         to={`/update/${item._id}`}\n//                         className=\"btn btn-success mx-1\"\n//                       >\n//                         Update\n//                       </Link>\n//                       <button\n//                         className=\"btn btn-danger mx-1\"\n//                         onClick={() => this.handleDelete(item._id)}\n//                       >\n//                         Delete\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 );\n//               })};\n//             </tbody>\n//           </table>\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\n\n// Read.propTypes = {\n// \tgetUsers: PropTypes.func.isRequired,\n// \tdeleteUserById: PropTypes.func,\n//     items: PropTypes.array,\n//     map: PropTypes.func,\n  \n// };\n// // function mapDispatchToProps(dispatch) {\n// //   return {\n// //     getUsers: () => { dispatch(getUsers()) }\n// //   }\n// // }\n// function mapState(state) {\n  \n//   const { items } = state.users;\n//   return { items };\n  \n// }\n\n// const actionCreators = {\n//   getUsers: getUsers,\n//   deleteUserById: deleteUserById,\n// };\n\n// // const connected = connect(mapState, actionCreators)(Read);\n// //  export { connected as ReadPage };\n// export default connect(mapState, actionCreators)(Read)\n\n\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport {loadUsers} from \"../actions/userss\";\nimport PropTypes from \"prop-types\";\nclass Read extends React.Component {\n   componentDidMount() {\n       this.props.loadUsers();\n   };\n    \n   render() {\n    const {users}  = this.props;\n    //      console.log(items)\n       \n       \n       if (this.props.error) {\n           return <div style={{ color: 'red' }}>ERROR: {this.props.error}</div>\n       }\n    \n       return (\n           <table>\n               <thead>\n                   <tr>\n                       <th>Name</th>\n                       <th>Email</th>\n                       <th>Role</th>\n                   </tr>\n               </thead>\n               <tbody>\n               {/* {this.props.data.map(u =>\n                   <tr key={u.id}>\n                       <td>{u.name}</td>\n                       <td>{u.email}</td>\n                       <td>{u.role }</td>\n                       \n                   </tr>\n               )} */}\n\n\n{users && users.map((item, index) => {\n                  console.log(item)\n                return (\n                  <tr key={index}>\n                      \n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{item.name}</td>\n                    <td>{item.email}</td>\n                    <td>{item.role}</td>\n                  \n                  </tr>\n                )\n              })}\n               </tbody>\n           </table>\n       );\n   }\n}\n\nconst mapStateToProps = state => ({\n   users: state.data,\n   loading: state.loading,\n   error: state.error,\n});\n\nconst mapDispatchToProps = {\n   loadUsers\n};\nRead.propTypes = {\n\tloadUsers: PropTypes.func.isRequired,\n\tloading: PropTypes.bool,\n  error: PropTypes.bool,\n  users: PropTypes.object,\n}\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Read);"]},"metadata":{},"sourceType":"module"}