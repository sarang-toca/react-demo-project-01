{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/auth/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    signIn,\n    isLoggedIn\n  } = _ref;\n  const dispatch = useDispatch(); // const [formData, setFormData] = useState({\n  // \temail: \"\",\n  // \tpassword: \"\",\n  // });\n\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const [formData, setFormData] = useState(initialValues);\n  const [isSubmit, setIsSubmit] = useState(false);\n  const {\n    email,\n    password\n  } = formData;\n  const [formErrors, setFormErrors] = useState({});\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    setFormErrors(validate(formData));\n    setIsSubmit(true);\n    dispatch(login(formData));\n    login(email, password);\n  };\n\n  useEffect(() => {\n    console.log(formErrors);\n\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      console.log(formData);\n    }\n  }, [formErrors]);\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this);\n  }\n\n  const validate = values => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (values.password.length < 4) {\n      errors.password = \"Password must be more than 4 characters\";\n    } else if (values.password.length > 10) {\n      errors.password = \"Password cannot exceed more than 10 characters\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), \" Sign Into Your Account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: formData.email,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          minLength: \"6\",\n          value: formData.password,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"link\",\n      children: [\"Dont have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"8/OGLhwUWGIgEzozhx5WZfOJ0xA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.auth.isLoggedIn\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/auth/Login.js"],"names":["React","useState","useEffect","Link","Redirect","useDispatch","connect","PropTypes","login","Login","signIn","isLoggedIn","dispatch","initialValues","email","password","formData","setFormData","isSubmit","setIsSubmit","formErrors","setFormErrors","onChange","e","target","name","value","onSubmit","preventDefault","validate","console","log","Object","keys","length","values","errors","regex","test","color","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, {  useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {  useDispatch, connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/authActions\";\r\n\r\n\r\nconst Login = ({ signIn, isLoggedIn }) => {\r\n\tconst dispatch = useDispatch();\r\n\t// const [formData, setFormData] = useState({\r\n\t// \temail: \"\",\r\n\t// \tpassword: \"\",\r\n\t// });\r\n\r\n\tconst initialValues = { email: \"\", password: \"\" };\r\n\tconst [formData, setFormData] = useState(initialValues);\r\n\tconst [isSubmit, setIsSubmit] = useState(false);\r\n\r\n\r\n\tconst { email, password } = formData;\r\n\r\n\tconst [formErrors, setFormErrors] = useState({});\r\n\tconst onChange = (e) =>\r\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n\tconst onSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetFormErrors(validate(formData));\r\n\t\tsetIsSubmit(true);\r\n\t\tdispatch(login(formData));\r\n\t\tlogin(email, password);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(formErrors);\r\n\t\tif (Object.keys(formErrors).length === 0 && isSubmit) {\r\n\t\t  console.log(formData);\r\n\t\t}\r\n\t  }, [formErrors]);\r\n\r\n\tif (isLoggedIn) {\r\n\t\treturn <Redirect to=\"/dashboard\" />;\r\n\t}\r\n\r\n\tconst validate = (values) => {\r\n\t\tconst errors = {};\r\n\t\tconst regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n\t\t\r\n\t\tif (!values.email) {\r\n\t\t  errors.email = \"Email is required!\";\r\n\t\t} else if (!regex.test(values.email)) {\r\n\t\t  errors.email = \"This is not a valid email format!\";\r\n\t\t}\r\n\t\tif (!values.password) {\r\n\t\t  errors.password = \"Password is required\";\r\n\t\t} else if (values.password.length < 4) {\r\n\t\t  errors.password = \"Password must be more than 4 characters\";\r\n\t\t} else if (values.password.length > 10) {\r\n\t\t  errors.password = \"Password cannot exceed more than 10 characters\";\r\n\t\t}\r\n\t\treturn errors;\r\n\t  };\r\n\treturn (\r\n\t\t<div className=\"login-form\">\r\n\t\t\t<h1 className=\"heading\">Sign In</h1>\r\n\t\t\t<p className=\"lead\">\r\n\t\t\t\t<i className=\"fas fa-user\"></i> Sign Into Your Account\r\n\t\t\t</p>\r\n\t\t\t{/* <Alert /> */}\r\n\t\t\t<br />\r\n\t\t\t<form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"Email Address\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tvalue={formData.email}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p style={{color:'red'}}>{formErrors.email}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tminLength=\"6\"\r\n\t\t\t\t\t\tvalue={formData.password}\r\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\t<p style={{color:'red'}}>{formErrors.password}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"submit\" className=\"btn\" value=\"Login\" />\r\n\t\t\t</form>\r\n\t\t\t<p className=\"link\">\r\n\t\t\t\tDont have an account? <Link to=\"/register\">Sign Up</Link>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nLogin.propTypes = {\r\n\tlogin: PropTypes.func.isRequired,\r\n\tisLoggedIn: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisLoggedIn: state.auth.isLoggedIn,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);"]},"metadata":{},"sourceType":"module"}