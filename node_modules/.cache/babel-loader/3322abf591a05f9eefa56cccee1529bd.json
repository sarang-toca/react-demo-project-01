{"ast":null,"code":"import api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\";\nimport { setAlert } from \"./alert\"; // export function getUserById(id) {\n//   return (dispatch) => {\n//     dispatch(actions.getUserBegin());\n//     api\n//       .get(`/v1/users/${id}`)\n//       .then(function (res) {\n//         console.log(\"res =>\", res.data);\n//         dispatch(actions.getUserSuccess(res));\n//       })\n//       .catch(function (error) {\n//         const { response } = error;\n//         console.log(\"err\", response);\n//         if (response !== undefined) {\n//           dispatch(actions.getUserFailure(response));\n//         }\n//       });\n//   };\n// }\n// export function deleteUserById(_id) {\n//   return (dispatch) => {\n//     dispatch(actions.deleteUserBegin());\n//     api\n//       .delete(`/v1/users/${_id}`)\n//       .then(function (res) {\n//         console.log(\"res =>\", res.data);\n//         dispatch(actions.deleteUserSuccess(_id));\n//       })\n//       .catch(function (error) {\n//         const { response } = error;\n//         console.log(\"err\", response);\n//         if (response !== undefined) {\n//           dispatch(actions.deleteUserFailure(response));\n//           alert(response.data?.message);\n//         }\n//       });\n//   };\n// }\n// export function getUsers() {\n//   return (dispatch) => {\n//     dispatch(actions.fetchUserBegin());\n//     api\n//       .get('/v1/users')\n//       .then(function (res) {\n//         console.log(\"res =>\", res.data);\n//         dispatch(actions.fetchUserSuccess(res.data));\n//       })\n//       .catch(function (error) {\n//         const { response } = error;\n//         console.log(\"err\", response);\n//         if (response !== undefined) {\n//           dispatch(actions.fetchUserFailure(response));\n//         }\n//       });\n//   };\n// }\n//  export const getUsers = () => {\n//   return (dispatch) => {\n//     dispatch(actions.fetchUserBegin());\n//     api\n//       .get(`v1/users`)\n//       .then(function (res) {\n//         console.log(res)\n//         dispatch(actions.fetchUserSuccess(res));\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.fetchUserFailure(errorMessage));\n//         console.log(error);\n//         toast.error(error.message, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n// export const addUser = (user) => {\n//   return (dispatch) => {\n//     setTimeout(() => {\n//       dispatch(addUserAsync(user)); //we call the dispatch function inside another dispatch with help of redux thunk\n//     }, 5000);\n//   };\n// };\n//  export const addUser = (user) => {\n//   return (dispatch) => {\n//     return api.post('/v1/users',user)\n//       .then(response => {\n//         localStorage.setItem(\"token\", response.data.tokens.access.token);\n//         dispatch(actions.addUserAsync(response))\n//       })\n//       .catch(error => {\n//         throw(error);\n//       });\n//   };\n// };\n\nexport const signUp = (user, history) => {\n  return dispatch => {\n    dispatch(actions.userSignupRequest());\n    api.post(`v1/auth/register`, user).then(token => {\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userSignupSuccess(token));\n      history.push(\"/login\");\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userSignupFailure(setAlert(errorMessage, \"danger\")));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n}; // export const loadUser = (refreshToken) => {\n//   return dispatch => {\n//     dispatch(actions.loadUserRequest());\n//       api.post('/v1/auth/refresh-tokens', refreshToken)\n//           .then(token => {\n//             console.log(refreshToken)\n//            localStorage.setItem(\"token\", token.data.access.token);\n//           //  const { sub: userId } = jwtDecode(token.data.access.token);\n//           //         console.log(userId);\n//                     // const loadUserDetails = (userId) => {\n//                     //   api.get('/v1/users'`${userId}`).then((user) => {\n//                     //     console.log(user.data);\n//                     //     dispatch(actions.loadUserSuccess(user.data));\n//                     //   });\n//                     // };\n//                     // loadUserDetails(userId);\n//           });\n//   }\n// }\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n\nexport const loadUser = refreshToken => {\n  return dispatch => {\n    dispatch(actions.loadUserRequest());\n    api.post(`/v1/auth/refresh-tokens`, refreshToken).then(token => {\n      console.log(refreshToken);\n      localStorage.setItem(\"token\", token.data.access.token);\n      localStorage.setItem(`refreshToken`, token.data.refresh.token);\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.loadUserFailure(errorMessage));\n      toast.error(error.errorMessage, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n}; // export const fetchUsers = () => {\n//   return dispatch => {\n//     dispatch(actions.fetchUsersRequest);\n//     api\n//       .get(\"/v1/users\")\n//       .then(response => {\n//         const users = response.data;\n//         console.log(users);\n//         dispatch(actions.fetchUsersSucess(users));\n//       })\n//       .catch(error => {\n//         const errorMsg = error.message;\n//         dispatch(actions.fetchUsersFailure(errorMsg));\n//       });\n//   };\n// };\n\nexport const signIn = user => {\n  return dispatch => {\n    dispatch(actions.userLoginRequest());\n    api.post(`v1/auth/login`, user).then(token => {\n      // console.log(token)\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userLoginSuccess(token));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userLoginFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n};\nexport const logOut = () => {\n  localStorage.removeItem(\"token\"); // localStorage.removeItem(\"refreshToken\");\n\n  localStorage.removeItem(\"redux\");\n  return dispatch => {\n    dispatch(actions.userLogout());\n  };\n};","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/authActions.js"],"names":["api","toast","actions","setAlert","signUp","user","history","dispatch","userSignupRequest","post","then","token","localStorage","setItem","data","tokens","access","userSignupSuccess","push","catch","error","errorMessage","message","userSignupFailure","console","log","position","POSITION","TOP_RIGHT","loadUser","refreshToken","loadUserRequest","refresh","loadUserFailure","signIn","userLoginRequest","userLoginSuccess","userLoginFailure","logOut","removeItem","userLogout"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AACA,SAASC,QAAT,QAAyB,SAAzB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAO,MAAMC,MAAM,GAAG,CAACC,IAAD,EAAMC,OAAN,KAAkB;AACtC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACL,OAAO,CAACM,iBAAR,EAAD,CAAR;AACAR,IAAAA,GAAG,CACAS,IADH,CACS,kBADT,EAC4BJ,IAD5B,EAEGK,IAFH,CAESC,KAAD,IAAW;AACfC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkBC,MAAlB,CAAyBL,KAAvD;AACAJ,MAAAA,QAAQ,CAACL,OAAO,CAACe,iBAAR,CAA0BN,KAA1B,CAAD,CAAR;AACAL,MAAAA,OAAO,CAACY,IAAR,CAAa,QAAb;AAED,KAPH,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChB,YAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACAf,MAAAA,QAAQ,CAACL,OAAO,CAACqB,iBAAR,CAA0BpB,QAAQ,CAACkB,YAAD,EAAc,QAAd,CAAlC,CAAD,CAAR;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAnB,MAAAA,KAAK,CAACmB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EAA2B;AACzBI,QAAAA,QAAQ,EAAEzB,KAAK,CAAC0B,QAAN,CAAeC;AADA,OAA3B;AAGD,KAfH;AAgBD,GAlBD;AAmBD,CApBM,C,CAyBP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAO,MAAMC,QAAQ,GAAIC,YAAD,IAAkB;AACxC,SAAQvB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACL,OAAO,CAAC6B,eAAR,EAAD,CAAR;AACA/B,IAAAA,GAAG,CACAS,IADH,CACS,yBADT,EACmCqB,YADnC,EAEGpB,IAFH,CAESC,KAAD,IAAW;AACfa,MAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACAlB,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAAK,CAACG,IAAN,CAAWE,MAAX,CAAkBL,KAAhD;AACCC,MAAAA,YAAY,CAACC,OAAb,CAAsB,cAAtB,EAAqCF,KAAK,CAACG,IAAN,CAAWkB,OAAX,CAAmBrB,KAAxD;AAEF,KAPH,EAQGQ,KARH,CAQUC,KAAD,IAAW;AAChB,YAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACAf,MAAAA,QAAQ,CAACL,OAAO,CAAC+B,eAAR,CAAwBZ,YAAxB,CAAD,CAAR;AACApB,MAAAA,KAAK,CAACmB,KAAN,CAAYA,KAAK,CAACC,YAAlB,EAAgC;AAC9BK,QAAAA,QAAQ,EAAEzB,KAAK,CAAC0B,QAAN,CAAeC;AADK,OAAhC;AAGD,KAdH;AAeD,GAjBD;AAkBD,CAnBM,C,CAsBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA,OAAO,MAAMM,MAAM,GAAI7B,IAAD,IAAU;AAC9B,SAAQE,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACL,OAAO,CAACiC,gBAAR,EAAD,CAAR;AACAnC,IAAAA,GAAG,CACAS,IADH,CACS,eADT,EACyBJ,IADzB,EAEGK,IAFH,CAESC,KAAD,IAAW;AACf;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkBC,MAAlB,CAAyBL,KAAvD;AACAJ,MAAAA,QAAQ,CAACL,OAAO,CAACkC,gBAAR,CAAyBzB,KAAzB,CAAD,CAAR;AACD,KANH,EAOGQ,KAPH,CAOUC,KAAD,IAAW;AAChB,YAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACAf,MAAAA,QAAQ,CAACL,OAAO,CAACmC,gBAAR,CAAyBhB,YAAzB,CAAD,CAAR;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAnB,MAAAA,KAAK,CAACmB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EAA2B;AACzBI,QAAAA,QAAQ,EAAEzB,KAAK,CAAC0B,QAAN,CAAeC;AADA,OAA3B;AAGD,KAdH;AAeD,GAjBD;AAkBD,CAnBM;AAwBP,OAAO,MAAMU,MAAM,GAAG,MAAM;AAC1B1B,EAAAA,YAAY,CAAC2B,UAAb,CAAwB,OAAxB,EAD0B,CAE1B;;AACA3B,EAAAA,YAAY,CAAC2B,UAAb,CAAwB,OAAxB;AACA,SAAQhC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACL,OAAO,CAACsC,UAAR,EAAD,CAAR;AACD,GAFD;AAGD,CAPM","sourcesContent":["import api from \"../services/api\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as actions from \"./index\";\r\nimport { setAlert } from \"./alert\";\r\n \r\n\r\n// export function getUserById(id) {\r\n//   return (dispatch) => {\r\n//     dispatch(actions.getUserBegin());\r\n//     api\r\n//       .get(`/v1/users/${id}`)\r\n//       .then(function (res) {\r\n//         console.log(\"res =>\", res.data);\r\n//         dispatch(actions.getUserSuccess(res));\r\n//       })\r\n//       .catch(function (error) {\r\n//         const { response } = error;\r\n//         console.log(\"err\", response);\r\n//         if (response !== undefined) {\r\n//           dispatch(actions.getUserFailure(response));\r\n//         }\r\n//       });\r\n//   };\r\n// }\r\n\r\n\r\n// export function deleteUserById(_id) {\r\n//   return (dispatch) => {\r\n//     dispatch(actions.deleteUserBegin());\r\n//     api\r\n//       .delete(`/v1/users/${_id}`)\r\n//       .then(function (res) {\r\n//         console.log(\"res =>\", res.data);\r\n//         dispatch(actions.deleteUserSuccess(_id));\r\n//       })\r\n//       .catch(function (error) {\r\n//         const { response } = error;\r\n//         console.log(\"err\", response);\r\n//         if (response !== undefined) {\r\n//           dispatch(actions.deleteUserFailure(response));\r\n//           alert(response.data?.message);\r\n//         }\r\n//       });\r\n//   };\r\n// }\r\n\r\n// export function getUsers() {\r\n//   return (dispatch) => {\r\n//     dispatch(actions.fetchUserBegin());\r\n//     api\r\n//       .get('/v1/users')\r\n//       .then(function (res) {\r\n      \r\n//         console.log(\"res =>\", res.data);\r\n//         dispatch(actions.fetchUserSuccess(res.data));\r\n//       })\r\n//       .catch(function (error) {\r\n//         const { response } = error;\r\n//         console.log(\"err\", response);\r\n//         if (response !== undefined) {\r\n//           dispatch(actions.fetchUserFailure(response));\r\n//         }\r\n//       });\r\n//   };\r\n// }\r\n\r\n  //  export const getUsers = () => {\r\n  //   return (dispatch) => {\r\n  //     dispatch(actions.fetchUserBegin());\r\n  //     api\r\n  //       .get(`v1/users`)\r\n  //       .then(function (res) {\r\n  //         console.log(res)\r\n  //         dispatch(actions.fetchUserSuccess(res));\r\n          \r\n  //       })\r\n  //       .catch((error) => {\r\n  //         const errorMessage = error.message;\r\n  //         dispatch(actions.fetchUserFailure(errorMessage));\r\n  //         console.log(error);\r\n  //         toast.error(error.message, {\r\n  //           position: toast.POSITION.TOP_RIGHT,\r\n  //         });\r\n  //       });\r\n  //   };\r\n  // };\r\n  \r\n  // export const addUser = (user) => {\r\n  //   return (dispatch) => {\r\n  //     setTimeout(() => {\r\n  //       dispatch(addUserAsync(user)); //we call the dispatch function inside another dispatch with help of redux thunk\r\n  //     }, 5000);\r\n  //   };\r\n  // };\r\n\r\n//  export const addUser = (user) => {\r\n//   return (dispatch) => {\r\n    \r\n//     return api.post('/v1/users',user)\r\n      \r\n//       .then(response => {\r\n//         localStorage.setItem(\"token\", response.data.tokens.access.token);\r\n//         dispatch(actions.addUserAsync(response))\r\n//       })\r\n//       .catch(error => {\r\n//         throw(error);\r\n//       });\r\n//   };\r\n// };\r\n\r\n\r\n\r\nexport const signUp = (user,history) => {\r\n  return (dispatch) => {\r\n    dispatch(actions.userSignupRequest());\r\n    api\r\n      .post(`v1/auth/register`, user)\r\n      .then((token) => {\r\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\r\n        dispatch(actions.userSignupSuccess(token));\r\n        history.push(\"/login\");\r\n        \r\n      })\r\n      .catch((error) => {\r\n        const errorMessage = error.message;\r\n        dispatch(actions.userSignupFailure(setAlert(errorMessage,\"danger\")));\r\n        console.log(error);\r\n        toast.error(error.message, {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n// export const loadUser = (refreshToken) => {\r\n//   return dispatch => {\r\n//     dispatch(actions.loadUserRequest());\r\n//       api.post('/v1/auth/refresh-tokens', refreshToken)\r\n//           .then(token => {\r\n//             console.log(refreshToken)\r\n//            localStorage.setItem(\"token\", token.data.access.token);\r\n\r\n//           //  const { sub: userId } = jwtDecode(token.data.access.token);\r\n//           //         console.log(userId);\r\n//                     // const loadUserDetails = (userId) => {\r\n//                     //   api.get('/v1/users'`${userId}`).then((user) => {\r\n//                     //     console.log(user.data);\r\n//                     //     dispatch(actions.loadUserSuccess(user.data));\r\n//                     //   });\r\n//                     // };\r\n//                     // loadUserDetails(userId);\r\n//           });\r\n//   }\r\n// }\r\n// export const loadUser = (refreshToken) => {\r\n//   return (dispatch) => {\r\n//     dispatch(actions.loadUserRequest());\r\n//     api\r\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\r\n//       .then((token) => {\r\n//         console.log(refreshToken)\r\n//         localStorage.setItem(\"token\", token.data.access.token);\r\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\r\n//         const { sub: userId } = jwtDecode(token.data.access.token);\r\n//         console.log(userId);\r\n//         const loadUserDetails = (userId) => {\r\n//           api.get(`/v1/users/${userId}`).then((user) => {\r\n//             console.log(user.data);\r\n//             dispatch(actions.loadUserSuccess(user.data));\r\n//           });\r\n//         };\r\n//         loadUserDetails(userId);\r\n//       })\r\n//       .catch((error) => {\r\n//         const errorMessage = error.message;\r\n//         dispatch(actions.loadUserFailure(errorMessage));\r\n//         toast.error(error.errorMessage, {\r\n//           position: toast.POSITION.TOP_RIGHT,\r\n//         });\r\n//       });\r\n//   };\r\n// };\r\n\r\n\r\n\r\nexport const loadUser = (refreshToken) => {\r\n  return (dispatch) => {\r\n    dispatch(actions.loadUserRequest());\r\n    api\r\n      .post(`/v1/auth/refresh-tokens`, refreshToken)\r\n      .then((token) => {\r\n        console.log(refreshToken)\r\n        localStorage.setItem(\"token\", token.data.access.token);\r\n         localStorage.setItem(`refreshToken`, token.data.refresh.token);\r\n        \r\n      })\r\n      .catch((error) => {\r\n        const errorMessage = error.message;\r\n        dispatch(actions.loadUserFailure(errorMessage));\r\n        toast.error(error.errorMessage, {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n\r\n// export const fetchUsers = () => {\r\n//   return dispatch => {\r\n//     dispatch(actions.fetchUsersRequest);\r\n//     api\r\n//       .get(\"/v1/users\")\r\n//       .then(response => {\r\n//         const users = response.data;\r\n//         console.log(users);\r\n//         dispatch(actions.fetchUsersSucess(users));\r\n//       })\r\n//       .catch(error => {\r\n//         const errorMsg = error.message;\r\n//         dispatch(actions.fetchUsersFailure(errorMsg));\r\n//       });\r\n//   };\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const signIn = (user) => {\r\n  return (dispatch) => {\r\n    dispatch(actions.userLoginRequest());\r\n    api\r\n      .post(`v1/auth/login`, user)\r\n      .then((token) => {\r\n        // console.log(token)\r\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\r\n        dispatch(actions.userLoginSuccess(token));\r\n      })\r\n      .catch((error) => {\r\n        const errorMessage = error.message;\r\n        dispatch(actions.userLoginFailure(errorMessage));\r\n        console.log(error);\r\n        toast.error(error.message, {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\nexport const logOut = () => {\r\n  localStorage.removeItem(\"token\");\r\n  // localStorage.removeItem(\"refreshToken\");\r\n  localStorage.removeItem(\"redux\");\r\n  return (dispatch) => {\r\n    dispatch(actions.userLogout());\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}