{"ast":null,"code":"import { CREATE_USER_REQUEST, CREATE_USER_SUCCESS, CREATE_USER_FAILURE, GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILURE, GET_USER_BYID_REQUEST, GET_USER_BYID_SUCCESS, GET_USER_BYID_FAILURE, UPDATE_USER_BYID_REQUEST, UPDATE_USER_BYID_SUCCESS, UPDATE_USER_BYID_FAILURE, DELETE_USER_BYID_REQUEST, DELETE_USER_BYID_SUCCESS, DELETE_USER_BYID_FAILURE } from \"../actions/action-types\";\nconst initialState = {\n  loading: false,\n  results: [],\n  error: \"\"\n};\nexport function users() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CREATE_USER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case CREATE_USER_SUCCESS:\n      return { ...state,\n        loading: false\n      };\n\n    case CREATE_USER_FAILURE:\n      return { ...state,\n        loading: false\n      };\n\n    case GET_USER_REQUEST:\n      return { ...state\n      };\n\n    case GET_USER_SUCCESS:\n      // {\n      //     const results = action.payload?.response;\n      //     console.log(results,\"sa\")\n      // return {\n      //     ...state,\n      //     loading: false,\n      //     isLoggedIn: !!localStorage.getItem(\"token\"),\n      //     // results: action.payload?.response,\n      //     results: [\n      //      {\n      //       id: results.id,\n      //       name: results.name,\n      //       email: results.email,\n      //       role: results.role,\n      //       }],\n      //   };\n      // }\n      // return {\n      //   ...state,\n      // results: [action.payload.results, ...state.results],\n      return {\n        results: action.payload.results,\n        ...state.results\n      };\n    // ...state,\n    // results: [action.payload?.response, ...state.results],\n    // };\n\n    case GET_USER_FAILURE:\n      return { ...state,\n        error: action.payoad\n      };\n\n    case GET_USER_BYID_REQUEST:\n      return { ...state\n      };\n\n    case GET_USER_BYID_SUCCESS:\n      return {\n        results: action.payload,\n        ...state.results\n      };\n\n    case GET_USER_BYID_FAILURE:\n      return { ...state,\n        error: action.payload\n      };\n\n    case UPDATE_USER_BYID_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case UPDATE_USER_BYID_SUCCESS:\n      // return {\n      //   ...state,\n      //   loading: true,\n      // };\n      return { ...state,\n        results: state.results.filter(res => res._id !== action.payload),\n        loading: false\n      };\n      return Object.assign({}, state, {\n        results: [...filteredPeople, action.results]\n      }, {\n        personToUpdate: {\n          _id: \"\",\n          name: \"\",\n          email: \"\",\n          role: \"\"\n        }\n      }, {\n        loading: false\n      });\n    //  return { id: action.payload, ...state.results}\n\n    case UPDATE_USER_BYID_FAILURE:\n      return { ...state,\n        loading: false\n      };\n\n    case DELETE_USER_BYID_REQUEST:\n      return { ...state,\n        results: state.results.map(res => res._id === action.payload ? { ...res,\n          loading: true\n        } : res),\n        loading: true\n      };\n\n    case DELETE_USER_BYID_SUCCESS:\n      return { ...state,\n        results: state.results.filter(res => res._id !== action.payload),\n        loading: false\n      };\n\n    case DELETE_USER_BYID_FAILURE:\n      return { ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/reducers/user.js"],"names":["CREATE_USER_REQUEST","CREATE_USER_SUCCESS","CREATE_USER_FAILURE","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","GET_USER_BYID_REQUEST","GET_USER_BYID_SUCCESS","GET_USER_BYID_FAILURE","UPDATE_USER_BYID_REQUEST","UPDATE_USER_BYID_SUCCESS","UPDATE_USER_BYID_FAILURE","DELETE_USER_BYID_REQUEST","DELETE_USER_BYID_SUCCESS","DELETE_USER_BYID_FAILURE","initialState","loading","results","error","users","state","action","type","payload","payoad","filter","res","_id","Object","assign","filteredPeople","personToUpdate","name","email","role","map"],"mappings":"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","sourcesContent":["import {\r\n    CREATE_USER_REQUEST,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAILURE,\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    GET_USER_FAILURE,\r\n    GET_USER_BYID_REQUEST,\r\n    GET_USER_BYID_SUCCESS,\r\n    GET_USER_BYID_FAILURE,\r\n    UPDATE_USER_BYID_REQUEST,\r\n    UPDATE_USER_BYID_SUCCESS,\r\n    UPDATE_USER_BYID_FAILURE,\r\n    DELETE_USER_BYID_REQUEST,\r\n    DELETE_USER_BYID_SUCCESS,\r\n    DELETE_USER_BYID_FAILURE,\r\n  } from \"../actions/action-types\";\r\n  const initialState = {\r\n    loading: false,\r\n\r\n    results: [],\r\n    error: \"\",\r\n  };\r\n  export function users(state = initialState, action) {\r\n    switch (action.type) {\r\n      case CREATE_USER_REQUEST:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n      case CREATE_USER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n        };\r\n      case CREATE_USER_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n        };\r\n  \r\n      case GET_USER_REQUEST:\r\n        return {\r\n          ...state,\r\n        };\r\n      case GET_USER_SUCCESS:\r\n        // {\r\n        //     const results = action.payload?.response;\r\n        //     console.log(results,\"sa\")\r\n        // return {\r\n        //     ...state,\r\n        //     loading: false,\r\n        //     isLoggedIn: !!localStorage.getItem(\"token\"),\r\n        //     // results: action.payload?.response,\r\n        //     results: [\r\n        //      {\r\n        //       id: results.id,\r\n        //       name: results.name,\r\n        //       email: results.email,\r\n        //       role: results.role,\r\n              \r\n        //       }],\r\n        //   };\r\n        // }\r\n    \r\n        // return {\r\n        //   ...state,\r\n          // results: [action.payload.results, ...state.results],\r\n          return { results: action.payload.results, ...state.results}\r\n          // ...state,\r\n          // results: [action.payload?.response, ...state.results],\r\n        // };\r\n      case GET_USER_FAILURE:\r\n        return {\r\n          ...state,\r\n          error: action.payoad,\r\n        };\r\n  \r\n      case GET_USER_BYID_REQUEST:\r\n        return {\r\n          ...state,\r\n        };\r\n      case GET_USER_BYID_SUCCESS:\r\n        return { results: action.payload, ...state.results}\r\n      case GET_USER_BYID_FAILURE:\r\n        return {\r\n          ...state,\r\n          error: action.payload,\r\n        };\r\n  \r\n      case UPDATE_USER_BYID_REQUEST:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n      case UPDATE_USER_BYID_SUCCESS:\r\n        // return {\r\n        //   ...state,\r\n        //   loading: true,\r\n        // };\r\n\r\n         return {\r\n          ...state,\r\n          results: state.results.filter((res) => res._id !== action.payload),\r\n          loading: false,\r\n        };\r\n  \r\n        return Object.assign({}, state, { results: [ ...filteredPeople, action.results] }, { personToUpdate: {\r\n          _id: \"\",\r\n          name: \"\",\r\n          email: \"\",\r\n          role: \"\"\r\n        }}, {   loading: false, });\r\n  \r\n        //  return { id: action.payload, ...state.results}\r\n      case UPDATE_USER_BYID_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n        };\r\n  \r\n      case DELETE_USER_BYID_REQUEST:\r\n        return {\r\n          ...state,\r\n          results: state.results.map((res) =>\r\n            res._id === action.payload ? { ...res, loading: true } : res\r\n          ),\r\n          loading: true,\r\n        };\r\n      case DELETE_USER_BYID_SUCCESS:\r\n        return {\r\n          ...state,\r\n          results: state.results.filter((res) => res._id !== action.payload),\r\n          loading: false,\r\n        };\r\n      case DELETE_USER_BYID_FAILURE:\r\n        return {\r\n          ...state,\r\n          error: action.payload,\r\n          loading: false,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}