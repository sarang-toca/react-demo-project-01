{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import {\n//   makeStyles,\n//   useTheme,\n//   AppBar,\n//   Toolbar,\n//   Typography,\n//   Button,\n//   TableContainer,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Dialog,\n//   DialogActions,\n//   DialogContent,\n//   DialogContentText,\n//   useMediaQuery,\n// } from \"@material-ui/core\";\n// import {\n//   Add as AddIcon,\n//   Edit as EditIcon,\n//   Delete as DeleteIcon,\n// } from \"@material-ui/icons\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { getUsersAction, deleteUserAction } from '../actions/creators';\n// import * as ReactBootstrap from 'react-bootstrap';\n// import ReactPaginate from 'react-paginate';\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   menuButton: {\n//     marginRight: theme.spacing(2),\n//   },\n//   title: {\n//     flexGrow: 1,\n//     textAlign: \"center\",\n//   },\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   table: {\n//     flex: 1,\n//     alignContent: \"center\",\n//     justifyContent: \"center\",\n//   },\n// }));\n// function Read() {\n//       const [loading, setLoading] = useState(false);\n//       const [pageNumber, setPageNumber] = useState(0);\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n//   const dispatch = useDispatch();\n// //   const loading = useSelector((state) => state.users?.loading);\n//   const  users  = useSelector(state => state.users?.results);\n//   console.log(users)\n//   const [id, setId] = useState(\"\");\n//   const [open, setOpen] = useState(false);\n//   const usersPerPage = 7;\n//   const pagesVisited = pageNumber * usersPerPage;\n//   const pageCount = Math.ceil(users.length / usersPerPage);\n//   const changePage = ({ selected }) => {\n//       setPageNumber(selected);\n//   }\n//   useEffect(() => {\n//     dispatch(getUsersAction(), setLoading(true));\n//   }, []);\n//   useEffect(() => {\n//     console.log('loading', loading)\n//     if (!loading) {\n//       setOpen(loading);\n//     }\n//   }, [loading]);\n//   const openDialog = (id) => {\n//     setOpen(true);\n//     setId(id);\n//   };\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n//   const confirmDelete = () => {\n//     dispatch(deleteUserAction(id));\n//   };\n//   return (\n//     <React.Fragment>\n//       <AppBar position=\"static\">\n//         <Toolbar>\n//           <Typography variant=\"h6\" className={classes.title}>\n//             ReactJs CRUD App With React Redux Thunk\n//           </Typography>\n//         </Toolbar>\n//       </AppBar>\n//       <Link to=\"/create\">\n//         <Button\n//           variant=\"contained\"\n//           color=\"primary\"\n//           className={classes.button}\n//           startIcon={<AddIcon />}\n//         >\n//           Create User\n//         </Button>\n//       </Link>\n//       <TableContainer component={Paper}>\n//         <Table className={classes.table} aria-label=\"simple table\">\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>S.No</TableCell>\n//               <TableCell>Name</TableCell>\n//               <TableCell>Email</TableCell>\n//               <TableCell>Role</TableCell>\n//               <TableCell>Update</TableCell>\n//               <TableCell>Delete</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//           {loading ?\n//                                 users.slice(pagesVisited, pagesVisited + usersPerPage).filter( {\n//                                 }).map((user, index) => \n//               <TableRow key={index}>\n//                 <TableCell component=\"th\" scope=\"row\">\n//                   {index + 1}\n//                 </TableCell>\n//                 <TableCell>{user.name}</TableCell>\n//                 <TableCell>{user.email}</TableCell>\n//                 <TableCell>{user.role}</TableCell>\n//                 <TableCell>\n//                   <Link to={`/update/${user.id}`}>\n//                     <EditIcon>edit</EditIcon>\n//                   </Link>\n//                 </TableCell>\n//                 <TableCell>\n//                   <DeleteIcon onClick={() => openDialog(user.id)}>\n//                     delete\n//                   </DeleteIcon>\n//                 </TableCell>\n//               </TableRow>\n//            ) :\n//            <ReactBootstrap.Spinner animation=\"border\" variant=\"primary\" />\n//        }\n//           </TableBody>\n//         </Table>\n//         <ReactPaginate\n//                         previousLabel={\"Previous\"}\n//                         nextLabel={\"Next\"}\n//                         pageCount={pageCount}\n//                         onPageChange={changePage}\n//                         containerClassName={\"paginationBttns\"}\n//                         previousLinkClassName={\"previousBttns\"}\n//                         nextLinkClassName={\"nextBttn\"}\n//                         disabledClassName={\"paginationDisabled\"}\n//                         activeClassName={\"paginationActive\"}\n//                     />\n//       </TableContainer>\n//       {open && (\n//         <Dialog\n//           fullScreen={fullScreen}\n//           open={open}\n//           onClose={handleClose}\n//           aria-labelledby=\"Delete User\"\n//         >\n//           <DialogContent style={{ width: 300 }}>\n//             <DialogContentText>Are you sure?</DialogContentText>\n//           </DialogContent>\n//           <DialogActions>\n//             <Button autoFocus onClick={handleClose} color=\"primary\">\n//               Cancel\n//             </Button>\n//             <Button onClick={confirmDelete}   href='/dashboard' color=\"primary\" autoFocus>\n//               Delete\n//             </Button>\n//           </DialogActions>\n//         </Dialog>\n//       )}\n//     </React.Fragment>\n//   )\n//     }\n// export default Read;\nimport React, { useEffect, useState } from 'react'; // import { Card, Table, Button } from 'react-bootstrap';\n\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUsersAction, deleteUserAction } from '../actions/creators';\nimport * as ReactBootstrap from 'react-bootstrap';\nimport ReactPaginate from 'react-paginate';\nimport './index.css';\nimport { makeStyles, useTheme, AppBar, Toolbar, Typography, Button, TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper, Dialog, DialogActions, DialogContent, DialogContentText, useMediaQuery } from \"@material-ui/core\";\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  table: {\n    flex: 1,\n    alignContent: \"center\",\n    justifyContent: \"center\"\n  }\n}));\n\nconst Read = () => {\n  _s();\n\n  const [id, setId] = useState(\"\"); //   const [open, setOpen] = useState(false);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const dispatch = useDispatch();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(0);\n  const users = useSelector(state => {\n    var _state$users;\n\n    return (_state$users = state.users) === null || _state$users === void 0 ? void 0 : _state$users.results;\n  });\n  const usersPerPage = 7;\n  const pagesVisited = pageNumber * usersPerPage;\n  const pageCount = Math.ceil(users.length / usersPerPage);\n\n  const changePage = _ref => {\n    let {\n      selected\n    } = _ref;\n    setPageNumber(selected);\n  }; // const handleDelete = (id) => {\n  //     if (window.confirm(\"Are you sure You want to delete?\"));\n  //     dispatch(deleteUserAction(id));\n  // }\n\n\n  const openDialog = id => {\n    setOpen(true);\n    setId(id);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const confirmDelete = () => {\n    dispatch(deleteUserAction(id));\n  };\n\n  useEffect(() => {\n    dispatch(getUsersAction(), setLoading(true));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          children: \"ReactJs CRUD App With React Redux Thunk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/create\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        placeholder: \"Search user\",\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 23\n        }, this),\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"S.No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: loading ? users.slice(pagesVisited, pagesVisited + usersPerPage).filter(val => {\n            if (searchTerm === \"\") {\n              return val;\n            } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase()) || val.email.toLowerCase().includes(searchTerm.toLowerCase()) || val.role.toLowerCase().includes(searchTerm.toLowerCase())) {\n              return val;\n            }\n\n            return false;\n          }).map((user, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: user.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/update/${user.id}`,\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                  children: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                onClick: () => openDialog(user.id),\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)) : /*#__PURE__*/_jsxDEV(ReactBootstrap.Spinner, {\n            animation: \"border\",\n            variant: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"react-paginate\",\n        children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          pageCount: pageCount,\n          onPageChange: changePage,\n          breakClassName: 'page-item',\n          breakLinkClassName: 'page-link',\n          containerClassName: 'pagination',\n          pageClassName: 'page-item',\n          pageLinkClassName: 'page-link',\n          previousClassName: 'page-item',\n          previousLinkClassName: 'page-link',\n          nextClassName: 'page-item',\n          nextLinkClassName: 'page-link',\n          activeClassName: 'active'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: fullScreen,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"Delete User\",\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        style: {\n          width: 300\n        },\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Are you sure?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          autoFocus: true,\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: confirmDelete,\n          href: \"/dashboard\",\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Read, \"KpfTZMWtQrBvq1Mhyqp/eWJy2K0=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery, useDispatch, useSelector];\n});\n\n_c = Read;\n{\n  /* <Card >\r\n     <Card.Header className={\"border border-dark bg-dark text-white\"}> UserList</Card.Header>\r\n     <Card.Body>\r\n         <span className=\"col-md-8\">\r\n             <span className=\"input-group mb-3 \">\r\n                 <input\r\n                     type=\"text\"\r\n                     className=\"form-control \"\r\n                     placeholder=\"Search user\"\r\n                     onChange={(e) => {\r\n                         setSearchTerm(e.target.value);\r\n                     }}\r\n                 />\r\n                 <Link type=\"button\" to={'/create'} className=\"btn btn-primary \" id=\"tab\">Add User</Link>\r\n             </span>\r\n         </span>\r\n           <Table variant=\"\" >\r\n             <thead className={\"border border-dark bg-dark text-white\"}>\r\n                 <tr>\r\n                     <th>id</th>\r\n                     <th>Email</th>\r\n                     <th>Name</th>\r\n                     <th>Role</th>\r\n                     <th>Action</th>\r\n                 </tr>\r\n             </thead>\r\n             <tbody>\r\n                 {loading ?\r\n                     users.slice(pagesVisited, pagesVisited + usersPerPage).filter(val => {\r\n                         if (searchTerm === \"\") {\r\n                             return val;\r\n                         } else if (\r\n                             val.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                             val.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                             val.role.toLowerCase().includes(searchTerm.toLowerCase())\r\n                         ) {\r\n                             return val;\r\n                         }\r\n                         return false;\r\n                     }).map((user) =>\r\n                         <tr key={user.id}>\r\n                             <td>{user.id}</td>\r\n                             <td> {user.email}</td>\r\n                             <td>{user.name}</td>\r\n                             <td>{user.role}</td>\r\n                             <td>\r\n                                 <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                     <Link type=\"button\" to={'/update/' + user.id} className=\"btn btn-info\">Edit</Link>\r\n                                     {/* <Link type=\"button\" to={'/details/' + user.id} className=\"btn btn-warning\">Details</Link> */\n} //                                                 <Button type=\"button\" onClick={() => handleDelete(user.id)} className=\"btn btn-danger\">Delete</Button>\n//                                             </div>\n//                                         </td>\n//                                     </tr>\n//                                 ) :\n//                                 <ReactBootstrap.Spinner animation=\"border\" variant=\"primary\" />\n//                             }\n//                         </tbody>\n//                     </Table>\n//                      <div id=\"react-paginate\">\n//                     <ReactPaginate\n//                         pageCount={pageCount}\n//                         onPageChange={changePage}\n//                         breakClassName={'page-item'}\n//                         breakLinkClassName={'page-link'}\n//                         containerClassName={'pagination'}\n//                         pageClassName={'page-item'}\n//                         pageLinkClassName={'page-link'}\n//                         previousClassName={'page-item'}\n//                         previousLinkClassName={'page-link'}\n//                         nextClassName={'page-item'}\n//                         nextLinkClassName={'page-link'}\n//                         activeClassName={'active'} \n//                     />\n//                      </div> \n//                 </Card.Body>\n//             </Card> */}\n//         </div >\n//     );\n// }\n\nexport default Read;\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx"],"names":["React","useEffect","useState","Link","useDispatch","useSelector","getUsersAction","deleteUserAction","ReactBootstrap","ReactPaginate","makeStyles","useTheme","AppBar","Toolbar","Typography","Button","TableContainer","Table","TableBody","TableCell","TableHead","TableRow","Paper","Dialog","DialogActions","DialogContent","DialogContentText","useMediaQuery","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","button","margin","table","flex","alignContent","justifyContent","Read","id","setId","classes","fullScreen","breakpoints","down","dispatch","searchTerm","setSearchTerm","loading","setLoading","pageNumber","setPageNumber","users","state","results","usersPerPage","pagesVisited","pageCount","Math","ceil","length","changePage","selected","openDialog","setOpen","handleClose","confirmDelete","e","target","value","slice","filter","val","name","toLowerCase","includes","email","role","map","user","index","open","width"],"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A,KAAK,EAAC,SAA1D;AAAoE,UAAA,SAAS,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YApGH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6HE,CA3KN;;GAAM5B,I;UAIYf,S,EACAvB,Q,EACKgB,a,EAEFvB,W,EAMDC,W;;;KAdd4C,I;AA+KM;AAAC;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiJ,C,CACjJ;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;;AAEA,eAAeA,IAAf","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import {\r\n//   makeStyles,\r\n//   useTheme,\r\n//   AppBar,\r\n//   Toolbar,\r\n//   Typography,\r\n//   Button,\r\n//   TableContainer,\r\n//   Table,\r\n//   TableBody,\r\n//   TableCell,\r\n//   TableHead,\r\n//   TableRow,\r\n//   Paper,\r\n//   Dialog,\r\n//   DialogActions,\r\n//   DialogContent,\r\n//   DialogContentText,\r\n//   useMediaQuery,\r\n// } from \"@material-ui/core\";\r\n// import {\r\n//   Add as AddIcon,\r\n//   Edit as EditIcon,\r\n//   Delete as DeleteIcon,\r\n// } from \"@material-ui/icons\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import { getUsersAction, deleteUserAction } from '../actions/creators';\r\n// import * as ReactBootstrap from 'react-bootstrap';\r\n// import ReactPaginate from 'react-paginate';\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: theme.spacing(2),\r\n//   },\r\n//   title: {\r\n//     flexGrow: 1,\r\n//     textAlign: \"center\",\r\n//   },\r\n//   button: {\r\n//     margin: theme.spacing(1),\r\n//   },\r\n//   table: {\r\n//     flex: 1,\r\n//     alignContent: \"center\",\r\n//     justifyContent: \"center\",\r\n//   },\r\n// }));\r\n\r\n// function Read() {\r\n   \r\n//       const [loading, setLoading] = useState(false);\r\n//       const [pageNumber, setPageNumber] = useState(0);\r\n//   const classes = useStyles();\r\n//   const theme = useTheme();\r\n//   const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n//   const dispatch = useDispatch();\r\n// //   const loading = useSelector((state) => state.users?.loading);\r\n//   const  users  = useSelector(state => state.users?.results);\r\n//   console.log(users)\r\n//   const [id, setId] = useState(\"\");\r\n//   const [open, setOpen] = useState(false);\r\n\r\n//   const usersPerPage = 7;\r\n//   const pagesVisited = pageNumber * usersPerPage;\r\n//   const pageCount = Math.ceil(users.length / usersPerPage);\r\n\r\n//   const changePage = ({ selected }) => {\r\n//       setPageNumber(selected);\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getUsersAction(), setLoading(true));\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     console.log('loading', loading)\r\n//     if (!loading) {\r\n//       setOpen(loading);\r\n//     }\r\n//   }, [loading]);\r\n\r\n//   const openDialog = (id) => {\r\n//     setOpen(true);\r\n//     setId(id);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   const confirmDelete = () => {\r\n      \r\n//     dispatch(deleteUserAction(id));\r\n//   };\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <AppBar position=\"static\">\r\n//         <Toolbar>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             ReactJs CRUD App With React Redux Thunk\r\n//           </Typography>\r\n//         </Toolbar>\r\n//       </AppBar>\r\n//       <Link to=\"/create\">\r\n//         <Button\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           className={classes.button}\r\n//           startIcon={<AddIcon />}\r\n//         >\r\n//           Create User\r\n//         </Button>\r\n//       </Link>\r\n//       <TableContainer component={Paper}>\r\n//         <Table className={classes.table} aria-label=\"simple table\">\r\n//           <TableHead>\r\n//             <TableRow>\r\n//               <TableCell>S.No</TableCell>\r\n//               <TableCell>Name</TableCell>\r\n//               <TableCell>Email</TableCell>\r\n//               <TableCell>Role</TableCell>\r\n//               <TableCell>Update</TableCell>\r\n//               <TableCell>Delete</TableCell>\r\n//             </TableRow>\r\n//           </TableHead>\r\n//           <TableBody>\r\n//           {loading ?\r\n//                                 users.slice(pagesVisited, pagesVisited + usersPerPage).filter( {\r\n                                  \r\n//                                 }).map((user, index) => \r\n//               <TableRow key={index}>\r\n//                 <TableCell component=\"th\" scope=\"row\">\r\n//                   {index + 1}\r\n//                 </TableCell>\r\n//                 <TableCell>{user.name}</TableCell>\r\n//                 <TableCell>{user.email}</TableCell>\r\n//                 <TableCell>{user.role}</TableCell>\r\n//                 <TableCell>\r\n//                   <Link to={`/update/${user.id}`}>\r\n//                     <EditIcon>edit</EditIcon>\r\n//                   </Link>\r\n//                 </TableCell>\r\n//                 <TableCell>\r\n//                   <DeleteIcon onClick={() => openDialog(user.id)}>\r\n//                     delete\r\n//                   </DeleteIcon>\r\n//                 </TableCell>\r\n//               </TableRow>\r\n//            ) :\r\n//            <ReactBootstrap.Spinner animation=\"border\" variant=\"primary\" />\r\n//        }\r\n//           </TableBody>\r\n//         </Table>\r\n//         <ReactPaginate\r\n//                         previousLabel={\"Previous\"}\r\n//                         nextLabel={\"Next\"}\r\n//                         pageCount={pageCount}\r\n//                         onPageChange={changePage}\r\n//                         containerClassName={\"paginationBttns\"}\r\n//                         previousLinkClassName={\"previousBttns\"}\r\n//                         nextLinkClassName={\"nextBttn\"}\r\n//                         disabledClassName={\"paginationDisabled\"}\r\n//                         activeClassName={\"paginationActive\"}\r\n\r\n//                     />\r\n//       </TableContainer>\r\n//       {open && (\r\n//         <Dialog\r\n//           fullScreen={fullScreen}\r\n//           open={open}\r\n//           onClose={handleClose}\r\n//           aria-labelledby=\"Delete User\"\r\n//         >\r\n//           <DialogContent style={{ width: 300 }}>\r\n//             <DialogContentText>Are you sure?</DialogContentText>\r\n//           </DialogContent>\r\n//           <DialogActions>\r\n//             <Button autoFocus onClick={handleClose} color=\"primary\">\r\n//               Cancel\r\n//             </Button>\r\n//             <Button onClick={confirmDelete}   href='/dashboard' color=\"primary\" autoFocus>\r\n//               Delete\r\n//             </Button>\r\n//           </DialogActions>\r\n//         </Dialog>\r\n//       )}\r\n      \r\n//     </React.Fragment>\r\n      \r\n//   )\r\n\r\n//     }\r\n\r\n// export default Read;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// import { Card, Table, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUsersAction, deleteUserAction } from '../actions/creators';\r\nimport * as ReactBootstrap from 'react-bootstrap';\r\nimport ReactPaginate from 'react-paginate';\r\nimport './index.css'\r\nimport {\r\n  makeStyles,\r\n  useTheme,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n} from \"@material-ui/icons\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  table: {\r\n    flex: 1,\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst Read = () => {\r\n\r\n  const [id, setId] = useState(\"\");\r\n//   const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const dispatch = useDispatch();\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n\r\n\r\n    const  users  = useSelector(state => state.users?.results);\r\n\r\n    const usersPerPage = 7;\r\n    const pagesVisited = pageNumber * usersPerPage;\r\n    const pageCount = Math.ceil(users.length / usersPerPage);\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected);\r\n    }\r\n\r\n    // const handleDelete = (id) => {\r\n    //     if (window.confirm(\"Are you sure You want to delete?\"));\r\n    //     dispatch(deleteUserAction(id));\r\n    // }\r\n    const openDialog = (id) => {\r\n          setOpen(true);\r\n          setId(id);\r\n        };\r\n      \r\n        const handleClose = () => {\r\n          setOpen(false);\r\n        };\r\n      \r\n        const confirmDelete = () => {\r\n            \r\n          dispatch(deleteUserAction(id));\r\n        };\r\n      \r\n    useEffect(() => {\r\n        dispatch(getUsersAction(), setLoading(true));\r\n    }, []);\r\n\r\n    return (\r\n      <React.Fragment>\r\n      \r\n\r\n<AppBar position=\"static\">\r\n        <Toolbar>\r\n           <Typography variant=\"h6\" className={classes.title}>\r\n             ReactJs CRUD App With React Redux Thunk\r\n           </Typography>\r\n         </Toolbar>\r\n       </AppBar>\r\n\r\n       <Link to=\"/create\">\r\n       <input\r\n                                type=\"text\"\r\n                                className=\"form-control \"\r\n                                placeholder=\"Search user\"\r\n                                onChange={(e) => {\r\n                                    setSearchTerm(e.target.value);\r\n                                }}/>\r\n         <Button\r\n         variant=\"contained\"\r\n         color=\"primary\"\r\n          className={classes.button}\r\n           startIcon={<AddIcon />}\r\n       >\r\n         Create User\r\n        </Button>\r\n      </Link>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n           <TableHead>\r\n             <TableRow>\r\n               <TableCell>S.No</TableCell>\r\n               <TableCell>Name</TableCell>\r\n               <TableCell>Email</TableCell>\r\n               <TableCell>Role</TableCell>\r\n               <TableCell>Update</TableCell>\r\n               <TableCell>Delete</TableCell>\r\n             </TableRow>\r\n           </TableHead>\r\n           <TableBody>\r\n           {loading ?\r\n                                users.slice(pagesVisited, pagesVisited + usersPerPage).filter(val => {\r\n                                  if (searchTerm === \"\") {\r\n                                    return val;\r\n                                } else if (\r\n                                    val.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                                    val.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                                    val.role.toLowerCase().includes(searchTerm.toLowerCase())\r\n                                ) {\r\n                                    return val;\r\n                                }\r\n                                return false;\r\n                             \r\n                                }).map((user, index) => \r\n              <TableRow key={index}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {index + 1}\r\n                </TableCell>\r\n                <TableCell>{user.name}</TableCell>\r\n                <TableCell>{user.email}</TableCell>\r\n                <TableCell>{user.role}</TableCell>\r\n                <TableCell>\r\n                  <Link to={`/update/${user.id}`}>\r\n                    <EditIcon>edit</EditIcon>\r\n                  </Link>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <DeleteIcon onClick={() => openDialog(user.id)}>\r\n                    delete\r\n                  </DeleteIcon>\r\n                </TableCell>\r\n              </TableRow>\r\n           ) :\r\n           <ReactBootstrap.Spinner animation=\"border\" variant=\"primary\" />\r\n       }\r\n          </TableBody>\r\n        </Table>\r\n        <div id=\"react-paginate\">\r\n                    <ReactPaginate\r\n                        pageCount={pageCount}\r\n                        onPageChange={changePage}\r\n                        breakClassName={'page-item'}\r\n                        breakLinkClassName={'page-link'}\r\n                        containerClassName={'pagination'}\r\n                        pageClassName={'page-item'}\r\n                        pageLinkClassName={'page-link'}\r\n                        previousClassName={'page-item'}\r\n                        previousLinkClassName={'page-link'}\r\n                        nextClassName={'page-item'}\r\n                        nextLinkClassName={'page-link'}\r\n                        activeClassName={'active'} \r\n\r\n                    />\r\n                     </div> \r\n      </TableContainer>\r\n\r\n\r\n\r\n      {open && (\r\n         <Dialog\r\n           fullScreen={fullScreen}\r\n           open={open}\r\n           onClose={handleClose}\r\n           aria-labelledby=\"Delete User\"\r\n         >\r\n           <DialogContent style={{ width: 300 }}>\r\n             <DialogContentText>Are you sure?</DialogContentText>\r\n           </DialogContent>\r\n           <DialogActions>\r\n             <Button autoFocus onClick={handleClose} color=\"primary\">\r\n               Cancel\r\n             </Button>\r\n             <Button onClick={confirmDelete}   href='/dashboard' color=\"primary\" autoFocus>\r\n               Delete\r\n             </Button>\r\n           </DialogActions>\r\n         </Dialog>\r\n       )}\r\n      \r\n     </React.Fragment>\r\n      \r\n   )\r\n\r\n     }\r\n\r\n\r\n\r\n            {/* <Card >\r\n                <Card.Header className={\"border border-dark bg-dark text-white\"}> UserList</Card.Header>\r\n                <Card.Body>\r\n                    <span className=\"col-md-8\">\r\n                        <span className=\"input-group mb-3 \">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control \"\r\n                                placeholder=\"Search user\"\r\n                                onChange={(e) => {\r\n                                    setSearchTerm(e.target.value);\r\n                                }}\r\n                            />\r\n                            <Link type=\"button\" to={'/create'} className=\"btn btn-primary \" id=\"tab\">Add User</Link>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <Table variant=\"\" >\r\n                        <thead className={\"border border-dark bg-dark text-white\"}>\r\n                            <tr>\r\n                                <th>id</th>\r\n                                <th>Email</th>\r\n                                <th>Name</th>\r\n                                <th>Role</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {loading ?\r\n                                users.slice(pagesVisited, pagesVisited + usersPerPage).filter(val => {\r\n                                    if (searchTerm === \"\") {\r\n                                        return val;\r\n                                    } else if (\r\n                                        val.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                                        val.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                                        val.role.toLowerCase().includes(searchTerm.toLowerCase())\r\n                                    ) {\r\n                                        return val;\r\n                                    }\r\n                                    return false;\r\n                                }).map((user) =>\r\n                                    <tr key={user.id}>\r\n                                        <td>{user.id}</td>\r\n                                        <td> {user.email}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.role}</td>\r\n                                        <td>\r\n                                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                                <Link type=\"button\" to={'/update/' + user.id} className=\"btn btn-info\">Edit</Link>\r\n                                                {/* <Link type=\"button\" to={'/details/' + user.id} className=\"btn btn-warning\">Details</Link> */}\r\n//                                                 <Button type=\"button\" onClick={() => handleDelete(user.id)} className=\"btn btn-danger\">Delete</Button>\r\n\r\n//                                             </div>\r\n//                                         </td>\r\n//                                     </tr>\r\n                                      \r\n//                                 ) :\r\n//                                 <ReactBootstrap.Spinner animation=\"border\" variant=\"primary\" />\r\n//                             }\r\n\r\n//                         </tbody>\r\n\r\n//                     </Table>\r\n//                      <div id=\"react-paginate\">\r\n//                     <ReactPaginate\r\n//                         pageCount={pageCount}\r\n//                         onPageChange={changePage}\r\n//                         breakClassName={'page-item'}\r\n//                         breakLinkClassName={'page-link'}\r\n//                         containerClassName={'pagination'}\r\n//                         pageClassName={'page-item'}\r\n//                         pageLinkClassName={'page-link'}\r\n//                         previousClassName={'page-item'}\r\n//                         previousLinkClassName={'page-link'}\r\n//                         nextClassName={'page-item'}\r\n//                         nextLinkClassName={'page-link'}\r\n//                         activeClassName={'active'} \r\n\r\n//                     />\r\n//                      </div> \r\n        \r\n//                 </Card.Body>\r\n\r\n//             </Card> */}\r\n//         </div >\r\n\r\n//     );\r\n// }\r\n\r\nexport default Read;"]},"metadata":{},"sourceType":"module"}