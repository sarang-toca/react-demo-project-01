{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Dashboard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GithubData(_ref) {\n  let {\n    auth: data\n  } = _ref;\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Name: \", data.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Blog: \", data.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = GithubData;\nGithubData.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data\n  };\n};\n\nexport default connect(mapStateToProps, null)(GithubData); // import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// // import Dash from \"./JargonList\";\n// import UsersDetails from \"./Tables/UsersDetails/ UserDetails\";\n// const Dashboard = () => {\n// \treturn (\n//     <UsersDetails />\n// \t\t// <div style={{ marginTop: \"5rem\", textAlign: \"center\" }}>\n// \t\t// \t<h1>Name: {user && user.name}</h1>\n//     //         <h1>Email: {user && user.email}</h1>\n//     //         <h1>token: {user && user.token}</h1>\n//     //         <h1>role: {user && user.role}</h1>\n//     //         {/* <Listing/> */}\n//     //         {/* <AddTutorial/> */}\n// \t\t// \t{/* <TutorialsList/> */}\n//     //   <JargonList/>\n// \t\t// </div>    \n// \t);\n// };\n// Dashboard.propTypes = {\n// \tauth: PropTypes.object.isRequired,\n// };\n// const mapStateToProps = (state) => ({\n// \tauth: state.auth,\n// });\n// export default connect(mapStateToProps)(Dashboard);\n// // import React, { useState, useEffect } from \"react\";\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { Link } from \"react-router-dom\";\n// // import {\n// //   retrieveTutorials,\n// //    findTutorialsByName,\n// //   deleteAllTutorials,\n// // } from \"../actions/tutorials\";\n// // const TutorialsList = () => {\n// //   const [currentTutorial, setCurrentTutorial] = useState(null);\n// //   const [currentIndex, setCurrentIndex] = useState(-1);\n// //   const [searchName, setSearchName] = useState(\"\");\n// //   const tutorials = useSelector(state => state.tutorials);\n// //   const dispatch = useDispatch();\n// //   useEffect(() => {\n// //     dispatch(retrieveTutorials());\n// //   }, []);\n// //   const onChangeSearchTitle = e => {\n// //     const searchName = e.target.value;\n// //     setSearchName(searchName);\n// //   };\n// //   const refreshData = () => {\n// //     setCurrentTutorial(null);\n// //     setCurrentIndex(-1);\n// //   };\n// //   const setActiveTutorial = (tutorial, index) => {\n// //     setCurrentTutorial(tutorial);\n// //     setCurrentIndex(index);\n// //   };\n// //   const removeAllTutorials = () => {\n// //     dispatch(deleteAllTutorials())\n// //       .then(response => {\n// //         console.log(response);\n// //         refreshData();\n// //       })\n// //       .catch(e => {\n// //         console.log(e);\n// //       });\n// //   };\n// //   const findByName = () => {\n// //     refreshData();\n// //     dispatch(findTutorialsByName(searchName));\n// //   };\n// //   return (\n// //     <div className=\"list row\">\n// //     <div className=\"col-md-8\">\n// //       <div className=\"input-group mb-3\">\n// //         <input\n// //           type=\"text\"\n// //           className=\"form-control\"\n// //           placeholder=\"Search by title\"\n// //           value={searchName}\n// //           onChange={onChangeSearchTitle}\n// //         />\n// //         <div className=\"input-group-append\">\n// //           <button\n// //             className=\"btn btn-outline-secondary\"\n// //             type=\"button\"\n// //             onClick={findByName}\n// //           >\n// //             Search\n// //           </button>\n// //         </div>\n// //       </div>\n// //     </div>\n// //     <div className=\"col-md-6\">\n// //       <h4>Tutorials List</h4>\n// //       <ul className=\"list-group\">\n// //         {tutorials &&\n// //           tutorials.map((tutorial, index) => (\n// //             <li\n// //               className={\n// //                 \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n// //               }\n// //               onClick={() => setActiveTutorial(tutorial, index)}\n// //               key={index}\n// //             >\n// //               {tutorial.name}\n// //             </li>\n// //           ))}\n// //       </ul>\n// //       <button\n// //         className=\"m-3 btn btn-sm btn-danger\"\n// //         onClick={removeAllTutorials}\n// //       >\n// //         Remove All\n// //       </button>\n// //     </div>\n// //     <div className=\"col-md-6\">\n// //       {currentTutorial ? (\n// //         <div>\n// //           <h4>Tutorial</h4>\n// //           <div>\n// //             <label>\n// //               <strong>Name:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.name}\n// //           </div>\n// //           <div>\n// //             <label>\n// //               <strong>Email:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.email}\n// //           </div>\n// //           <div>\n// //             <label>\n// //               <strong>Status:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.published ? \"Published\" : \"Pending\"}\n// //           </div>\n// //           <Link\n// //             to={\"/users/\" + currentTutorial.id}\n// //             className=\"badge badge-warning\"\n// //           >\n// //             Edit\n// //           </Link>\n// //         </div>\n// //       ) : (\n// //         <div>\n// //           <br />\n// //           <p>Please click on a Tutorial...</p>\n// //         </div>\n// //       )}\n// //     </div>\n// //   </div>\n// //   );\n// // };\n// // export default TutorialsList;\n// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { createTutorial } from \"../actions/tutorials\";\n// const AddTutorial = () => {\n//   const initialTutorialState = {\n//     id: null,\n//     name: \"\",\n//     email: \"\",\n// \tpassword:\"\",\n// \trole:\"\",\n//     published: false\n//   };\n//   const [tutorial, setTutorial] = useState(initialTutorialState);\n//   const [submitted, setSubmitted] = useState(false);\n//   const dispatch = useDispatch();\n//   const handleInputChange = event => {\n//     const { name, value } = event.target;\n//     setTutorial({ ...tutorial, [name]: value });\n//   };\n//   const saveTutorial = () => {\n//     const { name, email, password, role } = tutorial;\n//     dispatch(createTutorial(name, email, password, role))\n//       .then(data => {\n//         setTutorial({\n//           id: data.id,\n//           name: data.name,\n//           email: data.email,\n// \t\t  password: data.password,\n// \t\t  role: data.role,\n//           published: data.published\n//         });\n//         setSubmitted(true);\n//         console.log(data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\n//   const newTutorial = () => {\n//     setTutorial(initialTutorialState);\n//     setSubmitted(false);\n//   };\n//   return (\n//     <div className=\"submit-form\">\n//     {submitted ? (\n//       <div>\n//         <h4>You submitted successfully!</h4>\n//         <button className=\"btn btn-success\" onClick={newTutorial}>\n//           Add\n//         </button>\n//       </div>\n//     ) : (\n//       <div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"name\">Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"name\"\n//             required\n//             value={tutorial.name}\n//             onChange={handleInputChange}\n//             name=\"name\"\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\">Email</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"email\"\n//             required\n//             value={tutorial.email}\n//             onChange={handleInputChange}\n//             name=\"email\"\n//           />\n//         </div>\n// \t\t<div className=\"form-group\">\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             className=\"form-control\"\n//             id=\"password\"\n//             required\n//             value={tutorial.password}\n//             onChange={handleInputChange}\n//             name=\"password\"\n//           />\n//         </div>\n// \t\t<div className=\"form-group\">\n//           <label htmlFor=\"role\">Role</label>\n//           <input\n//             type=\"role\"\n//             className=\"form-control\"\n//             id=\"role\"\n//             required\n//             value={tutorial.role}\n//             onChange={handleInputChange}\n//             name=\"role\"\n//           />\n//         </div>\n//         <button onClick={saveTutorial} className=\"btn btn-success\">\n//           Submit\n//         </button>\n//       </div>\n//     )}\n//   </div>\n// );\n// };\n// // export default AddTutorial;\n// import React from 'react'\n// import AddUserForm from './AddUserForm'\n// function Dashboard() {\n// \treturn (\n// \t\t<div>\n// \t\t\t<AddUserForm/>\n// \t\t</div>\n// \t)\n// }\n// export default Dashboard\n// import React, { useState } from 'react'\n// import {useDispatch} from 'react-redux'\n// import { addNewUser  } from '../actions/authActions';\n// import PropTypes from \"prop-types\";\n// function AddUserForm(users) {\n//     const dispatch = useDispatch();\n//     const [newUserName, setNewUserName] = useState('');\n// \tconst [newUserEmail, setNewUserEmail] = useState('');\n// \t// const [newUserPassword, setNewUserPassword] = useState('');\n// \tconst [newUserRole, setNewUserRole] = useState('');\n//    const handleSubmit = (e) =>{\n//     e.preventDefault();\n//     const usersList = users;\n//     //  const newUserId = usersList[usersList.length - 1].id + 1;\n//     console.log(\"your name\", usersList);\n// \t// console.log(\"\", usersList);\n//     // console.log(\"your id\", newUserId)\n//     dispatch(addNewUser({\n//       name: newUserName,\n// \t  email: newUserEmail,\n// \t  // password: newUserPassword,\n// \t  role: newUserRole\n//     }));\n//    }\n//   const handleCancel = () => {};\n//   return (\n//     <tr>\n//       {/* <td>{newUserName.id}</td> */}\n//       <td>\n//         <input\n//           value={newUserName}\n//           name=\"name\"\n//           onChange={e => setNewUserName(e.target.value)}\n//         />\n//       </td>\n// \t  <td>\n//         <input\n//           value={newUserEmail}\n//           name=\"email\"\n//           onChange={e => setNewUserEmail(e.target.value)}\n//         />\n//       </td>\n// \t  {/* <td>\n//         <input\n//           value={newUserPassword}\n//           name=\"password\"\n//           onChange={e => setNewUserPassword(e.target.value)}\n//         />\n//       </td> */}\n// \t  <td>\n//         <input\n//           value={newUserRole}\n//           name=\"role\"\n//           onChange={e => setNewUserRole(e.target.value)}\n//         />\n//       </td>\n//       <td>\n//         <button type=\"button\" className=\"btn outline\" onClick={handleCancel}>\n//           <i className=\"material-icons\">Cancel</i>\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-success btn-link\"\n//           onClick={handleSubmit}\n//         >\n//           <i className=\"material-icons\">save</i>\n//         </button>\n//       </td>\n//     </tr>\n//   );\n// }\n// AddUserForm.prototype = {\n// users: PropTypes.func.isRequired,\n// }\n// export default AddUserForm\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubData\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Dashboard.js"],"names":["React","connect","PropTypes","GithubData","auth","data","name","email","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AACA,SAASC,UAAT,OAAmC;AAAA,MAAf;AAACC,IAAAA,IAAI,EAAEC;AAAP,GAAe;;AACjC,MAAG,CAACA,IAAJ,EAAU;AACR,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACE;AAAA,4BACE;AAAA,2BACUA,IAAI,CAACC,IADf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,2BACUD,IAAI,CAACE,KADf;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KArBQJ,U;AAsBTA,UAAU,CAACK,SAAX,GAAuB;AACtBH,EAAAA,IAAI,EAAEH,SAAS,CAACO,MAAV,CAAiBC;AADD,CAAvB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLP,IAAAA,IAAI,EAAEO,KAAK,CAACP;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CACpBU,eADoB,EAEpB,IAFoB,CAAP,CAGbR,UAHa,CAAfsourcesContent":["\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nfunction GithubData({auth: data }) {\n  if(!data) {\n    return (\n      <div>\n        No Data\n      </div>\n    )\n  }\n  return (\n    <div>\n      <div>\n        Name: { data.name }\n      </div>\n      <br />\n      <div>\n        Blog: { data.email }\n      </div>\n      <br />\n    \n    </div>\n  );\n}\nGithubData.propTypes = {\n\tdata: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(GithubData);\n\n\n\n// import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// // import Dash from \"./JargonList\";\n// import UsersDetails from \"./Tables/UsersDetails/ UserDetails\";\n// const Dashboard = () => {\n \n// \treturn (\n//     <UsersDetails />\n// \t\t// <div style={{ marginTop: \"5rem\", textAlign: \"center\" }}>\n// \t\t// \t<h1>Name: {user && user.name}</h1>\n//     //         <h1>Email: {user && user.email}</h1>\n//     //         <h1>token: {user && user.token}</h1>\n//     //         <h1>role: {user && user.role}</h1>\n//     //         {/* <Listing/> */}\n//     //         {/* <AddTutorial/> */}\n// \t\t// \t{/* <TutorialsList/> */}\n//     //   <JargonList/>\n\t\n// \t\t// </div>    \n// \t);\n// };\n// Dashboard.propTypes = {\n// \tauth: PropTypes.object.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({\n// \tauth: state.auth,\n// });\n\n// export default connect(mapStateToProps)(Dashboard);\n\n\n\n// // import React, { useState, useEffect } from \"react\";\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { Link } from \"react-router-dom\";\n// // import {\n// //   retrieveTutorials,\n// //    findTutorialsByName,\n// //   deleteAllTutorials,\n// // } from \"../actions/tutorials\";\n// // const TutorialsList = () => {\n// //   const [currentTutorial, setCurrentTutorial] = useState(null);\n// //   const [currentIndex, setCurrentIndex] = useState(-1);\n\n// //   const [searchName, setSearchName] = useState(\"\");\n// //   const tutorials = useSelector(state => state.tutorials);\n// //   const dispatch = useDispatch();\n// //   useEffect(() => {\n// //     dispatch(retrieveTutorials());\n// //   }, []);\n// //   const onChangeSearchTitle = e => {\n// //     const searchName = e.target.value;\n// //     setSearchName(searchName);\n// //   };\n// //   const refreshData = () => {\n// //     setCurrentTutorial(null);\n// //     setCurrentIndex(-1);\n// //   };\n// //   const setActiveTutorial = (tutorial, index) => {\n// //     setCurrentTutorial(tutorial);\n// //     setCurrentIndex(index);\n// //   };\n// //   const removeAllTutorials = () => {\n// //     dispatch(deleteAllTutorials())\n// //       .then(response => {\n// //         console.log(response);\n// //         refreshData();\n// //       })\n// //       .catch(e => {\n// //         console.log(e);\n// //       });\n// //   };\n// //   const findByName = () => {\n// //     refreshData();\n// //     dispatch(findTutorialsByName(searchName));\n// //   };\n// //   return (\n// //     <div className=\"list row\">\n// //     <div className=\"col-md-8\">\n// //       <div className=\"input-group mb-3\">\n// //         <input\n// //           type=\"text\"\n// //           className=\"form-control\"\n// //           placeholder=\"Search by title\"\n// //           value={searchName}\n// //           onChange={onChangeSearchTitle}\n// //         />\n// //         <div className=\"input-group-append\">\n// //           <button\n// //             className=\"btn btn-outline-secondary\"\n// //             type=\"button\"\n// //             onClick={findByName}\n// //           >\n// //             Search\n// //           </button>\n// //         </div>\n// //       </div>\n// //     </div>\n// //     <div className=\"col-md-6\">\n// //       <h4>Tutorials List</h4>\n// //       <ul className=\"list-group\">\n// //         {tutorials &&\n// //           tutorials.map((tutorial, index) => (\n// //             <li\n// //               className={\n// //                 \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n// //               }\n// //               onClick={() => setActiveTutorial(tutorial, index)}\n// //               key={index}\n// //             >\n// //               {tutorial.name}\n// //             </li>\n// //           ))}\n// //       </ul>\n// //       <button\n// //         className=\"m-3 btn btn-sm btn-danger\"\n// //         onClick={removeAllTutorials}\n// //       >\n// //         Remove All\n// //       </button>\n// //     </div>\n// //     <div className=\"col-md-6\">\n// //       {currentTutorial ? (\n// //         <div>\n// //           <h4>Tutorial</h4>\n// //           <div>\n// //             <label>\n// //               <strong>Name:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.name}\n// //           </div>\n// //           <div>\n// //             <label>\n// //               <strong>Email:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.email}\n// //           </div>\n// //           <div>\n// //             <label>\n// //               <strong>Status:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.published ? \"Published\" : \"Pending\"}\n// //           </div>\n// //           <Link\n// //             to={\"/users/\" + currentTutorial.id}\n// //             className=\"badge badge-warning\"\n// //           >\n// //             Edit\n// //           </Link>\n// //         </div>\n// //       ) : (\n// //         <div>\n// //           <br />\n// //           <p>Please click on a Tutorial...</p>\n// //         </div>\n// //       )}\n// //     </div>\n// //   </div>\n\n// //   );\n// // };\n// // export default TutorialsList;\n\n// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { createTutorial } from \"../actions/tutorials\";\n// const AddTutorial = () => {\n//   const initialTutorialState = {\n//     id: null,\n//     name: \"\",\n//     email: \"\",\n// \tpassword:\"\",\n// \trole:\"\",\n//     published: false\n//   };\n//   const [tutorial, setTutorial] = useState(initialTutorialState);\n//   const [submitted, setSubmitted] = useState(false);\n//   const dispatch = useDispatch();\n//   const handleInputChange = event => {\n//     const { name, value } = event.target;\n//     setTutorial({ ...tutorial, [name]: value });\n//   };\n//   const saveTutorial = () => {\n//     const { name, email, password, role } = tutorial;\n//     dispatch(createTutorial(name, email, password, role))\n//       .then(data => {\n//         setTutorial({\n//           id: data.id,\n//           name: data.name,\n//           email: data.email,\n// \t\t  password: data.password,\n// \t\t  role: data.role,\n//           published: data.published\n//         });\n//         setSubmitted(true);\n//         console.log(data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\n//   const newTutorial = () => {\n//     setTutorial(initialTutorialState);\n//     setSubmitted(false);\n//   };\n//   return (\n//     <div className=\"submit-form\">\n//     {submitted ? (\n//       <div>\n//         <h4>You submitted successfully!</h4>\n//         <button className=\"btn btn-success\" onClick={newTutorial}>\n//           Add\n//         </button>\n//       </div>\n//     ) : (\n//       <div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"name\">Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"name\"\n//             required\n//             value={tutorial.name}\n//             onChange={handleInputChange}\n//             name=\"name\"\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\">Email</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"email\"\n//             required\n//             value={tutorial.email}\n//             onChange={handleInputChange}\n//             name=\"email\"\n//           />\n//         </div>\n// \t\t<div className=\"form-group\">\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             className=\"form-control\"\n//             id=\"password\"\n//             required\n//             value={tutorial.password}\n//             onChange={handleInputChange}\n//             name=\"password\"\n//           />\n//         </div>\n// \t\t<div className=\"form-group\">\n//           <label htmlFor=\"role\">Role</label>\n//           <input\n//             type=\"role\"\n//             className=\"form-control\"\n//             id=\"role\"\n//             required\n//             value={tutorial.role}\n//             onChange={handleInputChange}\n//             name=\"role\"\n//           />\n//         </div>\n//         <button onClick={saveTutorial} className=\"btn btn-success\">\n//           Submit\n//         </button>\n//       </div>\n//     )}\n//   </div>\n// );\n// };\n  \n\n// // export default AddTutorial;\n// import React from 'react'\n// import AddUserForm from './AddUserForm'\n\n// function Dashboard() {\n// \treturn (\n// \t\t<div>\n// \t\t\t<AddUserForm/>\n// \t\t</div>\n// \t)\n// }\n\n// export default Dashboard\n\n\n// import React, { useState } from 'react'\n// import {useDispatch} from 'react-redux'\n// import { addNewUser  } from '../actions/authActions';\n// import PropTypes from \"prop-types\";\n\n// function AddUserForm(users) {\n//     const dispatch = useDispatch();\n//     const [newUserName, setNewUserName] = useState('');\n// \tconst [newUserEmail, setNewUserEmail] = useState('');\n// \t// const [newUserPassword, setNewUserPassword] = useState('');\n// \tconst [newUserRole, setNewUserRole] = useState('');\n//    const handleSubmit = (e) =>{\n//     e.preventDefault();\n\n//     const usersList = users;\n//     //  const newUserId = usersList[usersList.length - 1].id + 1;\n    \n//     console.log(\"your name\", usersList);\n// \t// console.log(\"\", usersList);\n//     // console.log(\"your id\", newUserId)\n\n//     dispatch(addNewUser({\n    \n//       name: newUserName,\n// \t  email: newUserEmail,\n// \t  // password: newUserPassword,\n// \t  role: newUserRole\n//     }));\n \n//    }\n\n//   const handleCancel = () => {};\n//   return (\n//     <tr>\n//       {/* <td>{newUserName.id}</td> */}\n//       <td>\n//         <input\n//           value={newUserName}\n//           name=\"name\"\n//           onChange={e => setNewUserName(e.target.value)}\n//         />\n//       </td>\n// \t  <td>\n//         <input\n//           value={newUserEmail}\n//           name=\"email\"\n//           onChange={e => setNewUserEmail(e.target.value)}\n//         />\n//       </td>\n// \t  {/* <td>\n//         <input\n//           value={newUserPassword}\n//           name=\"password\"\n//           onChange={e => setNewUserPassword(e.target.value)}\n//         />\n//       </td> */}\n// \t  <td>\n//         <input\n//           value={newUserRole}\n//           name=\"role\"\n//           onChange={e => setNewUserRole(e.target.value)}\n//         />\n//       </td>\n//       <td>\n//         <button type=\"button\" className=\"btn outline\" onClick={handleCancel}>\n//           <i className=\"material-icons\">Cancel</i>\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-success btn-link\"\n//           onClick={handleSubmit}\n//         >\n//           <i className=\"material-icons\">save</i>\n//         </button>\n//       </td>\n//     </tr>\n//   );\n// }\n// AddUserForm.prototype = {\n// users: PropTypes.func.isRequired,\n// }\n// export default AddUserForm\n\n"]},"metadata":{},"sourceType":"module"}