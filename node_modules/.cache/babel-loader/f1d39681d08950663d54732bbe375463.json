{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Read = () => {\n  _s();\n\n  const selector = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selector.map((key, value) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: selector[value].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 43\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Read, \"agytgViX0Myi+MHshvgW7nSJ69E=\", false, function () {\n  return [useSelector];\n});\n\n_c = Read;\nexport default Read; // import * as React from 'react';\n// import { connect } from 'react-redux';\n// import { getUser } from \"../actions/authActions\";\n//  import PropTypes from \"prop-types\";\n// class Read extends React.Component {\n//    componentDidMount() {\n//        this.props.getUser();\n//    };\n//    render() {\n//       const {user} = this.state;\n//       console.log(user)\n//        if (this.props.error) {\n//            return <div style={{ color: 'red' }}>ERROR: {this.props.error}</div>\n//        }\n//        return (\n//            <table>\n//                <thead>\n//                    <tr>\n//                        <th>Name</th>\n//                        <th>Email</th>\n//                        <th>Role</th>\n//                    </tr>\n//                </thead>\n//                <tbody>\n//                {this.props.user.map(u =>\n//                    <tr key={u.id}>\n//                        <td>{u.name}</td>\n//                        <td>{u.email}</td>\n//                        <td>{u.role}</td>\n//                    </tr>\n//                )}\n//                </tbody>\n//            </table>\n//        );\n//    }\n// }\n// Read.propTypes = {\n// \tgetUser: PropTypes.func.isRequired,\n// \tloading: PropTypes.bool,\n//     error: PropTypes.bool,\n//     user: PropTypes.bool,\n// };\n// const mapStateToProps = state => ({\n//    user: state.user,\n//    loading: state.loading,\n//    error: state.error,\n// });\n// const mapDispatchToProps = {\n//     getUser\n// };\n// export default connect(\n//    mapStateToProps,\n//    mapDispatchToProps\n// )(Read);\n// import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { getUser } from \"../actions/authActions\";\n// import PropTypes from \"prop-types\";\n// class Read extends React.Component {\n//   componentDidMount() {\n//     this.props.getUser()\n//   }\n//   render() {\n//     const { user } = this.props;\n//     console.log(user)\n//     return (\n//       <ul>\n//         {user.map(user =>\n//           <li key={user.id}>{user.name}</li>\n//         )}\n//       </ul>\n//     );\n//   }\n// }\n// Read.propTypes = {\n// \tgetUser: PropTypes.object.isRequired,\n// \tuser: PropTypes.bool,\n// };\n// const mapStateToProps = ({\n//     token, errors\n//   }) => ({\n//     token,\n//     errors\n//   });\n// const mapDispatchToProps = dispatch => ({   \n//     getUser: dispatch(getUser())\n//   })\n// export default connect(mapStateToProps, mapDispatchToProps)(Read);\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx"],"names":["React","useSelector","Read","selector","state","user","map","key","value","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,QAAQ,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA5B;AAEA,sBACI;AAAA,cACKF,QAAQ,CAACG,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,kBAAgB;AAAA,6BAC1B;AAAA,kBAAKL,QAAQ,CAACK,KAAD,CAAR,CAAgBC;AAArB;AAAA;AAAA;AAAA;AAAA;AAD0B;AAAA;AAAA;AAAA;AAAA,YAA7B;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAXD;;GAAMP,I;UACeD,W;;;KADfC,I;AAaN,eAAeA,IAAf,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst Read = () => {\n    const selector = useSelector(state => state.user);\n\n    return (\n        <div>\n            {selector.map((key, value) => <ul>\n                <li>{selector[value].name}</li>\n            </ul>\n            )}\n        </div>\n    );\n};\n\nexport default Read;\n\n\n// import * as React from 'react';\n// import { connect } from 'react-redux';\n\n// import { getUser } from \"../actions/authActions\";\n//  import PropTypes from \"prop-types\";\n// class Read extends React.Component {\n//    componentDidMount() {\n//        this.props.getUser();\n//    };\n    \n//    render() {\n//       const {user} = this.state;\n//       console.log(user)\n       \n//        if (this.props.error) {\n//            return <div style={{ color: 'red' }}>ERROR: {this.props.error}</div>\n//        }\n    \n//        return (\n//            <table>\n//                <thead>\n//                    <tr>\n//                        <th>Name</th>\n//                        <th>Email</th>\n//                        <th>Role</th>\n//                    </tr>\n//                </thead>\n//                <tbody>\n//                {this.props.user.map(u =>\n//                    <tr key={u.id}>\n//                        <td>{u.name}</td>\n//                        <td>{u.email}</td>\n//                        <td>{u.role}</td>\n//                    </tr>\n//                )}\n//                </tbody>\n//            </table>\n//        );\n//    }\n// }\n// Read.propTypes = {\n// \tgetUser: PropTypes.func.isRequired,\n// \tloading: PropTypes.bool,\n//     error: PropTypes.bool,\n//     user: PropTypes.bool,\n// };\n// const mapStateToProps = state => ({\n//    user: state.user,\n//    loading: state.loading,\n//    error: state.error,\n   \n// });\n\n// const mapDispatchToProps = {\n//     getUser\n// };\n\n// export default connect(\n//    mapStateToProps,\n//    mapDispatchToProps\n// )(Read);\n\n// import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { getUser } from \"../actions/authActions\";\n// import PropTypes from \"prop-types\";\n// class Read extends React.Component {\n//   componentDidMount() {\n//     this.props.getUser()\n//   }\n\n//   render() {\n//     const { user } = this.props;\n//     console.log(user)\n\n//     return (\n//       <ul>\n//         {user.map(user =>\n//           <li key={user.id}>{user.name}</li>\n//         )}\n//       </ul>\n//     );\n//   }\n// }\n// Read.propTypes = {\n// \tgetUser: PropTypes.object.isRequired,\n// \tuser: PropTypes.bool,\n// };\n// const mapStateToProps = ({\n//     token, errors\n//   }) => ({\n//     token,\n//     errors\n//   });\n// const mapDispatchToProps = dispatch => ({   \n//     getUser: dispatch(getUser())\n//   })\n// export default connect(mapStateToProps, mapDispatchToProps)(Read);"]},"metadata":{},"sourceType":"module"}