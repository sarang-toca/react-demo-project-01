{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/auth/Login.js\",\n    _s = $RefreshSig$();\n\n// // import React, { useState } from \"react\";\n// // import { Link, Redirect } from \"react-router-dom\";\n// // import { connect } from \"react-redux\";\n// // import PropTypes from \"prop-types\";\n// // import { login } from \"../../actions/auth\";\n// // import Alert from \"../layout/Alert\";\n// // const Login = ({ login, isAuthenticated }) => {\n// // \tconst [error, setError] = useState(null);\n// // \tconst [formData, setFormData] = useState({\n// // \t\temail: \"\",\n// // \t\tpassword: \"\",\n// // \t});\n// // \tconst validateEmail = (email) => {\n// // \t\tconst re =\n// // \t\t  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n// // \t\treturn re.test(String(email).toLowerCase());\n// // \t  };\n// // \tconst { email, password } = formData;\n// // \tconst onChange = (e) =>\n// // \t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n// // \tconst onSubmit = async (e) => {\n// // \t\te.preventDefault();\n// // \t\tif (!validateEmail(formData.email)) {\n// // \t\t\tsetError('Invalid Email');\n// // \t\t  }\n// // \t\t  if (formData.password.length < 8) {\n// // \t\t\tsetError('Password must be at least 8 chars long');\n// // \t\t  }\n// // \t\t  if (!error) {\n// // \t\t\t// No errors.\n// // \t\t  }\n// // \t\tlogin(email, password);\n// // \t};\n// // \t// Redirect if logged in\n// // \tif (isAuthenticated) {\n// // \t\treturn <Redirect to=\"/dashboard\" />;\n// // \t}\n// // \treturn (\n// // \t\t<div className=\"login-form\">\n// // \t\t\t<h1 className=\"heading\">Sign In</h1>\n// // \t\t\t<p className=\"lead\">\n// // \t\t\t\t<i className=\"fas fa-user\"></i> Sign Into Your Account\n// // \t\t\t</p>\n// // \t\t\t<Alert />\n// // \t\t\t<br />\n// // \t\t\t{error && <div style={{ color: 'red' }}>{error}</div>}\n// // \t\t\t<form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n// // \t\t\t\t<div className=\"form-group\">\n// // \t\t\t\t\t<input\n// // \t\t\t\t\t\ttype=\"email\"\n// // \t\t\t\t\t\tplaceholder=\"Email Address\"\n// // \t\t\t\t\t\tname=\"email\"\n// // \t\t\t\t\t\tvalue={email}\n// // \t\t\t\t\t\tonChange={(e) => onChange(e)}\n// // \t\t\t\t\t/>\n// // \t\t\t\t</div>\n// // \t\t\t\t<div className=\"form-group\">\n// // \t\t\t\t\t<input\n// // \t\t\t\t\t\ttype=\"password\"\n// // \t\t\t\t\t\tplaceholder=\"Password\"\n// // \t\t\t\t\t\tname=\"password\"\n// // \t\t\t\t\t\tminLength=\"6\"\n// // \t\t\t\t\t\tvalue={password}\n// // \t\t\t\t\t\tonChange={(e) => onChange(e)}\n// // \t\t\t\t\t/>\n// // \t\t\t\t</div>\n// // \t\t\t\t<input type=\"submit\" className=\"btn\" value=\"Login\" />\n// // \t\t\t</form>\n// // \t\t\t<p className=\"link\">\n// // \t\t\t\tDont have an account? <Link to=\"/register\">Sign Up</Link>\n// // \t\t\t</p>\n// // \t\t</div>\n// // \t);\n// // };\n// // Login.propTypes = {\n// // \tlogin: PropTypes.func.isRequired,\n// // \tisAuthenticated: PropTypes.bool,\n// // };\n// // const mapStateToProps = (state) => ({\n// // \tisAuthenticated: state.auth.isAuthenticated,\n// // });\n// // export default connect(mapStateToProps, { login })(Login);\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import { login } from '../../actions/auth';\n// import { withRouter } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// class Login extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       email: '',\n//       password: '',\n//     };\n//     this.onSubmit = this.onSubmit.bind(this);\n//     this.onChange = this.onChange.bind(this);\n//   }\n//   onSubmit(e) {\n//     e.preventDefault();\n//       this.props.login(this.state).then(\n//         // make sure we use arrow functions to bind `this` correctly\n//         (res) => this.props.history.push('/dashboard'),\n//         // (err) => {\n//         //   debugger\n//         // });\n// \t\t);\n//   }\n//   onChange(e) {\n//     this.setState({ [e.target.name]: e.target.value });\n//   }\n//   render() {\n//     const { email, password } = this.state;\n//     return (\n//       <div className=\"row\">\n//         <div className=\"col-md-4 col-md-offset-4\">\n//       <form onSubmit={this.onSubmit}>\n//         <h1>Login</h1>\n//         <div className=\"form-group\">\n//             <label htmlFor=\"email\">Email</label>\n//             <input type=\"text\" id=\"email\" name=\"email\" value={email} onChange={this.onChange}/>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"password\">password</label>\n//             <input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={this.onChange}/>\n//           </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n//       </form>\n//       </div>\n//       </div>\n//     );\n//   }\n// }\n// // let's add some propTypes for additional validation and readability\n// Login.propTypes = {\n//   login: PropTypes.func.isRequired,\n//   history: PropTypes.object.isRequired,\n// }\n// // we do not want any state mapped to props, so let's make that first parameter to connect `null`\n// export default withRouter(connect(null, { login })(Login));\n// import React, { Component } from 'react';\n// import {\tLink } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// // import { userActions } from '../../actions';\n// import { signIn } from \"../../actions/authActions\";\n// import PropTypes from \"prop-types\";\n// class Login extends Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.props.logout();\n// \t\tthis.state = {\n// \t\t\temail: '',\n// \t\t\tpassword: '',\n// \t\t\tsubmitted: false\n// \t\t};\n// \t\tthis.handleInputChange = this.handleInputChange.bind(this);\n// \t\tthis.submitLogin = this.submitLogin.bind(this);\n// \t}\n// \thandleInputChange(e) {\n// \t  const name = e.target.name;\n// \t\tconst value = e.target.value;\n// \t\tthis.setState({\n// \t\t\t[name]: value\n// \t\t});\n// \t}\n// \tsubmitLogin(e) {\n// \t\te.preventDefault();\n// \t\tthis.setState({ submitted: true });\n// \t\tconst { email, password } = this.state;\n// \t\tif (email && password) {\n// \t\t\tthis.props.login(email, password);\n// \t\t}\n// \t}\n// \trender(){\n// \t\t//  const { loggingIn } = this.props;\n// \t\tconst { email, password, submitted } = this.state;\n// \t\treturn(\n// \t\t\t<div className=\"col-md-4 col-md-offset-4\">\n// \t\t \t\t<h2 className=\"text-center\">User Login</h2>\n// \t\t\t\t \t<form name=\"form\">\n// \t\t\t\t\t\t<div className={'form-group' + (submitted && !email ? ' has-error' : '')}>\n// \t\t\t\t\t\t\t<label htmlFor=\"email\">Email:</label>\n// \t\t\t\t\t\t\t<input type=\"text\" id=\"email\" className=\"form-control input-shadow\" placeholder=\"Enter Email\" value={this.state.email} onChange={this.handleInputChange} name=\"email\"/>\n// \t\t\t\t\t\t\t{submitted && !email && <div className=\"help-block\">Email is required</div> }\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className={'form-group' + (submitted && !password ? ' has-error' : '')}>                    \n// \t\t\t\t\t\t\t<label>Password: </label>\n// \t\t\t\t\t\t\t<input type=\"password\" id=\"exampleInputPassword\" className=\"form-control input-shadow\" placeholder=\"Enter Password\" value={this.state.password}\tonChange={this.handleInputChange}\tname=\"password\"/>\n// \t\t\t\t\t\t\t{submitted && !email && <div className=\"help-block\">Password is required</div> }\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<button type=\"button\" onClick={this.submitLogin} className=\"btn btn-primary btn-block\">Sign In</button>\n// \t\t\t\t\t\t<Link to=\"/register\" className=\"btn btn-link\">Register</Link>\n// \t\t\t\t\t</form>\n// \t\t\t </div>\n// \t\t)\n// \t}\n// }\n// function mapState(state) {\n// \tconst { loggingIn } = state.authentication;\n// \treturn { loggingIn };\n// }\n// const actionCreators = {\n// \tlogin: signIn.login,\n// \tlogout: signIn.logout\n// };\n// Login.propTypes = {\n// \tlogout: PropTypes.object.isRequired,\n// \tlogin: PropTypes.object.isRequired,\n// \t//  \tisAuthenticated: PropTypes.bool.isRequired,\n// \t//  location: PropTypes.object.isRequired\n// \t };\n// const connectedLoginPage = connect(mapState, actionCreators)(Login);\n// export { connectedLoginPage as Login };\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, connect } from \"react-redux\";\nimport PropTypes from \"prop-types\"; // import { login } from \"../../actions/auth\";\n\nimport { signIn } from \"../../actions/authActions\"; // import Alert from \"../layout/Alert\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    signIn,\n    isLoggedIn\n  } = _ref;\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = formData; //  const dispatch = useDispatch();\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    dispatch(signIn(formData));\n    signIn(email, password);\n  }; // Redirect if logged in\n\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 5\n      }, this), \" Sign Into Your Account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: email,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          minLength: \"6\",\n          value: password,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"link\",\n      children: [\"Dont have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"Uw92o9omEQ+M8Y1WwAsZxnpgv88=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nLogin.propTypes = {\n  signIn: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.auth.isLoggedIn\n});\n\nexport default connect(mapStateToProps, {\n  signIn\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/auth/Login.js"],"names":["React","useState","Link","Redirect","useDispatch","connect","PropTypes","signIn","Login","isLoggedIn","dispatch","formData","setFormData","email","password","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAAUC,WAAV,EAAuBC,OAAvB,QAAsC,aAAtC;AACA,OAAOC,SAAP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","sourcesContent":["// // import React, { useState } from \"react\";\n// // import { Link, Redirect } from \"react-router-dom\";\n// // import { connect } from \"react-redux\";\n// // import PropTypes from \"prop-types\";\n// // import { login } from \"../../actions/auth\";\n// // import Alert from \"../layout/Alert\";\n\n// // const Login = ({ login, isAuthenticated }) => {\n// // \tconst [error, setError] = useState(null);\n// // \tconst [formData, setFormData] = useState({\n\t\t\n// // \t\temail: \"\",\n// // \t\tpassword: \"\",\n// // \t});\n\n// // \tconst validateEmail = (email) => {\n// // \t\tconst re =\n// // \t\t  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n// // \t\treturn re.test(String(email).toLowerCase());\n// // \t  };\n\n// // \tconst { email, password } = formData;\n\n// // \tconst onChange = (e) =>\n// // \t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\n// // \tconst onSubmit = async (e) => {\n// // \t\te.preventDefault();\n// // \t\tif (!validateEmail(formData.email)) {\n// // \t\t\tsetError('Invalid Email');\n// // \t\t  }\n\t  \n// // \t\t  if (formData.password.length < 8) {\n// // \t\t\tsetError('Password must be at least 8 chars long');\n// // \t\t  }\n\t  \n// // \t\t  if (!error) {\n// // \t\t\t// No errors.\n// // \t\t  }\n// // \t\tlogin(email, password);\n// // \t};\n\n// // \t// Redirect if logged in\n// // \tif (isAuthenticated) {\n// // \t\treturn <Redirect to=\"/dashboard\" />;\n// // \t}\n\n// // \treturn (\n// // \t\t<div className=\"login-form\">\n// // \t\t\t<h1 className=\"heading\">Sign In</h1>\n// // \t\t\t<p className=\"lead\">\n// // \t\t\t\t<i className=\"fas fa-user\"></i> Sign Into Your Account\n// // \t\t\t</p>\n// // \t\t\t<Alert />\n// // \t\t\t<br />\n// // \t\t\t{error && <div style={{ color: 'red' }}>{error}</div>}\n// // \t\t\t<form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n// // \t\t\t\t<div className=\"form-group\">\n// // \t\t\t\t\t<input\n// // \t\t\t\t\t\ttype=\"email\"\n// // \t\t\t\t\t\tplaceholder=\"Email Address\"\n// // \t\t\t\t\t\tname=\"email\"\n// // \t\t\t\t\t\tvalue={email}\n// // \t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\n// // \t\t\t\t\t/>\n// // \t\t\t\t</div>\n// // \t\t\t\t<div className=\"form-group\">\n// // \t\t\t\t\t<input\n// // \t\t\t\t\t\ttype=\"password\"\n// // \t\t\t\t\t\tplaceholder=\"Password\"\n// // \t\t\t\t\t\tname=\"password\"\n// // \t\t\t\t\t\tminLength=\"6\"\n// // \t\t\t\t\t\tvalue={password}\n// // \t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\n// // \t\t\t\t\t/>\n// // \t\t\t\t</div>\n// // \t\t\t\t<input type=\"submit\" className=\"btn\" value=\"Login\" />\n// // \t\t\t</form>\n// // \t\t\t<p className=\"link\">\n// // \t\t\t\tDont have an account? <Link to=\"/register\">Sign Up</Link>\n// // \t\t\t</p>\n// // \t\t</div>\n// // \t);\n// // };\n\n// // Login.propTypes = {\n// // \tlogin: PropTypes.func.isRequired,\n// // \tisAuthenticated: PropTypes.bool,\n// // };\n\n// // const mapStateToProps = (state) => ({\n// // \tisAuthenticated: state.auth.isAuthenticated,\n// // });\n\n// // export default connect(mapStateToProps, { login })(Login);\n\n\n\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import { login } from '../../actions/auth';\n// import { withRouter } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n\n// class Login extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       email: '',\n//       password: '',\n//     };\n\n//     this.onSubmit = this.onSubmit.bind(this);\n//     this.onChange = this.onChange.bind(this);\n//   }\n\n\n//   onSubmit(e) {\n//     e.preventDefault();\n//       this.props.login(this.state).then(\n//         // make sure we use arrow functions to bind `this` correctly\n//         (res) => this.props.history.push('/dashboard'),\n//         // (err) => {\n//         //   debugger\n//         // });\n// \t\t);\n//   }\n\n//   onChange(e) {\n//     this.setState({ [e.target.name]: e.target.value });\n//   }\n\n//   render() {\n//     const { email, password } = this.state;\n\n//     return (\n//       <div className=\"row\">\n//         <div className=\"col-md-4 col-md-offset-4\">\n//       <form onSubmit={this.onSubmit}>\n//         <h1>Login</h1>\n//         <div className=\"form-group\">\n//             <label htmlFor=\"email\">Email</label>\n//             <input type=\"text\" id=\"email\" name=\"email\" value={email} onChange={this.onChange}/>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"password\">password</label>\n//             <input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={this.onChange}/>\n//           </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n//       </form>\n//       </div>\n//       </div>\n//     );\n//   }\n// }\n// // let's add some propTypes for additional validation and readability\n// Login.propTypes = {\n//   login: PropTypes.func.isRequired,\n//   history: PropTypes.object.isRequired,\n// }\n\n// // we do not want any state mapped to props, so let's make that first parameter to connect `null`\n// export default withRouter(connect(null, { login })(Login));\n\n\n\n// import React, { Component } from 'react';\n// import {\tLink } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// // import { userActions } from '../../actions';\n// import { signIn } from \"../../actions/authActions\";\n// import PropTypes from \"prop-types\";\n// class Login extends Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.props.logout();\n// \t\tthis.state = {\n// \t\t\temail: '',\n// \t\t\tpassword: '',\n// \t\t\tsubmitted: false\n// \t\t};\n// \t\tthis.handleInputChange = this.handleInputChange.bind(this);\n// \t\tthis.submitLogin = this.submitLogin.bind(this);\n\t\t\n// \t}\n\n// \thandleInputChange(e) {\n// \t  const name = e.target.name;\n// \t\tconst value = e.target.value;\n// \t\tthis.setState({\n// \t\t\t[name]: value\n// \t\t});\n// \t}\n\n// \tsubmitLogin(e) {\n// \t\te.preventDefault();\n// \t\tthis.setState({ submitted: true });\n// \t\tconst { email, password } = this.state;\n// \t\tif (email && password) {\n// \t\t\tthis.props.login(email, password);\n// \t\t}\n// \t}\n\n// \trender(){\n// \t\t//  const { loggingIn } = this.props;\n// \t\tconst { email, password, submitted } = this.state;\n// \t\treturn(\n// \t\t\t<div className=\"col-md-4 col-md-offset-4\">\n// \t\t \t\t<h2 className=\"text-center\">User Login</h2>\n// \t\t\t\t \t<form name=\"form\">\n// \t\t\t\t\t\t<div className={'form-group' + (submitted && !email ? ' has-error' : '')}>\n// \t\t\t\t\t\t\t<label htmlFor=\"email\">Email:</label>\n// \t\t\t\t\t\t\t<input type=\"text\" id=\"email\" className=\"form-control input-shadow\" placeholder=\"Enter Email\" value={this.state.email} onChange={this.handleInputChange} name=\"email\"/>\n// \t\t\t\t\t\t\t{submitted && !email && <div className=\"help-block\">Email is required</div> }\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className={'form-group' + (submitted && !password ? ' has-error' : '')}>                    \n// \t\t\t\t\t\t\t<label>Password: </label>\n// \t\t\t\t\t\t\t<input type=\"password\" id=\"exampleInputPassword\" className=\"form-control input-shadow\" placeholder=\"Enter Password\" value={this.state.password}\tonChange={this.handleInputChange}\tname=\"password\"/>\n// \t\t\t\t\t\t\t{submitted && !email && <div className=\"help-block\">Password is required</div> }\n// \t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n// \t\t\t\t\t\t<button type=\"button\" onClick={this.submitLogin} className=\"btn btn-primary btn-block\">Sign In</button>\n// \t\t\t\t\t\t<Link to=\"/register\" className=\"btn btn-link\">Register</Link>\n// \t\t\t\t\t</form>\n// \t\t\t </div>\n\t\t\n// \t\t)\n// \t}\n// }\n// function mapState(state) {\n// \tconst { loggingIn } = state.authentication;\n// \treturn { loggingIn };\n// }\n\n// const actionCreators = {\n// \tlogin: signIn.login,\n// \tlogout: signIn.logout\n// };\n\n// Login.propTypes = {\n// \tlogout: PropTypes.object.isRequired,\n// \tlogin: PropTypes.object.isRequired,\n\t\n// \t//  \tisAuthenticated: PropTypes.bool.isRequired,\n// \t//  location: PropTypes.object.isRequired\n// \t };\n// const connectedLoginPage = connect(mapState, actionCreators)(Login);\n// export { connectedLoginPage as Login };\n\n\nimport React, {  useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport {  useDispatch, connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n// import { login } from \"../../actions/auth\";\nimport { signIn } from \"../../actions/authActions\";\n// import Alert from \"../layout/Alert\";\n\nconst Login = ({ signIn, isLoggedIn }) => {\n\tconst dispatch = useDispatch();\n\tconst [formData, setFormData] = useState({\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\n\tconst { email, password } = formData;\n\t//  const dispatch = useDispatch();\n\n\tconst onChange = (e) =>\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\n\tconst onSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tdispatch(signIn(formData));\n\t\tsignIn(email, password);\n\t};\n\n\t// Redirect if logged in\n\tif (isLoggedIn) {\n\t\treturn <Redirect to=\"/dashboard\" />;\n\t}\n\n\treturn (\n\t\t<div className=\"login-form\">\n\t\t\t<h1 className=\"heading\">Sign In</h1>\n\t\t\t<p className=\"lead\">\n\t\t\t\t<i className=\"fas fa-user\"></i> Sign Into Your Account\n\t\t\t</p>\n\t\t\t{/* <Alert /> */}\n\t\t\t<br />\n\t\t\t<form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tplaceholder=\"Email Address\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tminLength=\"6\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<input type=\"submit\" className=\"btn\" value=\"Login\" />\n\t\t\t</form>\n\t\t\t<p className=\"link\">\n\t\t\t\tDont have an account? <Link to=\"/register\">Sign Up</Link>\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nLogin.propTypes = {\n\tsignIn: PropTypes.func.isRequired,\n\tisLoggedIn: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n\tisLoggedIn: state.auth.isLoggedIn,\n});\n\nexport default connect(mapStateToProps, { signIn })(Login);"]},"metadata":{},"sourceType":"module"}