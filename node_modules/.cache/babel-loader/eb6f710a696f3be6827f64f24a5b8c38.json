{"ast":null,"code":"import { CREATE_USER_REQUEST, CREATE_USER_SUCCESS, CREATE_USER_FAILURE, GET_USERS_REQUEST, GET_USERS_SUCCESS, GET_USERS_FAILURE, GET_USER_BYID_REQUEST, GET_USER_BYID_SUCCESS, GET_USER_BYID_FAILURE, DELETE_USER_BYID_REQUEST, DELETE_USER_BYID_SUCCESS, DELETE_USER_BYID_FAILURE } from \"../actions/usersActiontypes\";\nimport api from \"../services/api\";\nexport const GethUsers = () => {\n  return dispatch => {\n    dispatch(getUsersRequest());\n    api.get('/v1/users').then(response => {\n      const users = response.data;\n      console.log(response.data);\n      dispatch(getUsersSuccess(users));\n    }).catch(error => {\n      dispatch(getUsersFailure(error.message));\n    });\n  };\n};\n_c = GethUsers;\nexport const getUsersRequest = () => {\n  return {\n    type: GET_USERS_REQUEST\n  };\n};\nexport const getUsersSuccess = users => {\n  return {\n    type: GET_USERS_SUCCESS,\n    payload: users\n  };\n};\nexport const getUsersFailure = error => {\n  return {\n    type: GET_USERS_FAILURE,\n    payload: error\n  };\n};\nexport function createUser(data, history) {\n  return dispatch => {\n    dispatch({\n      type: CREATE_USER_REQUEST\n    });\n    api.post('/v1/users', data).then(function (res) {\n      console.log(\"res=>\", res.data);\n      localStorage.setItem(\"token\", res.data.tokens.access.token);\n      setTimeout(() => {\n        dispatch({\n          type: CREATE_USER_SUCCESS,\n          payload: res.data\n        });\n        history.push(\"/\");\n      }, 1000);\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        var _response$data;\n\n        dispatch({\n          type: CREATE_USER_FAILURE,\n          payload: response.data\n        });\n        alert((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message);\n      }\n    });\n  };\n}\nexport function getUserById(id) {\n  return dispatch => {\n    dispatch({\n      type: GET_USER_BYID_REQUEST\n    });\n    api.get(`/v1/users/${id}`).then(function (res) {\n      console.log(\"res =>\", res.data);\n      dispatch({\n        type: GET_USER_BYID_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        dispatch({\n          type: GET_USER_BYID_FAILURE,\n          payload: response.data\n        });\n      }\n    });\n  };\n} // export function updateUserById(id, data, history) {\n//   return (dispatch) => {\n//     dispatch({ type: UPDATE_USER_BYID_REQUEST });\n//     axios\n//       .put(`${api_url}/api/user/${id}`, data)\n//       .then(function (res) {\n//         console.log(\"res=>\", res.data);\n//         setTimeout(() => {\n//           dispatch({\n//             type: UPDATE_USER_BYID_SUCCESS,\n//             payload: res.data,\n//           });\n//           history.push(\"/\");\n//         }, 1000);\n//       })\n//       .catch(function (error) {\n//         const { response } = error;\n//         console.log(\"err\", response);\n//         if (response !== undefined) {\n//           dispatch({\n//             type: UPDATE_USER_BYID_FAILURE,\n//             payload: response.data,\n//           });\n//           alert(response.data?.message);\n//         }\n//       });\n//   };\n// }\n\nexport function deleteUserById(id) {\n  return dispatch => {\n    dispatch({\n      type: DELETE_USER_BYID_REQUEST\n    });\n    api.delete(`/v1/users/${id}`).then(function (res) {\n      console.log(\"res =>\", res.data);\n      dispatch({\n        type: DELETE_USER_BYID_SUCCESS,\n        payload: id\n      });\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        var _response$data2;\n\n        dispatch({\n          type: DELETE_USER_BYID_FAILURE,\n          payload: response.data\n        });\n        alert((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.message);\n      }\n    });\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"GethUsers\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/user.js"],"names":["CREATE_USER_REQUEST","CREATE_USER_SUCCESS","CREATE_USER_FAILURE","GET_USERS_REQUEST","GET_USERS_SUCCESS","GET_USERS_FAILURE","GET_USER_BYID_REQUEST","GET_USER_BYID_SUCCESS","GET_USER_BYID_FAILURE","DELETE_USER_BYID_REQUEST","DELETE_USER_BYID_SUCCESS","DELETE_USER_BYID_FAILURE","api","GethUsers","dispatch","getUsersRequest","get","then","response","users","data","console","log","getUsersSuccess","catch","error","getUsersFailure","message","type","payload","createUser","history","post","res","localStorage","setItem","tokens","access","token","setTimeout","push","undefined","alert","getUserById","id","deleteUserById","delete"],"mappings":"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","sourcesContent":["import {\n  CREATE_USER_REQUEST,\n  CREATE_USER_SUCCESS,\n  CREATE_USER_FAILURE,\n  GET_USERS_REQUEST,  \n  GET_USERS_SUCCESS,  \n  GET_USERS_FAILURE,  \n  GET_USER_BYID_REQUEST,\n  GET_USER_BYID_SUCCESS,\n  GET_USER_BYID_FAILURE,\n  DELETE_USER_BYID_REQUEST,\n  DELETE_USER_BYID_SUCCESS,\n  DELETE_USER_BYID_FAILURE,\n} from \"../actions/usersActiontypes\";\nimport api from \"../services/api\";\n\nexport const GethUsers = () => {  \n  return (dispatch) => {  \n    dispatch(getUsersRequest())  \n    api \n      .get('/v1/users')  \n      .then(response => {  \n        const users = response.data  \n        console.log(response.data);  \n        dispatch(getUsersSuccess(users))  \n      })  \n      .catch(error => {  \n        dispatch(getUsersFailure(error.message))  \n      })  \n  }  \n} \n\nexport const getUsersRequest = () => {  \n  return {  \n    type: GET_USERS_REQUEST  \n  }  \n}  \n  \nexport const getUsersSuccess = users => {  \n  return {  \n    type: GET_USERS_SUCCESS,  \n    payload: users  \n  }  \n}  \n  \nexport const getUsersFailure = error => {  \n  return {  \n    type: GET_USERS_FAILURE,  \n    payload: error  \n  }  \n}  \n\nexport function createUser(data, history) {\n  return (dispatch) => {\n    dispatch({ type: CREATE_USER_REQUEST });\n    api\n      .post('/v1/users', data)\n      .then(function (res) {\n        console.log(\"res=>\", res.data);\n        localStorage.setItem(\"token\", res.data.tokens.access.token);\n        setTimeout(() => {\n          dispatch({\n            type: CREATE_USER_SUCCESS,\n            payload: res.data,\n          });\n          history.push(\"/\");\n        }, 1000);\n      })\n      .catch(function (error) {\n        const { response } = error;\n        console.log(\"err\", response);\n        if (response !== undefined) {\n          dispatch({\n            type: CREATE_USER_FAILURE,\n            payload: response.data,\n          });\n          alert(response.data?.message);\n        }\n      });\n  };\n}\n\n\n\nexport function getUserById(id) {\n  return (dispatch) => {\n    dispatch({ type: GET_USER_BYID_REQUEST });\n    api\n      .get(`/v1/users/${id}`)\n      .then(function (res) {\n        console.log(\"res =>\", res.data);\n        dispatch({\n          type: GET_USER_BYID_SUCCESS,\n          payload: res.data,\n        });\n      })\n      .catch(function (error) {\n        const { response } = error;\n        console.log(\"err\", response);\n        if (response !== undefined) {\n          dispatch({\n            type: GET_USER_BYID_FAILURE,\n            payload: response.data,\n          });\n        }\n      });\n  };\n}\n\n// export function updateUserById(id, data, history) {\n//   return (dispatch) => {\n//     dispatch({ type: UPDATE_USER_BYID_REQUEST });\n//     axios\n//       .put(`${api_url}/api/user/${id}`, data)\n//       .then(function (res) {\n//         console.log(\"res=>\", res.data);\n//         setTimeout(() => {\n//           dispatch({\n//             type: UPDATE_USER_BYID_SUCCESS,\n//             payload: res.data,\n//           });\n//           history.push(\"/\");\n//         }, 1000);\n//       })\n//       .catch(function (error) {\n//         const { response } = error;\n//         console.log(\"err\", response);\n//         if (response !== undefined) {\n//           dispatch({\n//             type: UPDATE_USER_BYID_FAILURE,\n//             payload: response.data,\n//           });\n//           alert(response.data?.message);\n//         }\n//       });\n//   };\n// }\n\n \n\nexport function deleteUserById(id) {\n  return (dispatch) => {\n    dispatch({ type: DELETE_USER_BYID_REQUEST });\n    api\n      .delete(`/v1/users/${id}`)\n      .then(function (res) {\n        console.log(\"res =>\", res.data);\n        dispatch({\n          type: DELETE_USER_BYID_SUCCESS,\n          payload: id,\n        });\n      })\n      .catch(function (error) {\n        const { response } = error;\n        console.log(\"err\", response);\n        if (response !== undefined) {\n          dispatch({\n            type: DELETE_USER_BYID_FAILURE,\n            payload: response.data,\n          });\n          alert(response.data?.message);\n        }\n      });\n  };\n}"]},"metadata":{},"sourceType":"module"}