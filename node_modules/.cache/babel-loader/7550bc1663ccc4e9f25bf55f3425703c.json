{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUser } from \"../actions/users\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Read extends React.Component {\n  componentDidMount() {\n    this.props.getUser();\n  }\n\n  render() {\n    const {\n      user\n    } = this.props;\n    console.log(user);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: user.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nRead.propTypes = {\n  getUser: PropTypes.object.isRequired,\n  user: PropTypes.bool\n};\n\nconst mapStateToProps = _ref => {\n  let {\n    token,\n    errors\n  } = _ref;\n  return {\n    token,\n    errors\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getUser: dispatch(getUser())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Read);","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.jsx"],"names":["React","connect","getUser","PropTypes","Read","Component","componentDidMount","props","render","user","console","log","map","name","id","propTypes","object","isRequired","bool","mapStateToProps","token","errors","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AACA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AACjCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,OAAX;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKF,KAAtB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,wBACE;AAAA,gBACGA,IAAI,CAACG,GAAL,CAASH,IAAI,iBACZ;AAAA,kBAAmBA,IAAI,CAACI;AAAxB,SAASJ,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAhBgC;;AAkBnCV,IAAI,CAACW,SAAL,GAAiB;AAChBb,EAAAA,OAAO,EAAEC,SAAS,CAACa,MAAV,CAAiBC,UADV;AAEhBR,EAAAA,IAAI,EAAEN,SAAS,CAACe;AAFA,CAAjB;;AAIA,MAAMC,eAAe,GAAG;AAAA,MAAC;AACrBC,IAAAA,KADqB;AACdC,IAAAA;AADc,GAAD;AAAA,SAEf;AACLD,IAAAA,KADK;AAELC,IAAAA;AAFK,GAFe;AAAA,CAAxB;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,OAAO,EAAEqB,QAAQ,CAACrB,OAAO,EAAR;AADmB,CAAL,CAAnC;;AAGA,eAAeD,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,IAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUser } from \"../actions/users\";\nimport PropTypes from \"prop-types\";\nclass Read extends React.Component {\n  componentDidMount() {\n    this.props.getUser()\n  }\n\n  render() {\n    const { user } = this.props;\n    console.log(user)\n\n    return (\n      <ul>\n        {user.map(user =>\n          <li key={user.id}>{user.name}</li>\n        )}\n      </ul>\n    );\n  }\n}\nRead.propTypes = {\n\tgetUser: PropTypes.object.isRequired,\n\tuser: PropTypes.bool,\n};\nconst mapStateToProps = ({\n    token, errors\n  }) => ({\n    token,\n    errors\n  });\nconst mapDispatchToProps = dispatch => ({   \n    getUser: dispatch(getUser())\n  })\nexport default connect(mapStateToProps, mapDispatchToProps)(Read);"]},"metadata":{},"sourceType":"module"}