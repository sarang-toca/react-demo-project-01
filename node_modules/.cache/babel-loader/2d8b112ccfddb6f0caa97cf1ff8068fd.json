{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport { makeStyles, useTheme, AppBar, Toolbar, Typography, Button, TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper, // Dialog,\n// DialogActions,\n// DialogContent,\n// DialogContentText,\nuseMediaQuery } from \"@material-ui/core\";\nimport \"@material-ui/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUsers } from \"../actions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  table: {\n    flex: 1,\n    alignContent: \"center\",\n    justifyContent: \"center\"\n  }\n}));\n\nfunction Dashboard() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const dispatch = useDispatch();\n  const loading = useSelector(state => {\n    var _state$users;\n\n    return (_state$users = state.users) === null || _state$users === void 0 ? void 0 : _state$users.loading;\n  });\n  const users = useSelector(state => {\n    var _state$users2;\n\n    return (_state$users2 = state.users) === null || _state$users2 === void 0 ? void 0 : _state$users2.items;\n  }); // const [userId, setUserId] = useState(\"\");\n\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n  useEffect(() => {\n    console.log('loading', loading);\n\n    if (!loading) {\n      setOpen(loading);\n    }\n  }, [loading]); // const openDialog = (_id) => {\n  //   setOpen(true);\n  //   setUserId(_id);\n  // };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // const confirmDelete = () => {\n  //   dispatch(deleteUserById(userId));\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          children: \"ReactJs CRUD App With React Redux Thunk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"S.No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"CreatedAt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"UpdatedAt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: users.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.updatedAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"pwxHhCzNRcPgHvCD1sBT0P3Plac=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery, useDispatch, useSelector, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard; // import React, {useEffect}from 'react'\n// import {fetchData} from '../actions/authActions';\n// import { connect } from \"react-redux\";\n// import PropTypes from \"prop-types\";\n// function Dashboard({ isLoggedIn, user, fetchData } ) {\n//   useEffect(() =>{\n//     fetchData();\n//   }, [])\n//   return (\n//     <div>\n//       \t{/* <h1>Name: {user && user.name}</h1> */}\n//         <h1>Name: {fetchData && fetchData.name}</h1>\n//         <p>save</p>\n//     </div>\n//   )\n// }\n// const mapStateToProps = state => {\n//   console.log(\"I am state\", state);\n//   return {\n//     // auth: state.auth,\n//     isLoggedIn: state.auth.isLoggedIn,\n//      user: state.auth.user,\n//     // userComments: state.comments\n//     // data: state.auth.fetch\n//     fetchData: state.data\n//   };\n// };\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     fetchData: () => dispatch(fetchData()),\n//   };\n// };\n// Dashboard.propTypes = {\n// \tisLoggedIn: PropTypes.object.isRequired,\n//   user: PropTypes.object.isRequired,\n//   fetchData: PropTypes.object.isRequired,\n// };\n// // const mapStateToProps = (state) => ({\n// // \tauth: state.auth,\n// // });\n// export default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import {fetchData} from '../actions/authActions';\n// import PropTypes from \"prop-types\";\n// class Dashboard extends Component {\n//   // const Dashboard = ({ auth: { user } }) => {\n//     componentDidMount() {\n//         const { fetchData } = this.props\n//         fetchData();\n//     }\n//     render() {\n//         const mydata = this.props.data.data;\n//         mydata && console.log(\"Data .....<>\", mydata);\n//         // console.log(\"Data .....<>\", mydata);\n//         return(\n//             <div>\n//                 <h1></h1>    \n//             </div>\n//         );\n//     }\n// }\n// // Dashboard.propTypes = {\n// // \tauth: PropTypes.object.isRequired,\n// // };\n// // const mapStateToProps = (state) => ({\n// // \tauth: state.auth,\n// // });\n// Dashboard.propTypes = {\n// \tdata: PropTypes.object.isRequired,\n//   fetchData: PropTypes.object.isRequired\n// };\n// const mapStateToProps =(state)=> {\n//     return {\n//         data: state.fetch\n//     }\n// }\n// export default connect(mapStateToProps, {fetchData})(Dashboard);\n// // import React, {useState, useEffect} from \"react\";\n// // import { connect} from \"react-redux\";\n//  import PropTypes from \"prop-types\";\n// // import AddTutorial from \"./AddTutorial\";\n// // import TutorialsList from \"./TutorialsList\";\n// // import icon from \"../img/user.png\";\n//  import { fetchUsers } from \"actions/authActions\";\n// //  import { getFoo } from \"../../actions/FoosActions\";\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// // import * as actions from '../actions';\n// class Dashboard extends Component {\n//     componentDidMount() {\n//         const { fetchUsers } = this.props\n//         fetchUsers();\n//     }\n//     render() {\n//         const mydata = this.props.data.data;\n//         console.log(\"Data .....<>\", mydata);\n//         return(\n//             <div>\n//                 Main     \n//             </div>\n//         );\n//     }\n// }\n// Dashboard.propTypes = {\n// \tdata: PropTypes.object.isRequired,\n//   fetchUsers: PropTypes.object.isRequired\n// };\n// const mapStateToProps =(state)=> {\n//     return {\n//         data: state.fetch\n//     }\n// }\n// export default connect(mapStateToProps, {fetchUsers})(Dashboard);\n// class Dashboard extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       errors: {},\n//     };\n//   }\n//   componentDidMount() {\n//     this.props.fetchUsers();\n//   }\n//    render() {\n//     const { data } = this.props.foo;       \n//     return (\n//         <div className=\"container\">\n//             <h2>foo data fetched from API endpoint  : </h2>\n//             <ul>\n//               {data.map((foo) => {\n//                 return (\n//                     <li key={foo.name}>\n//                       {/* {foo.id} - {foo.name} */}\n//                     </li>\n//                 );\n//               })}\n//               </ul>\n//             </div>\n//     );\n//   }\n// }\n// Dashboard.propTypes = {\n// \tfetchUsers: PropTypes.object.isRequired,\n//   foo: PropTypes.object.isRequired,\n// };\n//   const mapStateToProps = (state) => ({\n//     foo: state.foo,\n//     errors: state.errors,\n//   });\n// export default connect(mapStateToProps, { fetchUsers })(Dashboard);\n// class Dashboard extends React.Component {\n//   constructor(props) {\n//       super(props);\n//       this.state = {\n//       users: [],\n//       usersAreDisplayed: true\n//       };\n//   }\n//   componentDidMount() {\n//       fetchUsers();\n//   }\n//   render(){\n//       return (\n//            <Dashboard users={this.state.users} /> \n//       )\n//   }\n// }\n// function mapStateToProps(state){\n//   return { users: state.users }\n// }\n// function mapDispatchToProps(dispatch){\n//   return {\n//     fetchUsers:() => dispatch(fetchUsers())\n//       // fetchUsers: payload => dispatch(updateUserData(payload)),\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n// const Dashboard = ({ auth: { user } }) => {\n// \treturn (\n// \t\t<div style={{ marginTop: \"5rem\", textAlign: \"center\" }}>\n// \t\t\t<h1>Name: {user && user.name}</h1>\n//             <h1>Email: {user && user.email}</h1>\n//             <h1>token: {user && user.token}</h1>\n//             <h1>role: {user && user.role}</h1>\n//             {/* <Listing/> */}\n//             {/* <AddTutorial/> */}\n// \t\t\t{/* <TutorialsList/> */}\n// \t\t</div>\n// \t);\n// };\n// Dashboard.propTypes = {\n// \tauth: PropTypes.object.isRequired,\n// };\n// const mapStateToProps = (state) => ({\n// \tauth: state.auth,\n// });\n// export default connect(mapStateToProps)(Dashboard);\n// // import React, { useState, useEffect } from \"react\";\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { Link } from \"react-router-dom\";\n// // import {\n// //   retrieveTutorials,\n// //    findTutorialsByName,\n// //   deleteAllTutorials,\n// // } from \"../actions/tutorials\";\n// // const TutorialsList = () => {\n// //   const [currentTutorial, setCurrentTutorial] = useState(null);\n// //   const [currentIndex, setCurrentIndex] = useState(-1);\n// //   const [searchName, setSearchName] = useState(\"\");\n// //   const tutorials = useSelector(state => state.tutorials);\n// //   const dispatch = useDispatch();\n// //   useEffect(() => {\n// //     dispatch(retrieveTutorials());\n// //   }, []);\n// //   const onChangeSearchTitle = e => {\n// //     const searchName = e.target.value;\n// //     setSearchName(searchName);\n// //   };\n// //   const refreshData = () => {\n// //     setCurrentTutorial(null);\n// //     setCurrentIndex(-1);\n// //   };\n// //   const setActiveTutorial = (tutorial, index) => {\n// //     setCurrentTutorial(tutorial);\n// //     setCurrentIndex(index);\n// //   };\n// //   const removeAllTutorials = () => {\n// //     dispatch(deleteAllTutorials())\n// //       .then(response => {\n// //         console.log(response);\n// //         refreshData();\n// //       })\n// //       .catch(e => {\n// //         console.log(e);\n// //       });\n// //   };\n// //   const findByName = () => {\n// //     refreshData();\n// //     dispatch(findTutorialsByName(searchName));\n// //   };\n// //   return (\n// //     <div className=\"list row\">\n// //     <div className=\"col-md-8\">\n// //       <div className=\"input-group mb-3\">\n// //         <input\n// //           type=\"text\"\n// //           className=\"form-control\"\n// //           placeholder=\"Search by title\"\n// //           value={searchName}\n// //           onChange={onChangeSearchTitle}\n// //         />\n// //         <div className=\"input-group-append\">\n// //           <button\n// //             className=\"btn btn-outline-secondary\"\n// //             type=\"button\"\n// //             onClick={findByName}\n// //           >\n// //             Search\n// //           </button>\n// //         </div>\n// //       </div>\n// //     </div>\n// //     <div className=\"col-md-6\">\n// //       <h4>Tutorials List</h4>\n// //       <ul className=\"list-group\">\n// //         {tutorials &&\n// //           tutorials.map((tutorial, index) => (\n// //             <li\n// //               className={\n// //                 \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n// //               }\n// //               onClick={() => setActiveTutorial(tutorial, index)}\n// //               key={index}\n// //             >\n// //               {tutorial.name}\n// //             </li>\n// //           ))}\n// //       </ul>\n// //       <button\n// //         className=\"m-3 btn btn-sm btn-danger\"\n// //         onClick={removeAllTutorials}\n// //       >\n// //         Remove All\n// //       </button>\n// //     </div>\n// //     <div className=\"col-md-6\">\n// //       {currentTutorial ? (\n// //         <div>\n// //           <h4>Tutorial</h4>\n// //           <div>\n// //             <label>\n// //               <strong>Name:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.name}\n// //           </div>\n// //           <div>\n// //             <label>\n// //               <strong>Email:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.email}\n// //           </div>\n// //           <div>\n// //             <label>\n// //               <strong>Status:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.published ? \"Published\" : \"Pending\"}\n// //           </div>\n// //           <Link\n// //             to={\"/users/\" + currentTutorial.id}\n// //             className=\"badge badge-warning\"\n// //           >\n// //             Edit\n// //           </Link>\n// //         </div>\n// //       ) : (\n// //         <div>\n// //           <br />\n// //           <p>Please click on a Tutorial...</p>\n// //         </div>\n// //       )}\n// //     </div>\n// //   </div>\n// //   );\n// // };\n// // export default TutorialsList;\n// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { createTutorial } from \"../actions/tutorials\";\n// const AddTutorial = () => {\n//   const initialTutorialState = {\n//     id: null,\n//     name: \"\",\n//     email: \"\",\n// \tpassword:\"\",\n// \trole:\"\",\n//     published: false\n//   };\n//   const [tutorial, setTutorial] = useState(initialTutorialState);\n//   const [submitted, setSubmitted] = useState(false);\n//   const dispatch = useDispatch();\n//   const handleInputChange = event => {\n//     const { name, value } = event.target;\n//     setTutorial({ ...tutorial, [name]: value });\n//   };\n//   const saveTutorial = () => {\n//     const { name, email, password, role } = tutorial;\n//     dispatch(createTutorial(name, email, password, role))\n//       .then(data => {\n//         setTutorial({\n//           id: data.id,\n//           name: data.name,\n//           email: data.email,\n// \t\t  password: data.password,\n// \t\t  role: data.role,\n//           published: data.published\n//         });\n//         setSubmitted(true);\n//         console.log(data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\n//   const newTutorial = () => {\n//     setTutorial(initialTutorialState);\n//     setSubmitted(false);\n//   };\n//   return (\n//     <div className=\"submit-form\">\n//     {submitted ? (\n//       <div>\n//         <h4>You submitted successfully!</h4>\n//         <button className=\"btn btn-success\" onClick={newTutorial}>\n//           Add\n//         </button>\n//       </div>\n//     ) : (\n//       <div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"name\">Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"name\"\n//             required\n//             value={tutorial.name}\n//             onChange={handleInputChange}\n//             name=\"name\"\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\">Email</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"email\"\n//             required\n//             value={tutorial.email}\n//             onChange={handleInputChange}\n//             name=\"email\"\n//           />\n//         </div>\n// \t\t<div className=\"form-group\">\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             className=\"form-control\"\n//             id=\"password\"\n//             required\n//             value={tutorial.password}\n//             onChange={handleInputChange}\n//             name=\"password\"\n//           />\n//         </div>\n// \t\t<div className=\"form-group\">\n//           <label htmlFor=\"role\">Role</label>\n//           <input\n//             type=\"role\"\n//             className=\"form-control\"\n//             id=\"role\"\n//             required\n//             value={tutorial.role}\n//             onChange={handleInputChange}\n//             name=\"role\"\n//           />\n//         </div>\n//         <button onClick={saveTutorial} className=\"btn btn-success\">\n//           Submit\n//         </button>\n//       </div>\n//     )}\n//   </div>\n// );\n// };\n// // export default AddTutorial;\n// import React from 'react'\n// import AddUserForm from './AddUserForm'\n// function Dashboard() {\n// \treturn (\n// \t\t<div>\n// \t\t\t<AddUserForm/>\n// \t\t</div>\n// \t)\n// }\n// export default Dashboard\n// import React, { useState } from 'react'\n// import {useDispatch} from 'react-redux'\n// import { addNewUser  } from '../actions/authActions';\n// import PropTypes from \"prop-types\";\n// function AddUserForm(users) {\n//     const dispatch = useDispatch();\n//     const [newUserName, setNewUserName] = useState('');\n// \tconst [newUserEmail, setNewUserEmail] = useState('');\n// \t// const [newUserPassword, setNewUserPassword] = useState('');\n// \tconst [newUserRole, setNewUserRole] = useState('');\n//    const handleSubmit = (e) =>{\n//     e.preventDefault();\n//     const usersList = users;\n//     //  const newUserId = usersList[usersList.length - 1].id + 1;\n//     console.log(\"your name\", usersList);\n// \t// console.log(\"\", usersList);\n//     // console.log(\"your id\", newUserId)\n//     dispatch(addNewUser({\n//       name: newUserName,\n// \t  email: newUserEmail,\n// \t  // password: newUserPassword,\n// \t  role: newUserRole\n//     }));\n//    }\n//   const handleCancel = () => {};\n//   return (\n//     <tr>\n//       {/* <td>{newUserName.id}</td> */}\n//       <td>\n//         <input\n//           value={newUserName}\n//           name=\"name\"\n//           onChange={e => setNewUserName(e.target.value)}\n//         />\n//       </td>\n// \t  <td>\n//         <input\n//           value={newUserEmail}\n//           name=\"email\"\n//           onChange={e => setNewUserEmail(e.target.value)}\n//         />\n//       </td>\n// \t  {/* <td>\n//         <input\n//           value={newUserPassword}\n//           name=\"password\"\n//           onChange={e => setNewUserPassword(e.target.value)}\n//         />\n//       </td> */}\n// \t  <td>\n//         <input\n//           value={newUserRole}\n//           name=\"role\"\n//           onChange={e => setNewUserRole(e.target.value)}\n//         />\n//       </td>\n//       <td>\n//         <button type=\"button\" className=\"btn outline\" onClick={handleCancel}>\n//           <i className=\"material-icons\">Cancel</i>\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-success btn-link\"\n//           onClick={handleSubmit}\n//         >\n//           <i className=\"material-icons\">save</i>\n//         </button>\n//       </td>\n//     </tr>\n//   );\n// }\n// AddUserForm.prototype = {\n// users: PropTypes.func.isRequired,\n// }\n// export default AddUserForm\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Dashboard.js"],"names":["React","useState","useEffect","makeStyles","useTheme","AppBar","Toolbar","Typography","Button","TableContainer","Table","TableBody","TableCell","TableHead","TableRow","Paper","useMediaQuery","useSelector","useDispatch","getUsers","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","button","margin","table","flex","alignContent","justifyContent","Dashboard","classes","fullScreen","breakpoints","down","dispatch","loading","state","users","items","open","setOpen","console","log","handleClose","map","row","index","name","email","role","createdAt","updatedAt"],"mappings":"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":["import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport {\n  makeStyles,\n  useTheme,\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  TableContainer,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  // Dialog,\n  // DialogActions,\n  // DialogContent,\n  // DialogContentText,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport {\n  // Add as AddIcon,\n  // Edit as EditIcon,\n  // Delete as DeleteIcon,\n} from \"@material-ui/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUsers } from \"../actions/user\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    flex: 1,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nfunction Dashboard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.users?.loading);\n  const users = useSelector((state) => state.users?.items);\n  // const [userId, setUserId] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n\n  useEffect(() => {\n    console.log('loading', loading)\n    if (!loading) {\n      setOpen(loading);\n    }\n  }, [loading]);\n\n  // const openDialog = (_id) => {\n  //   setOpen(true);\n  //   setUserId(_id);\n  // };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // const confirmDelete = () => {\n  //   dispatch(deleteUserById(userId));\n  // };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            ReactJs CRUD App With React Redux Thunk\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      {/* <Link to=\"/create\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<AddIcon />}\n        >\n          Create User\n        </Button>\n      </Link> */}\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>S.No</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Email</TableCell>\n              <TableCell>Role</TableCell>\n              <TableCell>CreatedAt</TableCell>\n              <TableCell>UpdatedAt</TableCell>\n              <TableCell>Update</TableCell>\n              <TableCell>Delete</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map((row, index) => (\n              <TableRow key={index}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {index + 1}\n                </TableCell>\n                <TableCell>{row.name }</TableCell>\n                <TableCell>{row.email}</TableCell>\n                <TableCell>{row.role}</TableCell>\n                <TableCell>{row.createdAt}</TableCell>\n                <TableCell>{row.updatedAt}</TableCell>\n                {/* <TableCell>\n                  <Link to={`/update/${row._id}`}>\n                    <EditIcon>edit</EditIcon>\n                  </Link>\n                </TableCell> */}\n                {/* <TableCell>\n                  <DeleteIcon onClick={() => openDialog(row._id)}>\n                    delete\n                  </DeleteIcon>\n                </TableCell> */}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {/* {open && (\n        <Dialog\n          fullScreen={fullScreen}\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"Delete User\"\n        >\n          <DialogContent style={{ width: 300 }}>\n            <DialogContentText>Are you sure?</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={confirmDelete} color=\"primary\" autoFocus>\n              Delete\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )} */}\n    </React.Fragment>\n  );\n}\n\nexport default Dashboard;\n\n// import React, {useEffect}from 'react'\n// import {fetchData} from '../actions/authActions';\n// import { connect } from \"react-redux\";\n// import PropTypes from \"prop-types\";\n// function Dashboard({ isLoggedIn, user, fetchData } ) {\n\n//   useEffect(() =>{\n//     fetchData();\n//   }, [])\n\n//   return (\n    \n//     <div>\n//       \t{/* <h1>Name: {user && user.name}</h1> */}\n//         <h1>Name: {fetchData && fetchData.name}</h1>\n//         <p>save</p>\n//     </div>\n//   )\n// }\n\n// const mapStateToProps = state => {\n//   console.log(\"I am state\", state);\n//   return {\n    \n//     // auth: state.auth,\n//     isLoggedIn: state.auth.isLoggedIn,\n//      user: state.auth.user,\n//     // userComments: state.comments\n//     // data: state.auth.fetch\n//     fetchData: state.data\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     fetchData: () => dispatch(fetchData()),\n//   };\n// };\n// Dashboard.propTypes = {\n// \tisLoggedIn: PropTypes.object.isRequired,\n//   user: PropTypes.object.isRequired,\n//   fetchData: PropTypes.object.isRequired,\n\n// };\n\n// // const mapStateToProps = (state) => ({\n// // \tauth: state.auth,\n// // });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\n\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import {fetchData} from '../actions/authActions';\n// import PropTypes from \"prop-types\";\n// class Dashboard extends Component {\n//   // const Dashboard = ({ auth: { user } }) => {\n\n\n//     componentDidMount() {\n      \n//         const { fetchData } = this.props\n//         fetchData();\n//     }\n\n//     render() {\n//         const mydata = this.props.data.data;\n//         mydata && console.log(\"Data .....<>\", mydata);\n//         // console.log(\"Data .....<>\", mydata);\n//         return(\n//             <div>\n//                 <h1></h1>    \n//             </div>\n//         );\n//     }\n// }\n// // Dashboard.propTypes = {\n// // \tauth: PropTypes.object.isRequired,\n// // };\n\n// // const mapStateToProps = (state) => ({\n// // \tauth: state.auth,\n// // });\n\n// Dashboard.propTypes = {\n// \tdata: PropTypes.object.isRequired,\n//   fetchData: PropTypes.object.isRequired\n// };\n\n// const mapStateToProps =(state)=> {\n//     return {\n//         data: state.fetch\n//     }\n// }\n\n// export default connect(mapStateToProps, {fetchData})(Dashboard);\n\n\n\n// // import React, {useState, useEffect} from \"react\";\n// // import { connect} from \"react-redux\";\n//  import PropTypes from \"prop-types\";\n// // import AddTutorial from \"./AddTutorial\";\n// // import TutorialsList from \"./TutorialsList\";\n// // import icon from \"../img/user.png\";\n//  import { fetchUsers } from \"actions/authActions\";\n\n\n// //  import { getFoo } from \"../../actions/FoosActions\";\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n\n// // import * as actions from '../actions';\n// class Dashboard extends Component {\n\n\n//     componentDidMount() {\n//         const { fetchUsers } = this.props\n//         fetchUsers();\n//     }\n\n//     render() {\n//         const mydata = this.props.data.data;\n//         console.log(\"Data .....<>\", mydata);\n//         return(\n//             <div>\n//                 Main     \n//             </div>\n//         );\n//     }\n// }\n// Dashboard.propTypes = {\n// \tdata: PropTypes.object.isRequired,\n//   fetchUsers: PropTypes.object.isRequired\n// };\n\n// const mapStateToProps =(state)=> {\n//     return {\n//         data: state.fetch\n//     }\n// }\n\n// export default connect(mapStateToProps, {fetchUsers})(Dashboard);\n\n// class Dashboard extends Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       errors: {},\n//     };\n//   }\n\n//   componentDidMount() {\n//     this.props.fetchUsers();\n//   }\n  \n//    render() {\n//     const { data } = this.props.foo;       \n//     return (\n\n//         <div className=\"container\">\n//             <h2>foo data fetched from API endpoint  : </h2>\n//             <ul>\n//               {data.map((foo) => {\n//                 return (\n//                     <li key={foo.name}>\n//                       {/* {foo.id} - {foo.name} */}\n//                     </li>\n//                 );\n//               })}\n//               </ul>\n//             </div>\n  \n       \n//     );\n//   }\n// }\n// Dashboard.propTypes = {\n// \tfetchUsers: PropTypes.object.isRequired,\n//   foo: PropTypes.object.isRequired,\n// };\n//   const mapStateToProps = (state) => ({\n//     foo: state.foo,\n//     errors: state.errors,\n//   });\n\n\n\n// export default connect(mapStateToProps, { fetchUsers })(Dashboard);\n\n\n// class Dashboard extends React.Component {\n//   constructor(props) {\n//       super(props);\n//       this.state = {\n//       users: [],\n//       usersAreDisplayed: true\n//       };\n//   }\n\n//   componentDidMount() {\n//       fetchUsers();\n//   }\n  \n//   render(){\n//       return (\n//            <Dashboard users={this.state.users} /> \n//       )\n//   }\n// }\n\n// function mapStateToProps(state){\n//   return { users: state.users }\n// }\n\n// function mapDispatchToProps(dispatch){\n//   return {\n//     fetchUsers:() => dispatch(fetchUsers())\n//       // fetchUsers: payload => dispatch(updateUserData(payload)),\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\n\n\n// const Dashboard = ({ auth: { user } }) => {\n    \n// \treturn (\n// \t\t<div style={{ marginTop: \"5rem\", textAlign: \"center\" }}>\n// \t\t\t<h1>Name: {user && user.name}</h1>\n//             <h1>Email: {user && user.email}</h1>\n//             <h1>token: {user && user.token}</h1>\n//             <h1>role: {user && user.role}</h1>\n//             {/* <Listing/> */}\n//             {/* <AddTutorial/> */}\n// \t\t\t{/* <TutorialsList/> */}\n\t\n// \t\t</div>\n        \n// \t);\n// };\n// Dashboard.propTypes = {\n// \tauth: PropTypes.object.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({\n// \tauth: state.auth,\n// });\n\n// export default connect(mapStateToProps)(Dashboard);\n\n\n\n// // import React, { useState, useEffect } from \"react\";\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { Link } from \"react-router-dom\";\n// // import {\n// //   retrieveTutorials,\n// //    findTutorialsByName,\n// //   deleteAllTutorials,\n// // } from \"../actions/tutorials\";\n// // const TutorialsList = () => {\n// //   const [currentTutorial, setCurrentTutorial] = useState(null);\n// //   const [currentIndex, setCurrentIndex] = useState(-1);\n\n// //   const [searchName, setSearchName] = useState(\"\");\n// //   const tutorials = useSelector(state => state.tutorials);\n// //   const dispatch = useDispatch();\n// //   useEffect(() => {\n// //     dispatch(retrieveTutorials());\n// //   }, []);\n// //   const onChangeSearchTitle = e => {\n// //     const searchName = e.target.value;\n// //     setSearchName(searchName);\n// //   };\n// //   const refreshData = () => {\n// //     setCurrentTutorial(null);\n// //     setCurrentIndex(-1);\n// //   };\n// //   const setActiveTutorial = (tutorial, index) => {\n// //     setCurrentTutorial(tutorial);\n// //     setCurrentIndex(index);\n// //   };\n// //   const removeAllTutorials = () => {\n// //     dispatch(deleteAllTutorials())\n// //       .then(response => {\n// //         console.log(response);\n// //         refreshData();\n// //       })\n// //       .catch(e => {\n// //         console.log(e);\n// //       });\n// //   };\n// //   const findByName = () => {\n// //     refreshData();\n// //     dispatch(findTutorialsByName(searchName));\n// //   };\n// //   return (\n// //     <div className=\"list row\">\n// //     <div className=\"col-md-8\">\n// //       <div className=\"input-group mb-3\">\n// //         <input\n// //           type=\"text\"\n// //           className=\"form-control\"\n// //           placeholder=\"Search by title\"\n// //           value={searchName}\n// //           onChange={onChangeSearchTitle}\n// //         />\n// //         <div className=\"input-group-append\">\n// //           <button\n// //             className=\"btn btn-outline-secondary\"\n// //             type=\"button\"\n// //             onClick={findByName}\n// //           >\n// //             Search\n// //           </button>\n// //         </div>\n// //       </div>\n// //     </div>\n// //     <div className=\"col-md-6\">\n// //       <h4>Tutorials List</h4>\n// //       <ul className=\"list-group\">\n// //         {tutorials &&\n// //           tutorials.map((tutorial, index) => (\n// //             <li\n// //               className={\n// //                 \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n// //               }\n// //               onClick={() => setActiveTutorial(tutorial, index)}\n// //               key={index}\n// //             >\n// //               {tutorial.name}\n// //             </li>\n// //           ))}\n// //       </ul>\n// //       <button\n// //         className=\"m-3 btn btn-sm btn-danger\"\n// //         onClick={removeAllTutorials}\n// //       >\n// //         Remove All\n// //       </button>\n// //     </div>\n// //     <div className=\"col-md-6\">\n// //       {currentTutorial ? (\n// //         <div>\n// //           <h4>Tutorial</h4>\n// //           <div>\n// //             <label>\n// //               <strong>Name:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.name}\n// //           </div>\n// //           <div>\n// //             <label>\n// //               <strong>Email:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.email}\n// //           </div>\n// //           <div>\n// //             <label>\n// //               <strong>Status:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.published ? \"Published\" : \"Pending\"}\n// //           </div>\n// //           <Link\n// //             to={\"/users/\" + currentTutorial.id}\n// //             className=\"badge badge-warning\"\n// //           >\n// //             Edit\n// //           </Link>\n// //         </div>\n// //       ) : (\n// //         <div>\n// //           <br />\n// //           <p>Please click on a Tutorial...</p>\n// //         </div>\n// //       )}\n// //     </div>\n// //   </div>\n\n// //   );\n// // };\n// // export default TutorialsList;\n\n// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { createTutorial } from \"../actions/tutorials\";\n// const AddTutorial = () => {\n//   const initialTutorialState = {\n//     id: null,\n//     name: \"\",\n//     email: \"\",\n// \tpassword:\"\",\n// \trole:\"\",\n//     published: false\n//   };\n//   const [tutorial, setTutorial] = useState(initialTutorialState);\n//   const [submitted, setSubmitted] = useState(false);\n//   const dispatch = useDispatch();\n//   const handleInputChange = event => {\n//     const { name, value } = event.target;\n//     setTutorial({ ...tutorial, [name]: value });\n//   };\n//   const saveTutorial = () => {\n//     const { name, email, password, role } = tutorial;\n//     dispatch(createTutorial(name, email, password, role))\n//       .then(data => {\n//         setTutorial({\n//           id: data.id,\n//           name: data.name,\n//           email: data.email,\n// \t\t  password: data.password,\n// \t\t  role: data.role,\n//           published: data.published\n//         });\n//         setSubmitted(true);\n//         console.log(data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\n//   const newTutorial = () => {\n//     setTutorial(initialTutorialState);\n//     setSubmitted(false);\n//   };\n//   return (\n//     <div className=\"submit-form\">\n//     {submitted ? (\n//       <div>\n//         <h4>You submitted successfully!</h4>\n//         <button className=\"btn btn-success\" onClick={newTutorial}>\n//           Add\n//         </button>\n//       </div>\n//     ) : (\n//       <div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"name\">Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"name\"\n//             required\n//             value={tutorial.name}\n//             onChange={handleInputChange}\n//             name=\"name\"\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\">Email</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"email\"\n//             required\n//             value={tutorial.email}\n//             onChange={handleInputChange}\n//             name=\"email\"\n//           />\n//         </div>\n// \t\t<div className=\"form-group\">\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             className=\"form-control\"\n//             id=\"password\"\n//             required\n//             value={tutorial.password}\n//             onChange={handleInputChange}\n//             name=\"password\"\n//           />\n//         </div>\n// \t\t<div className=\"form-group\">\n//           <label htmlFor=\"role\">Role</label>\n//           <input\n//             type=\"role\"\n//             className=\"form-control\"\n//             id=\"role\"\n//             required\n//             value={tutorial.role}\n//             onChange={handleInputChange}\n//             name=\"role\"\n//           />\n//         </div>\n//         <button onClick={saveTutorial} className=\"btn btn-success\">\n//           Submit\n//         </button>\n//       </div>\n//     )}\n//   </div>\n// );\n// };\n  \n\n// // export default AddTutorial;\n// import React from 'react'\n// import AddUserForm from './AddUserForm'\n\n// function Dashboard() {\n// \treturn (\n// \t\t<div>\n// \t\t\t<AddUserForm/>\n// \t\t</div>\n// \t)\n// }\n\n// export default Dashboard\n\n\n// import React, { useState } from 'react'\n// import {useDispatch} from 'react-redux'\n// import { addNewUser  } from '../actions/authActions';\n// import PropTypes from \"prop-types\";\n\n// function AddUserForm(users) {\n//     const dispatch = useDispatch();\n//     const [newUserName, setNewUserName] = useState('');\n// \tconst [newUserEmail, setNewUserEmail] = useState('');\n// \t// const [newUserPassword, setNewUserPassword] = useState('');\n// \tconst [newUserRole, setNewUserRole] = useState('');\n//    const handleSubmit = (e) =>{\n//     e.preventDefault();\n\n//     const usersList = users;\n//     //  const newUserId = usersList[usersList.length - 1].id + 1;\n    \n//     console.log(\"your name\", usersList);\n// \t// console.log(\"\", usersList);\n//     // console.log(\"your id\", newUserId)\n\n//     dispatch(addNewUser({\n    \n//       name: newUserName,\n// \t  email: newUserEmail,\n// \t  // password: newUserPassword,\n// \t  role: newUserRole\n//     }));\n \n//    }\n\n//   const handleCancel = () => {};\n//   return (\n//     <tr>\n//       {/* <td>{newUserName.id}</td> */}\n//       <td>\n//         <input\n//           value={newUserName}\n//           name=\"name\"\n//           onChange={e => setNewUserName(e.target.value)}\n//         />\n//       </td>\n// \t  <td>\n//         <input\n//           value={newUserEmail}\n//           name=\"email\"\n//           onChange={e => setNewUserEmail(e.target.value)}\n//         />\n//       </td>\n// \t  {/* <td>\n//         <input\n//           value={newUserPassword}\n//           name=\"password\"\n//           onChange={e => setNewUserPassword(e.target.value)}\n//         />\n//       </td> */}\n// \t  <td>\n//         <input\n//           value={newUserRole}\n//           name=\"role\"\n//           onChange={e => setNewUserRole(e.target.value)}\n//         />\n//       </td>\n//       <td>\n//         <button type=\"button\" className=\"btn outline\" onClick={handleCancel}>\n//           <i className=\"material-icons\">Cancel</i>\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-success btn-link\"\n//           onClick={handleSubmit}\n//         >\n//           <i className=\"material-icons\">save</i>\n//         </button>\n//       </td>\n//     </tr>\n//   );\n// }\n// AddUserForm.prototype = {\n// users: PropTypes.func.isRequired,\n// }\n// export default AddUserForm\n\n"]},"metadata":{},"sourceType":"module"}