{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/index.js\";\n// // import React from \"react\";\n// // import ReactDOM from \"react-dom\";\n// // import \"./index.css\";\n// // import App from \"./App\";\n// // import { Provider } from \"react-redux\";\n// // import store from \"./store\";\n// // ReactDOM.render(\n// // \t<Provider store={store}>\n// // \t\t<App />\n// // \t</Provider>,\n// // \tdocument.getElementById(\"root\")\n// // );\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App';\n// import { Provider } from 'react-redux';\n// import thunk from 'redux-thunk';\n// import { createStore, applyMiddleware, compose } from 'redux';\n// import rootReducer from './reducers/auth';\n// import jwtDecode from 'jwt-decode';\n// import { setCurrentUser,setAuthorizationToken } from './actions/auth';\n// const store = createStore(\n//   rootReducer,\n//   compose(\n//     applyMiddleware(thunk),\n//     window.devToolsExtension ? window.devToolsExtension() : f => f\n//   )\n// );\n// if (localStorage.jwtToken) {\n//   setAuthorizationToken(localStorage.jwtToken);\n//   // prevent someone from manually setting a key of 'jwtToken' in localStorage\n//   try {\n//     store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n//   } catch(e) {\n//     store.dispatch(setCurrentUser({}))\n//   }\n// }\n// ReactDOM.render(\n//     <Provider store={store}>\n//         <App />\n//     </Provider>\n//   ,\n//   document.getElementById('root')\n// );\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { getArticles } from './actions/user'; // import { store } from './helpers';\n\nimport configureStore from \"./store\";\nimport { BrowserRouter } from 'react-router-dom'; // ReactDOM.render(<App />, document.getElementById('root'));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = configureStore();\nstore.dispatch(getArticles());\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: \"Loading...\",\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 2\n}, this), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/index.js"],"names":["React","Suspense","ReactDOM","Provider","App","serviceWorker","getArticles","configureStore","BrowserRouter","store","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAGA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,sDAAP;AACA,OAAO,aAAP;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CACA;;AACA,OAAOC,cAAP,MAA2B,SAA3B;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CAEA;;;AACA,MAAMC,KAAK,GAAGF,cAAc,EAA5B;AACAE,KAAK,CAACC,QAAN,CAAeJ,WAAW,EAA1B;AACAJ,QAAQ,CAACS,MAAT,eACC,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA,yBACC,QAAC,aAAD;AAAA,2BACA,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,YAApB;AAAA,6BACA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADD,EASCG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATD,E,CAYA;AACA;AACA;;AACAR,aAAa,CAACS,UAAd","sourcesContent":["// // import React from \"react\";\n// // import ReactDOM from \"react-dom\";\n// // import \"./index.css\";\n// // import App from \"./App\";\n// // import { Provider } from \"react-redux\";\n// // import store from \"./store\";\n\n// // ReactDOM.render(\n// // \t<Provider store={store}>\n// // \t\t<App />\n// // \t</Provider>,\n// // \tdocument.getElementById(\"root\")\n// // );\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App';\n// import { Provider } from 'react-redux';\n// import thunk from 'redux-thunk';\n// import { createStore, applyMiddleware, compose } from 'redux';\n// import rootReducer from './reducers/auth';\n// import jwtDecode from 'jwt-decode';\n// import { setCurrentUser,setAuthorizationToken } from './actions/auth';\n\n// const store = createStore(\n//   rootReducer,\n//   compose(\n//     applyMiddleware(thunk),\n//     window.devToolsExtension ? window.devToolsExtension() : f => f\n//   )\n// );\n\n// if (localStorage.jwtToken) {\n//   setAuthorizationToken(localStorage.jwtToken);\n//   // prevent someone from manually setting a key of 'jwtToken' in localStorage\n//   try {\n//     store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n//   } catch(e) {\n//     store.dispatch(setCurrentUser({}))\n//   }\n// }\n\n// ReactDOM.render(\n//     <Provider store={store}>\n//         <App />\n//     </Provider>\n//   ,\n//   document.getElementById('root')\n// );\n\n\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { getArticles } from './actions/user';\n// import { store } from './helpers';\nimport configureStore from \"./store\";\nimport { BrowserRouter } from 'react-router-dom';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nconst store = configureStore();\nstore.dispatch(getArticles());\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t<Suspense fallback={\"Loading...\"}>\n\t\t<App />\n\t\t</Suspense>\n\t\t</BrowserRouter>\n\t\t\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}