{"ast":null,"code":"import api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\"; //  import jwtDecode from \"jwt-decode\";\n// export function fetchData() {\n//   const thunk = async function thunk(dispatch) {\n//       try {\n//           dispatch(actions.getData());\n//           const body = await api.fecth(\"/v1/users\")\n//           console.log(body.data)\n//           const res = await body.json();\n//           console.log(\"Thunk\", res);\n//           dispatch(actions.getSuccess(res));\n//       }\n//       catch(err) {\n//           dispatch(actions.getFailed(err));\n//       }\n//   }\n//   return thunk;\n//   }\n\nexport const fetchData = () => {\n  return dispatch => {\n    dispatch(actions.getData());\n    return api.get(\"/v1/users\").then(response => {\n      return response.data;\n    }).then(data => {\n      console.log(data);\n      dispatch(actions.getSuccess(response));\n    }).catch(err => {\n      dispatch(actions.getFailed(err));\n    });\n  };\n}; // export function fetchUsers() {\n//   return dispatch => {\n//       dispatch(actions.startLoading());\n//       fetch('https://localhost:5001/v1/users')\n//           .then(res => res.json())\n//           .then(data => {\n//               data = data.filter(user => user.id < 4);\n//               data.forEach(user => {\n//                   user.email = '';\n//                   user.name = '';\n//                   user.role = '';\n//               }\n//               )\n//               .then(data => {\n//                   dispatch(actions.updateUserData(data));\n//               }).catch(error => {\n//                   dispatch(actions.updateUserError(error));\n//               })\n//           });\n//   };\n// };\n\nexport const signUp = user => {\n  return dispatch => {\n    dispatch(actions.userSignupRequest());\n    api.post(`v1/auth/register`, user).then(token => {\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userSignupSuccess(token));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userSignupFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n};\nexport const loadUser = refreshToken => {\n  return dispatch => {\n    dispatch(actions.loadUserRequest());\n    api.post('/v1/auth/refresh-tokens', refreshToken).then(token => {\n      console.log(refreshToken);\n      localStorage.setItem(\"token\", token.data.access.token); //  const { sub: userId } = jwtDecode(token.data.access.token);\n      //         console.log(userId);\n      // const loadUserDetails = (userId) => {\n      //   api.get('/v1/users'`${userId}`).then((user) => {\n      //     console.log(user.data);\n      //     dispatch(actions.loadUserSuccess(user.data));\n      //   });\n      // };\n      // loadUserDetails(userId);\n    });\n  };\n}; // export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n// export const fetchUsers = () => {\n//   return dispatch => {\n//     dispatch(actions.fetchUsersRequest);\n//     api\n//       .get(\"/v1/users\")\n//       .then(response => {\n//         const users = response.data;\n//         console.log(users);\n//         dispatch(actions.fetchUsersSucess(users));\n//       })\n//       .catch(error => {\n//         const errorMsg = error.message;\n//         dispatch(actions.fetchUsersFailure(errorMsg));\n//       });\n//   };\n// };\n\nexport const signIn = user => {\n  return dispatch => {\n    dispatch(actions.userLoginRequest());\n    api.post(`v1/auth/login`, user).then(token => {\n      // console.log(token)\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userLoginSuccess(token));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userLoginFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n};\nexport const logOut = () => {\n  localStorage.removeItem(\"token\"); // localStorage.removeItem(\"refreshToken\");\n\n  localStorage.removeItem(\"redux\");\n  return dispatch => {\n    dispatch(actions.userLogout());\n  };\n};","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/authActions.js"],"names":["api","toast","actions","fetchData","dispatch","getData","get","then","response","data","console","log","getSuccess","catch","err","getFailed","signUp","user","userSignupRequest","post","token","localStorage","setItem","tokens","access","userSignupSuccess","error","errorMessage","message","userSignupFailure","position","POSITION","TOP_RIGHT","loadUser","refreshToken","loadUserRequest","signIn","userLoginRequest","userLoginSuccess","userLoginFailure","logOut","removeItem","userLogout"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB,C,CACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACF,OAAO,CAACG,OAAR,EAAD,CAAR;AACE,WAAOL,GAAG,CAACM,GAAJ,CAAQ,WAAR,EACFC,IADE,CACGC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,EAIFF,IAJE,CAIGE,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,MAAAA,QAAQ,CAACF,OAAO,CAACU,UAAR,CAAmBJ,QAAnB,CAAD,CAAR;AACH,KAPE,EAQFK,KARE,CAQIC,GAAG,IAAI;AACZV,MAAAA,QAAQ,CAACF,OAAO,CAACa,SAAR,CAAkBD,GAAlB,CAAD,CAAR;AACD,KAVE,CAAP;AAWH,GAbD;AAcH,CAfQ,C,CAgBT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,OAAO,MAAME,MAAM,GAAIC,IAAD,IAAU;AAC9B,SAAQb,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACF,OAAO,CAACgB,iBAAR,EAAD,CAAR;AACAlB,IAAAA,GAAG,CACAmB,IADH,CACS,kBADT,EAC4BF,IAD5B,EAEGV,IAFH,CAESa,KAAD,IAAW;AACfC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAAK,CAACX,IAAN,CAAWc,MAAX,CAAkBC,MAAlB,CAAyBJ,KAAvD;AACAhB,MAAAA,QAAQ,CAACF,OAAO,CAACuB,iBAAR,CAA0BL,KAA1B,CAAD,CAAR;AACD,KALH,EAMGP,KANH,CAMUa,KAAD,IAAW;AAChB,YAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACAxB,MAAAA,QAAQ,CAACF,OAAO,CAAC2B,iBAAR,CAA0BF,YAA1B,CAAD,CAAR;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACAzB,MAAAA,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EAA2B;AACzBE,QAAAA,QAAQ,EAAE7B,KAAK,CAAC8B,QAAN,CAAeC;AADA,OAA3B;AAGD,KAbH;AAcD,GAhBD;AAiBD,CAlBM;AAqBP,OAAO,MAAMC,QAAQ,GAAIC,YAAD,IAAkB;AACxC,SAAO9B,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACF,OAAO,CAACiC,eAAR,EAAD,CAAR;AACEnC,IAAAA,GAAG,CAACmB,IAAJ,CAAS,yBAAT,EAAoCe,YAApC,EACK3B,IADL,CACUa,KAAK,IAAI;AACbV,MAAAA,OAAO,CAACC,GAAR,CAAYuB,YAAZ;AACDb,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAAK,CAACX,IAAN,CAAWe,MAAX,CAAkBJ,KAAhD,EAFc,CAIf;AACA;AACU;AACA;AACA;AACA;AACA;AACA;AACA;AACT,KAdL;AAeH,GAjBD;AAkBD,CAnBM,C,CAoBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA,OAAO,MAAMgB,MAAM,GAAInB,IAAD,IAAU;AAC9B,SAAQb,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACF,OAAO,CAACmC,gBAAR,EAAD,CAAR;AACArC,IAAAA,GAAG,CACAmB,IADH,CACS,eADT,EACyBF,IADzB,EAEGV,IAFH,CAESa,KAAD,IAAW;AACf;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAAK,CAACX,IAAN,CAAWc,MAAX,CAAkBC,MAAlB,CAAyBJ,KAAvD;AACAhB,MAAAA,QAAQ,CAACF,OAAO,CAACoC,gBAAR,CAAyBlB,KAAzB,CAAD,CAAR;AAED,KAPH,EAQGP,KARH,CAQUa,KAAD,IAAW;AAChB,YAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACAxB,MAAAA,QAAQ,CAACF,OAAO,CAACqC,gBAAR,CAAyBZ,YAAzB,CAAD,CAAR;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACAzB,MAAAA,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EAA2B;AACzBE,QAAAA,QAAQ,EAAE7B,KAAK,CAAC8B,QAAN,CAAeC;AADA,OAA3B;AAGD,KAfH;AAgBD,GAlBD;AAmBD,CApBM;AAsBP,OAAO,MAAMQ,MAAM,GAAG,MAAM;AAC1BnB,EAAAA,YAAY,CAACoB,UAAb,CAAwB,OAAxB,EAD0B,CAE1B;;AACApB,EAAAA,YAAY,CAACoB,UAAb,CAAwB,OAAxB;AACA,SAAQrC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACF,OAAO,CAACwC,UAAR,EAAD,CAAR;AACD,GAFD;AAGD,CAPM","sourcesContent":["import api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\";\n//  import jwtDecode from \"jwt-decode\";\n\n\n// export function fetchData() {\n//   const thunk = async function thunk(dispatch) {\n    \n//       try {\n//           dispatch(actions.getData());\n//           const body = await api.fecth(\"/v1/users\")\n//           console.log(body.data)\n//           const res = await body.json();\n//           console.log(\"Thunk\", res);\n          \n//           dispatch(actions.getSuccess(res));\n//       }\n//       catch(err) {\n//           dispatch(actions.getFailed(err));\n//       }\n//   }\n//   return thunk;\n//   }\n\n  export const fetchData = () => {\n    return (dispatch) => {\n      dispatch(actions.getData());\n        return api.get(\"/v1/users\")\n            .then(response => {\n                return response.data\n            })\n            .then(data => {\n                console.log(data);\n                dispatch(actions.getSuccess(response));\n            })\n            .catch(err => {\n              dispatch(actions.getFailed(err));\n            });\n    };\n};\n// export function fetchUsers() {\n//   return dispatch => {\n//       dispatch(actions.startLoading());\n//       fetch('https://localhost:5001/v1/users')\n//           .then(res => res.json())\n//           .then(data => {\n//               data = data.filter(user => user.id < 4);\n//               data.forEach(user => {\n//                   user.email = '';\n//                   user.name = '';\n//                   user.role = '';\n//               }\n//               )\n//               .then(data => {\n//                   dispatch(actions.updateUserData(data));\n//               }).catch(error => {\n//                   dispatch(actions.updateUserError(error));\n//               })\n//           });\n//   };\n// };\n\n\n\n\n\n\nexport const signUp = (user) => {\n  return (dispatch) => {\n    dispatch(actions.userSignupRequest());\n    api\n      .post(`v1/auth/register`, user)\n      .then((token) => {\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\n        dispatch(actions.userSignupSuccess(token));\n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.userSignupFailure(errorMessage));\n        console.log(error);\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\n\nexport const loadUser = (refreshToken) => {\n  return dispatch => {\n    dispatch(actions.loadUserRequest());\n      api.post('/v1/auth/refresh-tokens', refreshToken)\n          .then(token => {\n            console.log(refreshToken)\n           localStorage.setItem(\"token\", token.data.access.token);\n\n          //  const { sub: userId } = jwtDecode(token.data.access.token);\n          //         console.log(userId);\n                    // const loadUserDetails = (userId) => {\n                    //   api.get('/v1/users'`${userId}`).then((user) => {\n                    //     console.log(user.data);\n                    //     dispatch(actions.loadUserSuccess(user.data));\n                    //   });\n                    // };\n                    // loadUserDetails(userId);\n          });\n  }\n}\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n\n\n\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n\n\n// export const fetchUsers = () => {\n//   return dispatch => {\n//     dispatch(actions.fetchUsersRequest);\n//     api\n//       .get(\"/v1/users\")\n//       .then(response => {\n//         const users = response.data;\n//         console.log(users);\n//         dispatch(actions.fetchUsersSucess(users));\n//       })\n//       .catch(error => {\n//         const errorMsg = error.message;\n//         dispatch(actions.fetchUsersFailure(errorMsg));\n//       });\n//   };\n// };\n\n\n\n\n\n\n\n\n\nexport const signIn = (user) => {\n  return (dispatch) => {\n    dispatch(actions.userLoginRequest());\n    api\n      .post(`v1/auth/login`, user)\n      .then((token) => {\n        // console.log(token)\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\n        dispatch(actions.userLoginSuccess(token));\n       \n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.userLoginFailure(errorMessage));\n        console.log(error);\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\nexport const logOut = () => {\n  localStorage.removeItem(\"token\");\n  // localStorage.removeItem(\"refreshToken\");\n  localStorage.removeItem(\"redux\");\n  return (dispatch) => {\n    dispatch(actions.userLogout());\n  };\n};\n"]},"metadata":{},"sourceType":"module"}