{"ast":null,"code":"import { GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILURE, // GET_USER_BYID_REQUEST,\n// GET_USER_BYID_SUCCESS,\n// GET_USER_BYID_FAILURE,\nDELETE_USER_BYID_REQUEST, DELETE_USER_BYID_SUCCESS, DELETE_USER_BYID_FAILURE } from \"./usersActiontypes\";\nimport api from \"../services/api\"; //   const axios = require(\"axios\");\n//   export function createUser(data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: CREATE_USER_REQUEST });\n//       axios\n//         .post(`${api_url}/api/user`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: CREATE_USER_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: CREATE_USER_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n\nexport const getUsers = function () {\n  let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return async dispatch => {\n    dispatch({\n      type: GET_USER_REQUEST\n    }); // const user1 = useSelector((state) => state.user);\n    // console.log(\"users-data\", name1)\n\n    try {\n      if (localStorage.getItem(\"token\")) {\n        const response = await api.get(`/v1/users${query}`);\n        const res = response.data;\n        dispatch({\n          type: GET_USER_SUCCESS,\n          payload: res\n        });\n      } // users${name}\n      // console.log(\"users\", response);\n\n    } catch (error) {\n      // console.log(error.response);\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        var _response$data;\n\n        dispatch({\n          type: GET_USER_FAILURE,\n          payload: response.data\n        });\n        alert((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message);\n      }\n    }\n  };\n}; //   export function getUsers() {\n//    return (dispatch) => {\n//       dispatch({ type: GET_USER_REQUEST });\n//       try {\n//         if (localStorage.getItem(\"token\")) {\n//           const response = api.get(`/v1/users`);\n//           const res = response.data;\n//           dispatch({\n//             type: GET_USER_SUCCESS,\n//             payload: res.data,\n//           });\n//         }\n//         // users${name}\n//         // console.log(\"users\", response);\n//       } catch (error) {\n//         // console.log(error.response);\n//         const { response } = error;\n//           console.log(error.response.status) \n//      console.log(error.response.data.error) \n//         //   console.log(\"err\", response);\n//           if (error.response.status===401) {\n//             dispatch({\n//               type: GET_USER_FAILURE,\n//               payload: response?.data,\n//             });\n//           }\n//         // toast.error(error.response?.data?.message, {\n//         //   position: toast.POSITION.CENTER_RIGHT,\n//         // });\n//     //   api\n//     //     .get('/v1/users')\n//     //     .then(function (response) {\n//     //         console.log(\"sachin\")\n//     //         localStorage.setItem(\"token\", response.data.tokens.access.token);\n//     //       console.log(\"res =>\", response.data.tokens);\n//     //       dispatch({\n//     //         type: GET_USER_SUCCESS,\n//     //         payload: response.data,\n//     //       });\n//     //     })\n//     //     .catch(function (error) {\n//     //       const { response } = error;\n//     //       console.log(error.response.status) \n//     //  console.log(error.response.data.error) \n//     //     //   console.log(\"err\", response);\n//     //       if (error.response.status===401) {\n//     //         dispatch({\n//     //           type: GET_USER_FAILURE,\n//     //           payload: response?.data,\n//     //         });\n//     //       }\n//     //     });\n//     };\n//   }\n// }\n//   export function getUserById(id) {\n//     return (dispatch) => {\n//       dispatch({ type: GET_USER_BYID_REQUEST });\n//       api\n//         .get(`/v1/users/${id}`)\n//         .then(function (response) {\n//             localStorage.setItem(\"token\", response.data.tokens.access.token);\n//           console.log(\"res =>\", response.data.tokens);\n//           dispatch({\n//             type: GET_USER_BYID_SUCCESS,\n//             payload: response.data.tokens,\n//           });\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: GET_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//           }\n//         });\n//     };\n//   }\n\nexport function deleteUserById(id) {\n  return dispatch => {\n    dispatch({\n      type: DELETE_USER_BYID_REQUEST\n    });\n    api.delete(`/v1/users/${id}`).then(function (res) {\n      console.log(\"res =>\", res.data);\n      dispatch({\n        type: DELETE_USER_BYID_SUCCESS,\n        payload: id\n      });\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        var _response$data2;\n\n        dispatch({\n          type: DELETE_USER_BYID_FAILURE,\n          payload: response.data\n        });\n        alert((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.message);\n      }\n    });\n  };\n} //   export function updateUserById(id, data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: UPDATE_USER_BYID_REQUEST });\n//       axios\n//         .put(`${api_url}/api/user/${id}`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: UPDATE_USER_BYID_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: UPDATE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n//   export function deleteUserById(id) {\n//     return (dispatch) => {\n//       dispatch({ type: DELETE_USER_BYID_REQUEST });\n//       axios\n//         .delete(`${api_url}/api/user/${id}`)\n//         .then(function (res) {\n//           console.log(\"res =>\", res.data);\n//           dispatch({\n//             type: DELETE_USER_BYID_SUCCESS,\n//             payload: id,\n//           });\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: DELETE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/user.js"],"names":["GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","DELETE_USER_BYID_REQUEST","DELETE_USER_BYID_SUCCESS","DELETE_USER_BYID_FAILURE","api","getUsers","query","dispatch","type","localStorage","getItem","response","get","res","data","payload","error","console","log","undefined","alert","message","deleteUserById","id","delete","then","catch"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,EAII;AACA;AACA;AAEAC,wBARJ,EASEC,wBATF,EAUEC,wBAVF,QAWS,oBAXT;AAYE,OAAOC,GAAP,MAAiB,iBAAjB,C,CACF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GACnB;AAAA,MAACC,KAAD,uEAAS,EAAT;AAAA,SACA,MAAOC,QAAP,IAAoB;AAClBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR,CADkB,CAElB;AACA;;AAEA,QAAI;AACF,UAAIW,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC,cAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAS,YAAWN,KAAM,EAA1B,CAAvB;AACA,cAAMO,GAAG,GAAGF,QAAQ,CAACG,IAArB;AACAP,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAET,gBADC;AAEPgB,UAAAA,OAAO,EAAEF;AAFF,SAAD,CAAR;AAID,OARC,CASF;AACA;;AACD,KAXD,CAWE,OAAOG,KAAP,EAAc;AACd;AACA,YAAM;AAAEL,QAAAA;AAAF,UAAeK,KAArB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,QAAnB;;AACA,UAAIA,QAAQ,KAAKQ,SAAjB,EAA4B;AAAA;;AAC1BZ,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAER,gBADC;AAEPe,UAAAA,OAAO,EAAEJ,QAAQ,CAACG;AAFX,SAAD,CAAR;AAIAM,QAAAA,KAAK,mBAACT,QAAQ,CAACG,IAAV,mDAAC,eAAeO,OAAhB,CAAL;AACD;AACN;AACF,GA7BD;AAAA,CADK,C,CAiCP;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,OAAO,SAASC,cAAT,CAAwBC,EAAxB,EAA4B;AACjC,SAAQhB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACAG,IAAAA,GAAG,CACAoB,MADH,CACW,aAAYD,EAAG,EAD1B,EAEGE,IAFH,CAEQ,UAAUZ,GAAV,EAAe;AACnBI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,GAAG,CAACC,IAA1B;AACAP,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,wBADC;AAEPa,QAAAA,OAAO,EAAEQ;AAFF,OAAD,CAAR;AAID,KARH,EASGG,KATH,CASS,UAAUV,KAAV,EAAiB;AACtB,YAAM;AAAEL,QAAAA;AAAF,UAAeK,KAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,QAAnB;;AACA,UAAIA,QAAQ,KAAKQ,SAAjB,EAA4B;AAAA;;AAC1BZ,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEL,wBADC;AAEPY,UAAAA,OAAO,EAAEJ,QAAQ,CAACG;AAFX,SAAD,CAAR;AAIAM,QAAAA,KAAK,oBAACT,QAAQ,CAACG,IAAV,oDAAC,gBAAeO,OAAhB,CAAL;AACD;AACF,KAnBH;AAoBD,GAtBD;AAuBD,C,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    GET_USER_FAILURE,\n    // GET_USER_BYID_REQUEST,\n    // GET_USER_BYID_SUCCESS,\n    // GET_USER_BYID_FAILURE,\n    \n    DELETE_USER_BYID_REQUEST,\n  DELETE_USER_BYID_SUCCESS,\n  DELETE_USER_BYID_FAILURE,\n  } from \"./usersActiontypes\";\n  import api  from \"../services/api\";\n//   const axios = require(\"axios\");\n  \n//   export function createUser(data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: CREATE_USER_REQUEST });\n//       axios\n//         .post(`${api_url}/api/user`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: CREATE_USER_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: CREATE_USER_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n  \nexport const getUsers =\n  (query = \"\") =>\n  async (dispatch) => {\n    dispatch({ type: GET_USER_REQUEST });\n    // const user1 = useSelector((state) => state.user);\n    // console.log(\"users-data\", name1)\n\n    try {\n      if (localStorage.getItem(\"token\")) {\n        const response = await api.get(`/v1/users${query}`);\n        const res = response.data;\n        dispatch({\n          type: GET_USER_SUCCESS,\n          payload: res,\n        });\n      }\n      // users${name}\n      // console.log(\"users\", response);\n    } catch (error) {\n      // console.log(error.response);\n      const { response } = error;\n          console.log(\"err\", response);\n          if (response !== undefined) {\n            dispatch({\n              type: GET_USER_FAILURE,\n              payload: response.data,\n            });\n            alert(response.data?.message);\n          }\n    }\n  };\n\n\n//   export function getUsers() {\n  \n//    return (dispatch) => {\n       \n//       dispatch({ type: GET_USER_REQUEST });\n        \n//       try {\n//         if (localStorage.getItem(\"token\")) {\n//           const response = api.get(`/v1/users`);\n//           const res = response.data;\n//           dispatch({\n//             type: GET_USER_SUCCESS,\n//             payload: res.data,\n//           });\n//         }\n//         // users${name}\n//         // console.log(\"users\", response);\n//       } catch (error) {\n//         // console.log(error.response);\n//         const { response } = error;\n//           console.log(error.response.status) \n//      console.log(error.response.data.error) \n//         //   console.log(\"err\", response);\n//           if (error.response.status===401) {\n//             dispatch({\n//               type: GET_USER_FAILURE,\n//               payload: response?.data,\n//             });\n//           }\n//         // toast.error(error.response?.data?.message, {\n//         //   position: toast.POSITION.CENTER_RIGHT,\n//         // });\n//     //   api\n//     //     .get('/v1/users')\n       \n//     //     .then(function (response) {\n//     //         console.log(\"sachin\")\n//     //         localStorage.setItem(\"token\", response.data.tokens.access.token);\n//     //       console.log(\"res =>\", response.data.tokens);\n          \n//     //       dispatch({\n//     //         type: GET_USER_SUCCESS,\n//     //         payload: response.data,\n//     //       });\n//     //     })\n//     //     .catch(function (error) {\n//     //       const { response } = error;\n//     //       console.log(error.response.status) \n//     //  console.log(error.response.data.error) \n//     //     //   console.log(\"err\", response);\n//     //       if (error.response.status===401) {\n//     //         dispatch({\n//     //           type: GET_USER_FAILURE,\n//     //           payload: response?.data,\n//     //         });\n//     //       }\n//     //     });\n//     };\n//   }\n// }\n  \n//   export function getUserById(id) {\n//     return (dispatch) => {\n//       dispatch({ type: GET_USER_BYID_REQUEST });\n//       api\n//         .get(`/v1/users/${id}`)\n//         .then(function (response) {\n//             localStorage.setItem(\"token\", response.data.tokens.access.token);\n//           console.log(\"res =>\", response.data.tokens);\n//           dispatch({\n//             type: GET_USER_BYID_SUCCESS,\n//             payload: response.data.tokens,\n//           });\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: GET_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//           }\n//         });\n//     };\n//   }\n\n  export function deleteUserById(id) {\n    return (dispatch) => {\n      dispatch({ type: DELETE_USER_BYID_REQUEST });\n      api\n        .delete(`/v1/users/${id}`)\n        .then(function (res) {\n          console.log(\"res =>\", res.data);\n          dispatch({\n            type: DELETE_USER_BYID_SUCCESS,\n            payload: id,\n          });\n        })\n        .catch(function (error) {\n          const { response } = error;\n          console.log(\"err\", response);\n          if (response !== undefined) {\n            dispatch({\n              type: DELETE_USER_BYID_FAILURE,\n              payload: response.data,\n            });\n            alert(response.data?.message);\n          }\n        });\n    };\n  }\n  \n//   export function updateUserById(id, data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: UPDATE_USER_BYID_REQUEST });\n//       axios\n//         .put(`${api_url}/api/user/${id}`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: UPDATE_USER_BYID_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: UPDATE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n  \n//   export function deleteUserById(id) {\n//     return (dispatch) => {\n//       dispatch({ type: DELETE_USER_BYID_REQUEST });\n//       axios\n//         .delete(`${api_url}/api/user/${id}`)\n//         .then(function (res) {\n//           console.log(\"res =>\", res.data);\n//           dispatch({\n//             type: DELETE_USER_BYID_SUCCESS,\n//             payload: id,\n//           });\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: DELETE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }"]},"metadata":{},"sourceType":"module"}