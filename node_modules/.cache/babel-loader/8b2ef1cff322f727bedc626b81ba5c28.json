{"ast":null,"code":"import history from '../history';\nimport api from \"../services/api\";\nexport const RECEIVE_ARTICLES = 'GET_ARTICLES';\nexport const ADD_ARTICLE = 'ADD_ARTICLE';\nexport const RECEIVE_ARTICLE = 'RECEIVE_ARTICLE';\nexport const REMOVE_ARTICLE = 'REMOVE_ARTICLE';\nexport const UPDATE_ARTICLE = 'UPDATE_ARTICLE';\nexport const REPLACE_ARTICLE = 'REPLACE_ARTICLE';\nexport const getArticles = () => {\n  return dispatch => {\n    return api.get(`/v1/users`);\n    console.log(\"sachin\").then(response => {\n      dispatch({\n        type: RECEIVE_ARTICLES,\n        articles: response.data\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n};\nexport const addArticle = _ref => {\n  let {\n    name,\n    email,\n    password,\n    role\n  } = _ref;\n  return dispatch => {\n    return api.post(`/v1/users`, {\n      name,\n      email,\n      password,\n      role\n    }).then(response => {\n      const data = response.data;\n      dispatch({\n        type: ADD_ARTICLE,\n        payload: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          role: data.role\n        }\n      });\n    }).then(() => {\n      history.push(\"/articles\");\n    }).catch(error => {\n      throw error;\n    });\n  };\n};\nexport const getArticle = id => {\n  return dispatch => {\n    return api.get(`/v1/users/${id}`).then(response => {\n      dispatch({\n        type: RECEIVE_ARTICLE,\n        article: response.data\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n};\nexport const deleteArticle = id => {\n  return dispatch => {\n    return api.delete(`/v1/users/${id}`).then(response => {\n      dispatch({\n        type: REMOVE_ARTICLE,\n        payload: {\n          id\n        }\n      });\n    }).then(() => {\n      history.push(\"/articles\");\n    }).catch(error => {\n      throw error;\n    });\n  };\n};\nexport const updateArticle = article => {\n  const articleId = article.id;\n  return dispatch => {\n    return api.patch(`/v1/users/${article.id}`, {\n      name: article.name,\n      email: article.email,\n      password: article.password,\n      role: article.role\n    }).then(response => {\n      const data = response.data;\n      dispatch({\n        type: UPDATE_ARTICLE,\n        payload: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          role: data.role\n        }\n      });\n      dispatch({\n        type: REPLACE_ARTICLE,\n        payload: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          role: data.role\n        }\n      });\n    }).then(() => {\n      history.push(`/articles/${articleId}`);\n    }).catch(error => {\n      throw error;\n    });\n  };\n};","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/user.js"],"names":["history","api","RECEIVE_ARTICLES","ADD_ARTICLE","RECEIVE_ARTICLE","REMOVE_ARTICLE","UPDATE_ARTICLE","REPLACE_ARTICLE","getArticles","dispatch","get","console","log","then","response","type","articles","data","catch","error","addArticle","name","email","password","role","post","payload","id","push","getArticle","article","deleteArticle","delete","updateArticle","articleId","patch"],"mappings":"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","sourcesContent":["import history from '../history';\nimport api from \"../services/api\";\nexport const RECEIVE_ARTICLES = 'GET_ARTICLES';\nexport const ADD_ARTICLE = 'ADD_ARTICLE';\nexport const RECEIVE_ARTICLE = 'RECEIVE_ARTICLE';\nexport const REMOVE_ARTICLE = 'REMOVE_ARTICLE';\nexport const UPDATE_ARTICLE = 'UPDATE_ARTICLE';\nexport const REPLACE_ARTICLE = 'REPLACE_ARTICLE';\n\n\n\nexport const getArticles = () => {\n  return (dispatch) => {\n    return api.get(`/v1/users`)\n    console.log(\"sachin\")\n      .then(response => {\n        dispatch({type: RECEIVE_ARTICLES, articles: response.data})\n      })\n      .catch(error => { throw(error); });\n  };\n};\n\nexport const addArticle = ({ name, email, password, role }) => {\n  return (dispatch) => {\n    return api.post(`/v1/users`, {name, email, password, role})\n      .then(response => {\n        const data = response.data;\n        dispatch({type: ADD_ARTICLE, payload: {id: data.id, name: data.name, email: data.email, password: data.password, role: data.role}})\n      })\n      .then(() => {\n        history.push(\"/articles\")\n      })\n      .catch(error => { throw(error) });\n  };\n};\n\nexport const getArticle = (id) => {\n  return (dispatch) => {\n    return api.get(`/v1/users/${id}`)\n      .then(response => {\n        dispatch({type: RECEIVE_ARTICLE, article: response.data});\n      })\n      .catch(error => { \n        throw(error); \n      });\n  };\n};\n\nexport const deleteArticle = (id) => {\n  return (dispatch) => {\n    return api.delete(`/v1/users/${id}`)\n      .then(response => {\n        dispatch({type: REMOVE_ARTICLE, payload: {id}})\n      })\n      .then(() => {\n        history.push(\"/articles\")\n      })\n      .catch(error => {\n        throw(error);\n      });\n  };\n};\n\nexport const updateArticle = (article) => {\n  const articleId = article.id;\n  return (dispatch) => {\n    return api.patch(`/v1/users/${article.id}`, {name: article.name, email: article.email, password: article.password, role: article.role})\n      .then(response => {\n        const data = response.data;\n        dispatch({type: UPDATE_ARTICLE, payload: {id: data.id, name: data.name, email: data.email, password: data.password, role: data.role}})\n        dispatch({type: REPLACE_ARTICLE, payload: {id: data.id, name: data.name, email: data.email, password: data.password, role: data.role}})\n      })\n      .then(() => {\n        history.push(`/articles/${articleId}`)\n      })\n      .catch(error => { throw(error) });\n  };\n};"]},"metadata":{},"sourceType":"module"}