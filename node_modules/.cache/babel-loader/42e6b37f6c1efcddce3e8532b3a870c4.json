{"ast":null,"code":"import { GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILURE, GET_USER_BYID_REQUEST, GET_USER_BYID_SUCCESS, GET_USER_BYID_FAILURE, DELETE_USER_BYID_REQUEST, DELETE_USER_BYID_SUCCESS, DELETE_USER_BYID_FAILURE } from \"./usersActiontypes\";\nimport api from \"../services/api\"; //   const axios = require(\"axios\");\n//   export function createUser(data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: CREATE_USER_REQUEST });\n//       axios\n//         .post(`${api_url}/api/user`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: CREATE_USER_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: CREATE_USER_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n\nexport function getUsers(user) {\n  return dispatch => {\n    dispatch({\n      type: GET_USER_REQUEST\n    });\n    api.get('/v1/users', user).then(function (res) {\n      console.log(\"res =>\", res.data);\n      this.res.authenticated = true;\n      dispatch({\n        type: GET_USER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(error.response.status);\n      console.log(error.response.data.error); //   console.log(\"err\", response);\n\n      if (error.response.status === 401) {\n        dispatch({\n          type: GET_USER_FAILURE,\n          payload: response === null || response === void 0 ? void 0 : response.data\n        });\n      }\n    });\n  };\n}\nexport function getUserById(id) {\n  return dispatch => {\n    dispatch({\n      type: GET_USER_BYID_REQUEST\n    });\n    api.get(`/v1/users/:userId`).then(function (res) {\n      localStorage.setItem(\"token\", res.data.tokens.access.token);\n      console.log(\"res =>\", res.data);\n      dispatch({\n        type: GET_USER_BYID_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        dispatch({\n          type: GET_USER_BYID_FAILURE,\n          payload: response.data\n        });\n      }\n    });\n  };\n}\nexport function deleteUserById(id) {\n  return dispatch => {\n    dispatch({\n      type: DELETE_USER_BYID_REQUEST\n    });\n    api.delete(`/v1/users/:userId`).then(function (res) {\n      console.log(\"res =>\", res.data);\n      dispatch({\n        type: DELETE_USER_BYID_SUCCESS,\n        payload: id\n      });\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        var _response$data;\n\n        dispatch({\n          type: DELETE_USER_BYID_FAILURE,\n          payload: response.data\n        });\n        alert((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message);\n      }\n    });\n  };\n} //   export function updateUserById(id, data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: UPDATE_USER_BYID_REQUEST });\n//       axios\n//         .put(`${api_url}/api/user/${id}`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: UPDATE_USER_BYID_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: UPDATE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n//   export function deleteUserById(id) {\n//     return (dispatch) => {\n//       dispatch({ type: DELETE_USER_BYID_REQUEST });\n//       axios\n//         .delete(`${api_url}/api/user/${id}`)\n//         .then(function (res) {\n//           console.log(\"res =>\", res.data);\n//           dispatch({\n//             type: DELETE_USER_BYID_SUCCESS,\n//             payload: id,\n//           });\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: DELETE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/user.js"],"names":["GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","GET_USER_BYID_REQUEST","GET_USER_BYID_SUCCESS","GET_USER_BYID_FAILURE","DELETE_USER_BYID_REQUEST","DELETE_USER_BYID_SUCCESS","DELETE_USER_BYID_FAILURE","api","getUsers","user","dispatch","type","get","then","res","console","log","data","authenticated","payload","catch","error","response","status","getUserById","id","localStorage","setItem","tokens","access","token","undefined","deleteUserById","delete","alert","message"],"mappings":"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","sourcesContent":["import {\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    GET_USER_FAILURE,\n    GET_USER_BYID_REQUEST,\n    GET_USER_BYID_SUCCESS,\n    GET_USER_BYID_FAILURE,\n    \n    DELETE_USER_BYID_REQUEST,\n  DELETE_USER_BYID_SUCCESS,\n  DELETE_USER_BYID_FAILURE,\n  } from \"./usersActiontypes\";\n  import api  from \"../services/api\";\n//   const axios = require(\"axios\");\n  \n//   export function createUser(data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: CREATE_USER_REQUEST });\n//       axios\n//         .post(`${api_url}/api/user`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: CREATE_USER_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: CREATE_USER_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n  \n  export function getUsers(user) {\n    return (dispatch) => {\n      dispatch({ type: GET_USER_REQUEST });\n      api\n        .get('/v1/users',user)\n        .then(function (res) {\n          console.log(\"res =>\", res.data);\n          this.res.authenticated = true;\n          dispatch({\n            type: GET_USER_SUCCESS,\n            payload: res.data,\n          });\n        })\n        .catch(function (error) {\n          const { response } = error;\n          console.log(error.response.status) \n     console.log(error.response.data.error) \n        //   console.log(\"err\", response);\n          if (error.response.status===401) {\n            dispatch({\n              type: GET_USER_FAILURE,\n              payload: response?.data,\n            });\n          }\n        });\n    };\n  }\n  \n  export function getUserById(id) {\n    return (dispatch) => {\n      dispatch({ type: GET_USER_BYID_REQUEST });\n      api\n        .get(`/v1/users/:userId`)\n        .then(function (res) {\n            localStorage.setItem(\"token\", res.data.tokens.access.token);\n          console.log(\"res =>\", res.data);\n          dispatch({\n            type: GET_USER_BYID_SUCCESS,\n            payload: res.data,\n          });\n        })\n        .catch(function (error) {\n          const { response } = error;\n          console.log(\"err\", response);\n          if (response !== undefined) {\n            dispatch({\n              type: GET_USER_BYID_FAILURE,\n              payload: response.data,\n            });\n          }\n        });\n    };\n  }\n\n  export function deleteUserById(id) {\n    return (dispatch) => {\n      dispatch({ type: DELETE_USER_BYID_REQUEST });\n      api\n        .delete(`/v1/users/:userId`)\n        .then(function (res) {\n          console.log(\"res =>\", res.data);\n          dispatch({\n            type: DELETE_USER_BYID_SUCCESS,\n            payload: id,\n          });\n        })\n        .catch(function (error) {\n          const { response } = error;\n          console.log(\"err\", response);\n          if (response !== undefined) {\n            dispatch({\n              type: DELETE_USER_BYID_FAILURE,\n              payload: response.data,\n            });\n            alert(response.data?.message);\n          }\n        });\n    };\n  }\n  \n//   export function updateUserById(id, data, history) {\n//     return (dispatch) => {\n//       dispatch({ type: UPDATE_USER_BYID_REQUEST });\n//       axios\n//         .put(`${api_url}/api/user/${id}`, data)\n//         .then(function (res) {\n//           console.log(\"res=>\", res.data);\n//           setTimeout(() => {\n//             dispatch({\n//               type: UPDATE_USER_BYID_SUCCESS,\n//               payload: res.data,\n//             });\n//             history.push(\"/\");\n//           }, 1000);\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: UPDATE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }\n  \n//   export function deleteUserById(id) {\n//     return (dispatch) => {\n//       dispatch({ type: DELETE_USER_BYID_REQUEST });\n//       axios\n//         .delete(`${api_url}/api/user/${id}`)\n//         .then(function (res) {\n//           console.log(\"res =>\", res.data);\n//           dispatch({\n//             type: DELETE_USER_BYID_SUCCESS,\n//             payload: id,\n//           });\n//         })\n//         .catch(function (error) {\n//           const { response } = error;\n//           console.log(\"err\", response);\n//           if (response !== undefined) {\n//             dispatch({\n//               type: DELETE_USER_BYID_FAILURE,\n//               payload: response.data,\n//             });\n//             alert(response.data?.message);\n//           }\n//         });\n//     };\n//   }"]},"metadata":{},"sourceType":"module"}