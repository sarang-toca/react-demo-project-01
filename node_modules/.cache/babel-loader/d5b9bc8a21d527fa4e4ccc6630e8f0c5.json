{"ast":null,"code":"import { ActionTypes } from \"../actions/action-types\"; /// this function takes the current state of the application and \n/// an action object and returns  a new state of the application\n\nconst initialState = {\n  results: [],\n  loading: false,\n  setLoading: false,\n  pageNumber: 0\n};\nexport const userReducers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.GET_USERS:\n      return {\n        results: action.payload.results,\n        ...state.results\n      };\n    // return {\n    //     ...state,\n    //     /// update the copy with the new value\n    //     results: action.payload, loading: false\n    //     // results: {action.payload, ...state.results},\n    // }\n\n    case ActionTypes.GET_USER:\n      return {\n        results: action.payload,\n        ...state.results\n      };\n    // case ActionTypes.ADD_USER:\n    //     return { ...state, user: action.payload }\n\n    case ActionTypes.UPDATE_USER:\n      return { ...state.results,\n        results: action.payload.data\n      };\n\n    case ActionTypes.DELETE_USER:\n      return { ...state\n      };\n\n    default:\n      // otherwise return the existing state unchanged\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/reducers/reducer.js"],"names":["ActionTypes","initialState","results","loading","setLoading","pageNumber","userReducers","state","action","type","GET_USERS","payload","GET_USER","UPDATE_USER","data","DELETE_USER"],"mappings":"AAAA,SAASA,WAAT,QAA4B,yBAA5B,C,CACA;AACA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,UAAU,EAAE,KAHK;AAIjBC,EAAAA,UAAU,EAAE;AAJK,CAArB;AASA,OAAO,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAE1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,WAAW,CAACU,SAAjB;AAEI,aAAO;AAAER,QAAAA,OAAO,EAAEM,MAAM,CAACG,OAAP,CAAeT,OAA1B;AAAmC,WAAGK,KAAK,CAACL;AAA5C,OAAP;AACA;AAEA;AACA;AACA;AACA;AACA;;AACJ,SAAKF,WAAW,CAACY,QAAjB;AACI,aAAO;AAAEV,QAAAA,OAAO,EAAEM,MAAM,CAACG,OAAlB;AAA2B,WAAGJ,KAAK,CAACL;AAApC,OAAP;AACJ;AACA;;AACA,SAAKF,WAAW,CAACa,WAAjB;AACI,aAAO,EAAE,GAAGN,KAAK,CAACL,OAAX;AAAoBA,QAAAA,OAAO,EAAEM,MAAM,CAACG,OAAP,CAAeG;AAA5C,OAAP;;AACJ,SAAKd,WAAW,CAACe,WAAjB;AACI,aAAO,EAAE,GAAGR;AAAL,OAAP;;AACJ;AACI;AACA,aAAOA,KAAP;AArBR;AAuBH,CAzBM","sourcesContent":["import { ActionTypes } from \"../actions/action-types\";\r\n/// this function takes the current state of the application and \r\n/// an action object and returns  a new state of the application\r\nconst initialState = {\r\n    results: [],\r\n    loading: false,\r\n    setLoading: false,\r\n    pageNumber: 0,\r\n};\r\n\r\n\r\n\r\nexport const userReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.GET_USERS:\r\n            \r\n            return { results: action.payload.results, ...state.results}\r\n            // return {\r\n               \r\n            //     ...state,\r\n            //     /// update the copy with the new value\r\n            //     results: action.payload, loading: false\r\n            //     // results: {action.payload, ...state.results},\r\n            // }\r\n        case ActionTypes.GET_USER:\r\n            return { results: action.payload, ...state.results}\r\n        // case ActionTypes.ADD_USER:\r\n        //     return { ...state, user: action.payload }\r\n        case ActionTypes.UPDATE_USER:\r\n            return { ...state.results, results: action.payload.data }\r\n        case ActionTypes.DELETE_USER:\r\n            return { ...state }\r\n        default:\r\n            // otherwise return the existing state unchanged\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}