{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Dashboard.js\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport React from 'react';\nimport App from \"./App\"; // import UsersPage from \"./users/UsersPage\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  let {\n    auth: {\n      user\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"5rem\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Name: \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Email: \", user && user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"token: \", user && user.token]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"role: \", user && user.role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Dashboard;\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Dashboard); // import React, {useEffect}from 'react'\n// import {fetchData} from '../actions/authActions';\n// import { connect } from \"react-redux\";\n// import PropTypes from \"prop-types\";\n// function Dashboard({ isLoggedIn, user, fetchData } ) {\n//   useEffect(() =>{\n//     fetchData();\n//   }, [])\n//   return (\n//     <div>\n//       \t{/* <h1>Name: {user && user.name}</h1> */}\n//         <h1>Name: {fetchData && fetchData.name}</h1>\n//         <p>save</p>\n//     </div>\n//   )\n// }\n// const mapStateToProps = state => {\n//   console.log(\"I am state\", state);\n//   return {\n//     // auth: state.auth,\n//     isLoggedIn: state.auth.isLoggedIn,\n//      user: state.auth.user,\n//     // userComments: state.comments\n//     // data: state.auth.fetch\n//     fetchData: state.data\n//   };\n// };\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     fetchData: () => dispatch(fetchData()),\n//   };\n// };\n// Dashboard.propTypes = {\n// \tisLoggedIn: PropTypes.object.isRequired,\n//   user: PropTypes.object.isRequired,\n//   fetchData: PropTypes.object.isRequired,\n// };\n// // const mapStateToProps = (state) => ({\n// // \tauth: state.auth,\n// // });\n// export default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import {fetchData} from '../actions/authActions';\n// import PropTypes from \"prop-types\";\n// class Dashboard extends Component {\n//   // const Dashboard = ({ auth: { user } }) => {\n//     componentDidMount() {\n//         const { fetchData } = this.props\n//         fetchData();\n//     }\n//     render() {\n//         const mydata = this.props.data.data;\n//         mydata && console.log(\"Data .....<>\", mydata);\n//         // console.log(\"Data .....<>\", mydata);\n//         return(\n//             <div>\n//                 <h1></h1>    \n//             </div>\n//         );\n//     }\n// }\n// // Dashboard.propTypes = {\n// // \tauth: PropTypes.object.isRequired,\n// // };\n// // const mapStateToProps = (state) => ({\n// // \tauth: state.auth,\n// // });\n// Dashboard.propTypes = {\n// \tdata: PropTypes.object.isRequired,\n//   fetchData: PropTypes.object.isRequired\n// };\n// const mapStateToProps =(state)=> {\n//     return {\n//         data: state.fetch\n//     }\n// }\n// export default connect(mapStateToProps, {fetchData})(Dashboard);\n// // import React, {useState, useEffect} from \"react\";\n// // import { connect} from \"react-redux\";\n//  import PropTypes from \"prop-types\";\n// // import AddTutorial from \"./AddTutorial\";\n// // import TutorialsList from \"./TutorialsList\";\n// // import icon from \"../img/user.png\";\n//  import { fetchUsers } from \"actions/authActions\";\n// //  import { getFoo } from \"../../actions/FoosActions\";\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// // import * as actions from '../actions';\n// class Dashboard extends Component {\n//     componentDidMount() {\n//         const { fetchUsers } = this.props\n//         fetchUsers();\n//     }\n//     render() {\n//         const mydata = this.props.data.data;\n//         console.log(\"Data .....<>\", mydata);\n//         return(\n//             <div>\n//                 Main     \n//             </div>\n//         );\n//     }\n// }\n// Dashboard.propTypes = {\n// \tdata: PropTypes.object.isRequired,\n//   fetchUsers: PropTypes.object.isRequired\n// };\n// const mapStateToProps =(state)=> {\n//     return {\n//         data: state.fetch\n//     }\n// }\n// export default connect(mapStateToProps, {fetchUsers})(Dashboard);\n// class Dashboard extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       errors: {},\n//     };\n//   }\n//   componentDidMount() {\n//     this.props.fetchUsers();\n//   }\n//    render() {\n//     const { data } = this.props.foo;       \n//     return (\n//         <div className=\"container\">\n//             <h2>foo data fetched from API endpoint  : </h2>\n//             <ul>\n//               {data.map((foo) => {\n//                 return (\n//                     <li key={foo.name}>\n//                       {/* {foo.id} - {foo.name} */}\n//                     </li>\n//                 );\n//               })}\n//               </ul>\n//             </div>\n//     );\n//   }\n// }\n// Dashboard.propTypes = {\n// \tfetchUsers: PropTypes.object.isRequired,\n//   foo: PropTypes.object.isRequired,\n// };\n//   const mapStateToProps = (state) => ({\n//     foo: state.foo,\n//     errors: state.errors,\n//   });\n// export default connect(mapStateToProps, { fetchUsers })(Dashboard);\n// class Dashboard extends React.Component {\n//   constructor(props) {\n//       super(props);\n//       this.state = {\n//       users: [],\n//       usersAreDisplayed: true\n//       };\n//   }\n//   componentDidMount() {\n//       fetchUsers();\n//   }\n//   render(){\n//       return (\n//            <Dashboard users={this.state.users} /> \n//       )\n//   }\n// }\n// function mapStateToProps(state){\n//   return { users: state.users }\n// }\n// function mapDispatchToProps(dispatch){\n//   return {\n//     fetchUsers:() => dispatch(fetchUsers())\n//       // fetchUsers: payload => dispatch(updateUserData(payload)),\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n// const Dashboard = ({ auth: { user } }) => {\n// \treturn (\n// \t\t<div style={{ marginTop: \"5rem\", textAlign: \"center\" }}>\n// \t\t\t<h1>Name: {user && user.name}</h1>\n//             <h1>Email: {user && user.email}</h1>\n//             <h1>token: {user && user.token}</h1>\n//             <h1>role: {user && user.role}</h1>\n//             {/* <Listing/> */}\n//             {/* <AddTutorial/> */}\n// \t\t\t{/* <TutorialsList/> */}\n// \t\t</div>\n// \t);\n// };\n// Dashboard.propTypes = {\n// \tauth: PropTypes.object.isRequired,\n// };\n// const mapStateToProps = (state) => ({\n// \tauth: state.auth,\n// });\n// export default connect(mapStateToProps)(Dashboard);\n// // import React, { useState, useEffect } from \"react\";\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { Link } from \"react-router-dom\";\n// // import {\n// //   retrieveTutorials,\n// //    findTutorialsByName,\n// //   deleteAllTutorials,\n// // } from \"../actions/tutorials\";\n// // const TutorialsList = () => {\n// //   const [currentTutorial, setCurrentTutorial] = useState(null);\n// //   const [currentIndex, setCurrentIndex] = useState(-1);\n// //   const [searchName, setSearchName] = useState(\"\");\n// //   const tutorials = useSelector(state => state.tutorials);\n// //   const dispatch = useDispatch();\n// //   useEffect(() => {\n// //     dispatch(retrieveTutorials());\n// //   }, []);\n// //   const onChangeSearchTitle = e => {\n// //     const searchName = e.target.value;\n// //     setSearchName(searchName);\n// //   };\n// //   const refreshData = () => {\n// //     setCurrentTutorial(null);\n// //     setCurrentIndex(-1);\n// //   };\n// //   const setActiveTutorial = (tutorial, index) => {\n// //     setCurrentTutorial(tutorial);\n// //     setCurrentIndex(index);\n// //   };\n// //   const removeAllTutorials = () => {\n// //     dispatch(deleteAllTutorials())\n// //       .then(response => {\n// //         console.log(response);\n// //         refreshData();\n// //       })\n// //       .catch(e => {\n// //         console.log(e);\n// //       });\n// //   };\n// //   const findByName = () => {\n// //     refreshData();\n// //     dispatch(findTutorialsByName(searchName));\n// //   };\n// //   return (\n// //     <div className=\"list row\">\n// //     <div className=\"col-md-8\">\n// //       <div className=\"input-group mb-3\">\n// //         <input\n// //           type=\"text\"\n// //           className=\"form-control\"\n// //           placeholder=\"Search by title\"\n// //           value={searchName}\n// //           onChange={onChangeSearchTitle}\n// //         />\n// //         <div className=\"input-group-append\">\n// //           <button\n// //             className=\"btn btn-outline-secondary\"\n// //             type=\"button\"\n// //             onClick={findByName}\n// //           >\n// //             Search\n// //           </button>\n// //         </div>\n// //       </div>\n// //     </div>\n// //     <div className=\"col-md-6\">\n// //       <h4>Tutorials List</h4>\n// //       <ul className=\"list-group\">\n// //         {tutorials &&\n// //           tutorials.map((tutorial, index) => (\n// //             <li\n// //               className={\n// //                 \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n// //               }\n// //               onClick={() => setActiveTutorial(tutorial, index)}\n// //               key={index}\n// //             >\n// //               {tutorial.name}\n// //             </li>\n// //           ))}\n// //       </ul>\n// //       <button\n// //         className=\"m-3 btn btn-sm btn-danger\"\n// //         onClick={removeAllTutorials}\n// //       >\n// //         Remove All\n// //       </button>\n// //     </div>\n// //     <div className=\"col-md-6\">\n// //       {currentTutorial ? (\n// //         <div>\n// //           <h4>Tutorial</h4>\n// //           <div>\n// //             <label>\n// //               <strong>Name:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.name}\n// //           </div>\n// //           <div>\n// //             <label>\n// //               <strong>Email:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.email}\n// //           </div>\n// //           <div>\n// //             <label>\n// //               <strong>Status:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.published ? \"Published\" : \"Pending\"}\n// //           </div>\n// //           <Link\n// //             to={\"/users/\" + currentTutorial.id}\n// //             className=\"badge badge-warning\"\n// //           >\n// //             Edit\n// //           </Link>\n// //         </div>\n// //       ) : (\n// //         <div>\n// //           <br />\n// //           <p>Please click on a Tutorial...</p>\n// //         </div>\n// //       )}\n// //     </div>\n// //   </div>\n// //   );\n// // };\n// // export default TutorialsList;\n// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { createTutorial } from \"../actions/tutorials\";\n// const AddTutorial = () => {\n//   const initialTutorialState = {\n//     id: null,\n//     name: \"\",\n//     email: \"\",\n// \tpassword:\"\",\n// \trole:\"\",\n//     published: false\n//   };\n//   const [tutorial, setTutorial] = useState(initialTutorialState);\n//   const [submitted, setSubmitted] = useState(false);\n//   const dispatch = useDispatch();\n//   const handleInputChange = event => {\n//     const { name, value } = event.target;\n//     setTutorial({ ...tutorial, [name]: value });\n//   };\n//   const saveTutorial = () => {\n//     const { name, email, password, role } = tutorial;\n//     dispatch(createTutorial(name, email, password, role))\n//       .then(data => {\n//         setTutorial({\n//           id: data.id,\n//           name: data.name,\n//           email: data.email,\n// \t\t  password: data.password,\n// \t\t  role: data.role,\n//           published: data.published\n//         });\n//         setSubmitted(true);\n//         console.log(data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\n//   const newTutorial = () => {\n//     setTutorial(initialTutorialState);\n//     setSubmitted(false);\n//   };\n//   return (\n//     <div className=\"submit-form\">\n//     {submitted ? (\n//       <div>\n//         <h4>You submitted successfully!</h4>\n//         <button className=\"btn btn-success\" onClick={newTutorial}>\n//           Add\n//         </button>\n//       </div>\n//     ) : (\n//       <div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"name\">Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"name\"\n//             required\n//             value={tutorial.name}\n//             onChange={handleInputChange}\n//             name=\"name\"\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\">Email</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"email\"\n//             required\n//             value={tutorial.email}\n//             onChange={handleInputChange}\n//             name=\"email\"\n//           />\n//         </div>\n// \t\t<div className=\"form-group\">\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             className=\"form-control\"\n//             id=\"password\"\n//             required\n//             value={tutorial.password}\n//             onChange={handleInputChange}\n//             name=\"password\"\n//           />\n//         </div>\n// \t\t<div className=\"form-group\">\n//           <label htmlFor=\"role\">Role</label>\n//           <input\n//             type=\"role\"\n//             className=\"form-control\"\n//             id=\"role\"\n//             required\n//             value={tutorial.role}\n//             onChange={handleInputChange}\n//             name=\"role\"\n//           />\n//         </div>\n//         <button onClick={saveTutorial} className=\"btn btn-success\">\n//           Submit\n//         </button>\n//       </div>\n//     )}\n//   </div>\n// );\n// };\n// // export default AddTutorial;\n// import React from 'react'\n// import AddUserForm from './AddUserForm'\n// function Dashboard() {\n// \treturn (\n// \t\t<div>\n// \t\t\t<AddUserForm/>\n// \t\t</div>\n// \t)\n// }\n// export default Dashboard\n// import React, { useState } from 'react'\n// import {useDispatch} from 'react-redux'\n// import { addNewUser  } from '../actions/authActions';\n// import PropTypes from \"prop-types\";\n// function AddUserForm(users) {\n//     const dispatch = useDispatch();\n//     const [newUserName, setNewUserName] = useState('');\n// \tconst [newUserEmail, setNewUserEmail] = useState('');\n// \t// const [newUserPassword, setNewUserPassword] = useState('');\n// \tconst [newUserRole, setNewUserRole] = useState('');\n//    const handleSubmit = (e) =>{\n//     e.preventDefault();\n//     const usersList = users;\n//     //  const newUserId = usersList[usersList.length - 1].id + 1;\n//     console.log(\"your name\", usersList);\n// \t// console.log(\"\", usersList);\n//     // console.log(\"your id\", newUserId)\n//     dispatch(addNewUser({\n//       name: newUserName,\n// \t  email: newUserEmail,\n// \t  // password: newUserPassword,\n// \t  role: newUserRole\n//     }));\n//    }\n//   const handleCancel = () => {};\n//   return (\n//     <tr>\n//       {/* <td>{newUserName.id}</td> */}\n//       <td>\n//         <input\n//           value={newUserName}\n//           name=\"name\"\n//           onChange={e => setNewUserName(e.target.value)}\n//         />\n//       </td>\n// \t  <td>\n//         <input\n//           value={newUserEmail}\n//           name=\"email\"\n//           onChange={e => setNewUserEmail(e.target.value)}\n//         />\n//       </td>\n// \t  {/* <td>\n//         <input\n//           value={newUserPassword}\n//           name=\"password\"\n//           onChange={e => setNewUserPassword(e.target.value)}\n//         />\n//       </td> */}\n// \t  <td>\n//         <input\n//           value={newUserRole}\n//           name=\"role\"\n//           onChange={e => setNewUserRole(e.target.value)}\n//         />\n//       </td>\n//       <td>\n//         <button type=\"button\" className=\"btn outline\" onClick={handleCancel}>\n//           <i className=\"material-icons\">Cancel</i>\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-success btn-link\"\n//           onClick={handleSubmit}\n//         >\n//           <i className=\"material-icons\">save</i>\n//         </button>\n//       </td>\n//     </tr>\n//   );\n// }\n// AddUserForm.prototype = {\n// users: PropTypes.func.isRequired,\n// }\n// export default AddUserForm\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Dashboard.js"],"names":["connect","PropTypes","React","App","Dashboard","auth","user","marginTop","textAlign","name","email","token","role","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACE,OAAOC,KAAP,MAAkB,OAAlB;AACF,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;;;;AACA,MAAMC,SAAS,GAAG,QAAwB;AAAA,MAAvB;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,GAAuB;AAEzC,sBACC;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,SAAS,EAAE;AAAhC,KAAZ;AAAA,4BACC;AAAA,2BAAWF,IAAI,IAAIA,IAAI,CAACG,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEU;AAAA,4BAAYH,IAAI,IAAIA,IAAI,CAACI,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFV,eAGU;AAAA,4BAAYJ,IAAI,IAAIA,IAAI,CAACK,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHV,eAIU;AAAA,2BAAWL,IAAI,IAAIA,IAAI,CAACM,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJV,eAKU,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YALV;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CAjBD;;KAAMR,S;AAkBNA,SAAS,CAACS,SAAV,GAAsB;AACrBR,EAAAA,IAAI,EAAEJ,SAAS,CAACa,MAAV,CAAiBC;AADF,CAAtB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AACnCZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AADuB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,SAAzB,CAAfsourcesContent":["import { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n  import React from 'react'\nimport App from \"./App\";\n  \n// import UsersPage from \"./users/UsersPage\";\nconst Dashboard = ({ auth: { user } }) => {\n    \n\treturn (\n\t\t<div style={{ marginTop: \"5rem\", textAlign: \"center\" }}>\n\t\t\t<h1>Name: {user && user.name}</h1>\n            <h1>Email: {user && user.email}</h1>\n            <h1>token: {user && user.token}</h1>\n            <h1>role: {user && user.role}</h1>\n            <App/>\n            {/* <UsersPage/> */}\n            {/* <Listing/> */}\n            {/* <AddTutorial/> */}\n\t\t\t{/* <TutorialsList/> */}\n\t\n\t\t</div>\n        \n\t);\n};\nDashboard.propTypes = {\n\tauth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n// import React, {useEffect}from 'react'\n// import {fetchData} from '../actions/authActions';\n// import { connect } from \"react-redux\";\n// import PropTypes from \"prop-types\";\n// function Dashboard({ isLoggedIn, user, fetchData } ) {\n\n//   useEffect(() =>{\n//     fetchData();\n//   }, [])\n\n//   return (\n    \n//     <div>\n//       \t{/* <h1>Name: {user && user.name}</h1> */}\n//         <h1>Name: {fetchData && fetchData.name}</h1>\n//         <p>save</p>\n//     </div>\n//   )\n// }\n\n// const mapStateToProps = state => {\n//   console.log(\"I am state\", state);\n//   return {\n    \n//     // auth: state.auth,\n//     isLoggedIn: state.auth.isLoggedIn,\n//      user: state.auth.user,\n//     // userComments: state.comments\n//     // data: state.auth.fetch\n//     fetchData: state.data\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     fetchData: () => dispatch(fetchData()),\n//   };\n// };\n// Dashboard.propTypes = {\n// \tisLoggedIn: PropTypes.object.isRequired,\n//   user: PropTypes.object.isRequired,\n//   fetchData: PropTypes.object.isRequired,\n\n// };\n\n// // const mapStateToProps = (state) => ({\n// // \tauth: state.auth,\n// // });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\n\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import {fetchData} from '../actions/authActions';\n// import PropTypes from \"prop-types\";\n// class Dashboard extends Component {\n//   // const Dashboard = ({ auth: { user } }) => {\n\n\n//     componentDidMount() {\n      \n//         const { fetchData } = this.props\n//         fetchData();\n//     }\n\n//     render() {\n//         const mydata = this.props.data.data;\n//         mydata && console.log(\"Data .....<>\", mydata);\n//         // console.log(\"Data .....<>\", mydata);\n//         return(\n//             <div>\n//                 <h1></h1>    \n//             </div>\n//         );\n//     }\n// }\n// // Dashboard.propTypes = {\n// // \tauth: PropTypes.object.isRequired,\n// // };\n\n// // const mapStateToProps = (state) => ({\n// // \tauth: state.auth,\n// // });\n\n// Dashboard.propTypes = {\n// \tdata: PropTypes.object.isRequired,\n//   fetchData: PropTypes.object.isRequired\n// };\n\n// const mapStateToProps =(state)=> {\n//     return {\n//         data: state.fetch\n//     }\n// }\n\n// export default connect(mapStateToProps, {fetchData})(Dashboard);\n\n\n\n// // import React, {useState, useEffect} from \"react\";\n// // import { connect} from \"react-redux\";\n//  import PropTypes from \"prop-types\";\n// // import AddTutorial from \"./AddTutorial\";\n// // import TutorialsList from \"./TutorialsList\";\n// // import icon from \"../img/user.png\";\n//  import { fetchUsers } from \"actions/authActions\";\n\n\n// //  import { getFoo } from \"../../actions/FoosActions\";\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n\n// // import * as actions from '../actions';\n// class Dashboard extends Component {\n\n\n//     componentDidMount() {\n//         const { fetchUsers } = this.props\n//         fetchUsers();\n//     }\n\n//     render() {\n//         const mydata = this.props.data.data;\n//         console.log(\"Data .....<>\", mydata);\n//         return(\n//             <div>\n//                 Main     \n//             </div>\n//         );\n//     }\n// }\n// Dashboard.propTypes = {\n// \tdata: PropTypes.object.isRequired,\n//   fetchUsers: PropTypes.object.isRequired\n// };\n\n// const mapStateToProps =(state)=> {\n//     return {\n//         data: state.fetch\n//     }\n// }\n\n// export default connect(mapStateToProps, {fetchUsers})(Dashboard);\n\n// class Dashboard extends Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       errors: {},\n//     };\n//   }\n\n//   componentDidMount() {\n//     this.props.fetchUsers();\n//   }\n  \n//    render() {\n//     const { data } = this.props.foo;       \n//     return (\n\n//         <div className=\"container\">\n//             <h2>foo data fetched from API endpoint  : </h2>\n//             <ul>\n//               {data.map((foo) => {\n//                 return (\n//                     <li key={foo.name}>\n//                       {/* {foo.id} - {foo.name} */}\n//                     </li>\n//                 );\n//               })}\n//               </ul>\n//             </div>\n  \n       \n//     );\n//   }\n// }\n// Dashboard.propTypes = {\n// \tfetchUsers: PropTypes.object.isRequired,\n//   foo: PropTypes.object.isRequired,\n// };\n//   const mapStateToProps = (state) => ({\n//     foo: state.foo,\n//     errors: state.errors,\n//   });\n\n\n\n// export default connect(mapStateToProps, { fetchUsers })(Dashboard);\n\n\n// class Dashboard extends React.Component {\n//   constructor(props) {\n//       super(props);\n//       this.state = {\n//       users: [],\n//       usersAreDisplayed: true\n//       };\n//   }\n\n//   componentDidMount() {\n//       fetchUsers();\n//   }\n  \n//   render(){\n//       return (\n//            <Dashboard users={this.state.users} /> \n//       )\n//   }\n// }\n\n// function mapStateToProps(state){\n//   return { users: state.users }\n// }\n\n// function mapDispatchToProps(dispatch){\n//   return {\n//     fetchUsers:() => dispatch(fetchUsers())\n//       // fetchUsers: payload => dispatch(updateUserData(payload)),\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\n\n\n// const Dashboard = ({ auth: { user } }) => {\n    \n// \treturn (\n// \t\t<div style={{ marginTop: \"5rem\", textAlign: \"center\" }}>\n// \t\t\t<h1>Name: {user && user.name}</h1>\n//             <h1>Email: {user && user.email}</h1>\n//             <h1>token: {user && user.token}</h1>\n//             <h1>role: {user && user.role}</h1>\n//             {/* <Listing/> */}\n//             {/* <AddTutorial/> */}\n// \t\t\t{/* <TutorialsList/> */}\n\t\n// \t\t</div>\n        \n// \t);\n// };\n// Dashboard.propTypes = {\n// \tauth: PropTypes.object.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({\n// \tauth: state.auth,\n// });\n\n// export default connect(mapStateToProps)(Dashboard);\n\n\n\n// // import React, { useState, useEffect } from \"react\";\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { Link } from \"react-router-dom\";\n// // import {\n// //   retrieveTutorials,\n// //    findTutorialsByName,\n// //   deleteAllTutorials,\n// // } from \"../actions/tutorials\";\n// // const TutorialsList = () => {\n// //   const [currentTutorial, setCurrentTutorial] = useState(null);\n// //   const [currentIndex, setCurrentIndex] = useState(-1);\n\n// //   const [searchName, setSearchName] = useState(\"\");\n// //   const tutorials = useSelector(state => state.tutorials);\n// //   const dispatch = useDispatch();\n// //   useEffect(() => {\n// //     dispatch(retrieveTutorials());\n// //   }, []);\n// //   const onChangeSearchTitle = e => {\n// //     const searchName = e.target.value;\n// //     setSearchName(searchName);\n// //   };\n// //   const refreshData = () => {\n// //     setCurrentTutorial(null);\n// //     setCurrentIndex(-1);\n// //   };\n// //   const setActiveTutorial = (tutorial, index) => {\n// //     setCurrentTutorial(tutorial);\n// //     setCurrentIndex(index);\n// //   };\n// //   const removeAllTutorials = () => {\n// //     dispatch(deleteAllTutorials())\n// //       .then(response => {\n// //         console.log(response);\n// //         refreshData();\n// //       })\n// //       .catch(e => {\n// //         console.log(e);\n// //       });\n// //   };\n// //   const findByName = () => {\n// //     refreshData();\n// //     dispatch(findTutorialsByName(searchName));\n// //   };\n// //   return (\n// //     <div className=\"list row\">\n// //     <div className=\"col-md-8\">\n// //       <div className=\"input-group mb-3\">\n// //         <input\n// //           type=\"text\"\n// //           className=\"form-control\"\n// //           placeholder=\"Search by title\"\n// //           value={searchName}\n// //           onChange={onChangeSearchTitle}\n// //         />\n// //         <div className=\"input-group-append\">\n// //           <button\n// //             className=\"btn btn-outline-secondary\"\n// //             type=\"button\"\n// //             onClick={findByName}\n// //           >\n// //             Search\n// //           </button>\n// //         </div>\n// //       </div>\n// //     </div>\n// //     <div className=\"col-md-6\">\n// //       <h4>Tutorials List</h4>\n// //       <ul className=\"list-group\">\n// //         {tutorials &&\n// //           tutorials.map((tutorial, index) => (\n// //             <li\n// //               className={\n// //                 \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n// //               }\n// //               onClick={() => setActiveTutorial(tutorial, index)}\n// //               key={index}\n// //             >\n// //               {tutorial.name}\n// //             </li>\n// //           ))}\n// //       </ul>\n// //       <button\n// //         className=\"m-3 btn btn-sm btn-danger\"\n// //         onClick={removeAllTutorials}\n// //       >\n// //         Remove All\n// //       </button>\n// //     </div>\n// //     <div className=\"col-md-6\">\n// //       {currentTutorial ? (\n// //         <div>\n// //           <h4>Tutorial</h4>\n// //           <div>\n// //             <label>\n// //               <strong>Name:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.name}\n// //           </div>\n// //           <div>\n// //             <label>\n// //               <strong>Email:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.email}\n// //           </div>\n// //           <div>\n// //             <label>\n// //               <strong>Status:</strong>\n// //             </label>{\" \"}\n// //             {currentTutorial.published ? \"Published\" : \"Pending\"}\n// //           </div>\n// //           <Link\n// //             to={\"/users/\" + currentTutorial.id}\n// //             className=\"badge badge-warning\"\n// //           >\n// //             Edit\n// //           </Link>\n// //         </div>\n// //       ) : (\n// //         <div>\n// //           <br />\n// //           <p>Please click on a Tutorial...</p>\n// //         </div>\n// //       )}\n// //     </div>\n// //   </div>\n\n// //   );\n// // };\n// // export default TutorialsList;\n\n// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { createTutorial } from \"../actions/tutorials\";\n// const AddTutorial = () => {\n//   const initialTutorialState = {\n//     id: null,\n//     name: \"\",\n//     email: \"\",\n// \tpassword:\"\",\n// \trole:\"\",\n//     published: false\n//   };\n//   const [tutorial, setTutorial] = useState(initialTutorialState);\n//   const [submitted, setSubmitted] = useState(false);\n//   const dispatch = useDispatch();\n//   const handleInputChange = event => {\n//     const { name, value } = event.target;\n//     setTutorial({ ...tutorial, [name]: value });\n//   };\n//   const saveTutorial = () => {\n//     const { name, email, password, role } = tutorial;\n//     dispatch(createTutorial(name, email, password, role))\n//       .then(data => {\n//         setTutorial({\n//           id: data.id,\n//           name: data.name,\n//           email: data.email,\n// \t\t  password: data.password,\n// \t\t  role: data.role,\n//           published: data.published\n//         });\n//         setSubmitted(true);\n//         console.log(data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\n//   const newTutorial = () => {\n//     setTutorial(initialTutorialState);\n//     setSubmitted(false);\n//   };\n//   return (\n//     <div className=\"submit-form\">\n//     {submitted ? (\n//       <div>\n//         <h4>You submitted successfully!</h4>\n//         <button className=\"btn btn-success\" onClick={newTutorial}>\n//           Add\n//         </button>\n//       </div>\n//     ) : (\n//       <div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"name\">Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"name\"\n//             required\n//             value={tutorial.name}\n//             onChange={handleInputChange}\n//             name=\"name\"\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\">Email</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"email\"\n//             required\n//             value={tutorial.email}\n//             onChange={handleInputChange}\n//             name=\"email\"\n//           />\n//         </div>\n// \t\t<div className=\"form-group\">\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             className=\"form-control\"\n//             id=\"password\"\n//             required\n//             value={tutorial.password}\n//             onChange={handleInputChange}\n//             name=\"password\"\n//           />\n//         </div>\n// \t\t<div className=\"form-group\">\n//           <label htmlFor=\"role\">Role</label>\n//           <input\n//             type=\"role\"\n//             className=\"form-control\"\n//             id=\"role\"\n//             required\n//             value={tutorial.role}\n//             onChange={handleInputChange}\n//             name=\"role\"\n//           />\n//         </div>\n//         <button onClick={saveTutorial} className=\"btn btn-success\">\n//           Submit\n//         </button>\n//       </div>\n//     )}\n//   </div>\n// );\n// };\n  \n\n// // export default AddTutorial;\n// import React from 'react'\n// import AddUserForm from './AddUserForm'\n\n// function Dashboard() {\n// \treturn (\n// \t\t<div>\n// \t\t\t<AddUserForm/>\n// \t\t</div>\n// \t)\n// }\n\n// export default Dashboard\n\n\n// import React, { useState } from 'react'\n// import {useDispatch} from 'react-redux'\n// import { addNewUser  } from '../actions/authActions';\n// import PropTypes from \"prop-types\";\n\n// function AddUserForm(users) {\n//     const dispatch = useDispatch();\n//     const [newUserName, setNewUserName] = useState('');\n// \tconst [newUserEmail, setNewUserEmail] = useState('');\n// \t// const [newUserPassword, setNewUserPassword] = useState('');\n// \tconst [newUserRole, setNewUserRole] = useState('');\n//    const handleSubmit = (e) =>{\n//     e.preventDefault();\n\n//     const usersList = users;\n//     //  const newUserId = usersList[usersList.length - 1].id + 1;\n    \n//     console.log(\"your name\", usersList);\n// \t// console.log(\"\", usersList);\n//     // console.log(\"your id\", newUserId)\n\n//     dispatch(addNewUser({\n    \n//       name: newUserName,\n// \t  email: newUserEmail,\n// \t  // password: newUserPassword,\n// \t  role: newUserRole\n//     }));\n \n//    }\n\n//   const handleCancel = () => {};\n//   return (\n//     <tr>\n//       {/* <td>{newUserName.id}</td> */}\n//       <td>\n//         <input\n//           value={newUserName}\n//           name=\"name\"\n//           onChange={e => setNewUserName(e.target.value)}\n//         />\n//       </td>\n// \t  <td>\n//         <input\n//           value={newUserEmail}\n//           name=\"email\"\n//           onChange={e => setNewUserEmail(e.target.value)}\n//         />\n//       </td>\n// \t  {/* <td>\n//         <input\n//           value={newUserPassword}\n//           name=\"password\"\n//           onChange={e => setNewUserPassword(e.target.value)}\n//         />\n//       </td> */}\n// \t  <td>\n//         <input\n//           value={newUserRole}\n//           name=\"role\"\n//           onChange={e => setNewUserRole(e.target.value)}\n//         />\n//       </td>\n//       <td>\n//         <button type=\"button\" className=\"btn outline\" onClick={handleCancel}>\n//           <i className=\"material-icons\">Cancel</i>\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-success btn-link\"\n//           onClick={handleSubmit}\n//         >\n//           <i className=\"material-icons\">save</i>\n//         </button>\n//       </td>\n//     </tr>\n//   );\n// }\n// AddUserForm.prototype = {\n// users: PropTypes.func.isRequired,\n// }\n// export default AddUserForm\n\n"]},"metadata":{},"sourceType":"module"}