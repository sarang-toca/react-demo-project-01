{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Update.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams, useHistory } from \"react-router-dom\";\n// import {\n//   makeStyles,\n//   TextField,\n//   Button,\n//   CircularProgress,\n// } from \"@material-ui/core\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { getUserById, updateUserById } from \"../actions/user\";\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& > *\": {\n//       margin: theme.spacing(1),\n//       width: \"50ch\",\n//     },\n//     buttonProgress: {\n//       color: \"#fff\",\n//       position: \"absolute\",\n//       top: \"50%\",\n//       left: \"50%\",\n//       marginTop: -12,\n//       marginLeft: -12,\n//     },\n//   },\n// }));\n// function Update() {\n//   const classes = useStyles();\n//   const history = useHistory();\n//   const { id } = useParams();\n//   const dispatch = useDispatch();\n//   const loading = useSelector((state) => state.users?.loading);\n//   const  user  = useSelector((state) => state.users?.results);\n//   console.log(user)\n//   const [inputs, setInputs] = useState({\n//     name: \"\",\n//     email: \"\",\n//     role: \"\"\n//   });\n//   const [submitted, setSubmitted] = useState(false);\n//   useEffect(() => {\n//     dispatch(getUserById(id));\n//   }, [dispatch, id]);\n//   useEffect(() => {\n//     if (user) {\n//       setInputs(user);\n//     }\n//   }, [user]);\n//   function handleChange(e) {\n//     const { name, value } = e.target;\n//     setInputs((inputs) => ({ ...inputs, [name]: value }));\n//   }\n//   function handleSubmit(e) {\n//     e.preventDefault();\n//     setSubmitted(true);\n//     if (!inputs.name || !inputs.email || !inputs.role) {\n//       return;\n//     }\n//     dispatch(updateUserById(id, inputs, history));\n//   }\n//   return (\n//     <React.Fragment>\n//       <h1 style={{ textAlign: \"center\" }}>Update User</h1>\n//       <form\n//         className={classes.root}\n//         style={{\n//           display: \"flex\",\n//           justifyContent: \"center\",\n//           alignItems: \"center\",\n//           flexDirection: \"column\",\n//         }}\n//         onSubmit={handleSubmit}\n//       >\n//         <TextField\n//           name=\"name\"\n//           label=\"Name\"\n//           value={inputs.name}\n//           onChange={handleChange}\n//           fullWidth\n//         />\n//         <TextField\n//           name=\"email\"\n//           label=\"Email\"\n//           value={inputs.email}\n//           onChange={handleChange}\n//           fullWidth\n//         />\n//           <TextField\n//           name=\"role\"\n//           label=\"role\"\n//           value={inputs.role}\n//           onChange={handleChange}\n//           fullWidth\n//         />\n//         <Button\n//           disabled={loading}\n//           type=\"submit\"\n//           variant=\"contained\"\n//           color=\"primary\"\n//           onChange={submitted}\n//         >\n//           Submit\n//         </Button>\n//         {loading && (\n//           <CircularProgress size={24} className={classes.buttonProgress} />\n//         )}\n//       </form>\n//     </React.Fragment>\n//   );\n// }\n// export default Update;\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useSelector, useDispatch } from \"react-redux\"; // import {  } from \"react-redux\";\n\nimport { getUserById, updateUserById } from \"../actions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    user\n  } = useSelector(state => {\n    var _state$users;\n\n    return (_state$users = state.users) === null || _state$users === void 0 ? void 0 : _state$users.results;\n  });\n  const currentContact = user.find(res => res._id === id);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  useEffect(_id => {\n    getUserById(id);\n  }, [dispatch, id]);\n  useEffect(() => {\n    if (currentContact) {\n      setName(currentContact.name);\n      setEmail(currentContact.email);\n      setRole(currentContact.role);\n    }\n  }, [currentContact]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const checkEmail = user.find(res => res._id !== id && res.email === email && res);\n    const checkPhone = user.find(res => res._id !== id && res.role === role && res);\n\n    if (!email || !name || !role) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n\n    if (checkEmail) {\n      return toast.error(\"This email already exists!!\");\n    }\n\n    if (checkPhone) {\n      return toast.error(\"This phone number already exists!!\");\n    }\n\n    const res = {\n      _id: id,\n      name,\n      email,\n      role\n    };\n    dispatch(updateUserById(res));\n    toast.success(\"Contact updated successfully!!\");\n    history(\"/dashboard\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: currentContact ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark ml-auto my-5\",\n        onClick: () => history(\"/dashboard\"),\n        children: \"Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [\"EDIT STUDENT \", id, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 mx-auto shadow p-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Role\",\n              value: role,\n              onChange: e => setRole(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group d-flex align-items-center justify-content-between my-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              onClick: () => handleSubmit,\n              children: \"Update Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              onClick: () => history(\"/dashboard\"),\n              children: \"cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: [\"No Contact \", id, \" Found\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Update, \"IYLlN5j/l+PaMyegwGbrU8ZQ4zs=\", false, function () {\n  return [useParams, useDispatch, useHistory, useSelector];\n});\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Update.jsx"],"names":["React","useEffect","useState","useHistory","useParams","toast","useSelector","useDispatch","getUserById","updateUserById","Update","id","dispatch","history","user","state","users","results","currentContact","find","res","_id","name","setName","email","setEmail","role","setRole","handleSubmit","e","preventDefault","checkEmail","checkPhone","warning","error","success","textAlign","target","value"],"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","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useParams, useHistory } from \"react-router-dom\";\r\n// import {\r\n//   makeStyles,\r\n//   TextField,\r\n//   Button,\r\n//   CircularProgress,\r\n// } from \"@material-ui/core\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import { getUserById, updateUserById } from \"../actions/user\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     \"& > *\": {\r\n//       margin: theme.spacing(1),\r\n//       width: \"50ch\",\r\n//     },\r\n//     buttonProgress: {\r\n//       color: \"#fff\",\r\n//       position: \"absolute\",\r\n//       top: \"50%\",\r\n//       left: \"50%\",\r\n//       marginTop: -12,\r\n//       marginLeft: -12,\r\n//     },\r\n//   },\r\n// }));\r\n\r\n// function Update() {\r\n//   const classes = useStyles();\r\n//   const history = useHistory();\r\n//   const { id } = useParams();\r\n//   const dispatch = useDispatch();\r\n//   const loading = useSelector((state) => state.users?.loading);\r\n//   const  user  = useSelector((state) => state.users?.results);\r\n//   console.log(user)\r\n//   const [inputs, setInputs] = useState({\r\n//     name: \"\",\r\n//     email: \"\",\r\n//     role: \"\"\r\n//   });\r\n//   const [submitted, setSubmitted] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getUserById(id));\r\n//   }, [dispatch, id]);\r\n\r\n//   useEffect(() => {\r\n//     if (user) {\r\n//       setInputs(user);\r\n//     }\r\n//   }, [user]);\r\n\r\n//   function handleChange(e) {\r\n//     const { name, value } = e.target;\r\n//     setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n//   }\r\n\r\n//   function handleSubmit(e) {\r\n//     e.preventDefault();\r\n//     setSubmitted(true);\r\n//     if (!inputs.name || !inputs.email || !inputs.role) {\r\n//       return;\r\n//     }\r\n//     dispatch(updateUserById(id, inputs, history));\r\n//   }\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <h1 style={{ textAlign: \"center\" }}>Update User</h1>\r\n//       <form\r\n//         className={classes.root}\r\n//         style={{\r\n//           display: \"flex\",\r\n//           justifyContent: \"center\",\r\n//           alignItems: \"center\",\r\n//           flexDirection: \"column\",\r\n//         }}\r\n//         onSubmit={handleSubmit}\r\n//       >\r\n//         <TextField\r\n//           name=\"name\"\r\n//           label=\"Name\"\r\n//           value={inputs.name}\r\n//           onChange={handleChange}\r\n//           fullWidth\r\n//         />\r\n//         <TextField\r\n//           name=\"email\"\r\n//           label=\"Email\"\r\n//           value={inputs.email}\r\n//           onChange={handleChange}\r\n//           fullWidth\r\n//         />\r\n//           <TextField\r\n//           name=\"role\"\r\n//           label=\"role\"\r\n//           value={inputs.role}\r\n//           onChange={handleChange}\r\n//           fullWidth\r\n//         />\r\n//         <Button\r\n//           disabled={loading}\r\n//           type=\"submit\"\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           onChange={submitted}\r\n//         >\r\n//           Submit\r\n//         </Button>\r\n//         {loading && (\r\n//           <CircularProgress size={24} className={classes.buttonProgress} />\r\n//         )}\r\n//       </form>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\n// export default Update;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import {  } from \"react-redux\";\r\nimport { getUserById, updateUserById } from \"../actions/user\";\r\n\r\nconst Update = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n  const { user } = useSelector((state) => state.users?.results);\r\n\r\n  const currentContact = user.find((res) => res._id === id);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  useEffect((_id) => {\r\n    getUserById(id);\r\n  }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (currentContact) {\r\n      setName(currentContact.name);\r\n      setEmail(currentContact.email);\r\n      setRole(currentContact.role);\r\n    }\r\n  }, [currentContact]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const checkEmail = user.find(\r\n      (res) => res._id !== id && res.email === email && res\r\n    );\r\n\r\n    const checkPhone = user.find(\r\n      (res) => res._id !== id && res.role === role && res\r\n    );\r\n\r\n    if (!email || !name || !role) {\r\n      return toast.warning(\"Please fill in all fields!!\");\r\n    }\r\n\r\n    if (checkEmail) {\r\n      return toast.error(\"This email already exists!!\");\r\n    }\r\n    if (checkPhone) {\r\n      return toast.error(\"This phone number already exists!!\");\r\n    }\r\n\r\n   const res = {\r\n    _id:id,\r\n    name,\r\n    email,\r\n    role\r\n   } \r\n  \r\n\r\n    dispatch(updateUserById(res));\r\n    toast.success(\"Contact updated successfully!!\");\r\n    history(\"/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {currentContact ? (\r\n      <div className=\"row d-flex flex-column\">\r\n        <button\r\n          className=\"btn btn-dark ml-auto my-5\"\r\n          onClick={() => history(\"/dashboard\")}\r\n        >\r\n          Go back\r\n        </button>\r\n        <h3 style={{ textAlign: \"center\" }}>EDIT STUDENT {id} </h3>\r\n        <div className=\"col-md-6 mx-auto shadow p-5\">\r\n          <form key={id} onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                placeholder=\"Role\"\r\n                value={role}\r\n                onChange={(e) => setRole(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group d-flex align-items-center justify-content-between my-2\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => handleSubmit}\r\n              >\r\n                Update Contact\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                onClick={() => history(\"/dashboard\")}\r\n              >\r\n                cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      ) : (\r\n        <h1 className=\"text-center\">No Contact {id} Found</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n\r\n"]},"metadata":{},"sourceType":"module"}