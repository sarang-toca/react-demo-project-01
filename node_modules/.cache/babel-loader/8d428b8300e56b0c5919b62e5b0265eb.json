{"ast":null,"code":"import api from \"services/api\";\nexport function interceptor(store) {\n  api.interceptors.request.use(config => {\n    const {\n      auth: {\n        tokens: {\n          authorization_token\n        }\n      }\n    } = store.getState();\n\n    if (authorization_token) {\n      config.headers.Authorization = `Bearer ${authorization_token}`;\n    }\n\n    return config;\n  }, err => Promise.reject(err)); // api.interceptors.request.use(\n  //   config => {\n  //       const token = localStorage.getItem('token');\n  //       if (token) {\n  //           config.headers.Authorization = 'Bearer ' + token;\n  //       }\n  //       config.headers['Content-Type'] = 'application/json';\n  //       return config;\n  //   },\n  //   error => {\n  //       Promise.reject(error)\n  // });\n}","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/utils/interceptor.js"],"names":["api","interceptor","store","interceptors","request","use","config","auth","tokens","authorization_token","getState","headers","Authorization","err","Promise","reject"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjCF,EAAAA,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CACGC,MAAD,IAAY;AACR,UAAM;AACFC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AADJ,QAEFP,KAAK,CAACQ,QAAN,EAFJ;;AAIA,QAAID,mBAAJ,EAAyB;AACrBH,MAAAA,MAAM,CAACK,OAAP,CAAeC,aAAf,GAAgC,UAASH,mBAAoB,EAA7D;AACH;;AAED,WAAOH,MAAP;AACH,GAXH,EAYEO,GAAD,IAASC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAZV,EADiC,CAejC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD","sourcesContent":["import api from \"services/api\";\n\nexport function interceptor(store) {\n  api.interceptors.request.use(\n    (config) => {\n        const {\n            auth: { tokens: { authorization_token } },\n        } = store.getState();\n\n        if (authorization_token) {\n            config.headers.Authorization = `Bearer ${authorization_token}`;\n        }\n\n        return config;\n    },\n   (err) => Promise.reject(err)\n);\n  // api.interceptors.request.use(\n  //   config => {\n  //       const token = localStorage.getItem('token');\n  //       if (token) {\n  //           config.headers.Authorization = 'Bearer ' + token;\n  //       }\n  //       config.headers['Content-Type'] = 'application/json';\n  //       return config;\n  //   },\n  //   error => {\n  //       Promise.reject(error)\n  // });\n}\n\n\n"]},"metadata":{},"sourceType":"module"}