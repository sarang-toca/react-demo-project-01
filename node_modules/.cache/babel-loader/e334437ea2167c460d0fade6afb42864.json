{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/utils/privateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    auth: {\n      isLoggedIn,\n      loading\n    },\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => !isLoggedIn && loading ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 2\n  }, this);\n};\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n  component: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/utils/privateRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","PrivateRoute","component","Component","auth","isLoggedIn","loading","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAC;AACrBC,IAAAA,SAAS,EAAEC,SADU;AAErBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAFe;AAIrB,OAAGC;AAJkB,GAAD;AAAA,sBAMpB,QAAC,KAAD,OACKA,IADL;AAEC,IAAA,MAAM,EAAGC,KAAD,IAEP,CAACH,UAAD,IAAeC,OAAf,gBACC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA;AAPH;AAAA;AAAA;AAAA;AAAA,UANoB;AAAA,CAArB;;KAAMP,Y;AAsBNA,YAAY,CAACQ,SAAb,GAAyB;AACxBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UADC;AAExBT,EAAAA,SAAS,EAAEH,SAAS,CAACW,MAAV,CAAiBC;AAFJ,CAAzB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AACnCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADuB,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACY,eAAD,CAAP,CAAyBX,YAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n\tcomponent: Component,\r\n\tauth: { isLoggedIn, loading },\r\n\t\r\n\t...rest\r\n}) => (\r\n\t<Route\r\n\t\t{...rest}\r\n\t\trender={(props) =>\r\n      \r\n\t\t\t!isLoggedIn && loading ? (\r\n\t\t\t\t<Redirect to=\"/login\" />\r\n\t\t\t) : (\r\n\t\t\t\t<Component {...props} />\r\n        \r\n\t\t\t)\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t/>\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n\tauth: PropTypes.object.isRequired,\r\n\tcomponent: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}