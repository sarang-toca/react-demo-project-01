{"ast":null,"code":"import api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\";\nimport jwtDecode from \"jwt-decode\";\nexport function getUserById(id) {\n  return dispatch => {\n    dispatch(actions.getUserBegin());\n    api.get(`/v1/users/${id}`).then(function (res) {\n      console.log(\"res =>\", res.data);\n      dispatch(actions.getUserSuccess(res));\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        dispatch(actions.getUserFailure(response));\n      }\n    });\n  };\n}\nexport function getUsers() {\n  return dispatch => {\n    dispatch(actions.fetchUserBegin());\n    api.get(`/v1/users`).then(function (res) {\n      console.log(\"res =>\", res.data);\n      dispatch(actions.fetchUserSuccess(res));\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        dispatch(actions.fetchUserFailure(response));\n      }\n    });\n  };\n} //  export const getUsers = () => {\n//   return (dispatch) => {\n//     dispatch(actions.fetchUserBegin());\n//     api\n//       .get(`v1/users`)\n//       .then(function (res) {\n//         console.log(res)\n//         dispatch(actions.fetchUserSuccess(res));\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.fetchUserFailure(errorMessage));\n//         console.log(error);\n//         toast.error(error.message, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n// export const addUser = (user) => {\n//   return (dispatch) => {\n//     setTimeout(() => {\n//       dispatch(addUserAsync(user)); //we call the dispatch function inside another dispatch with help of redux thunk\n//     }, 5000);\n//   };\n// };\n//  export const addUser = (user) => {\n//   return (dispatch) => {\n//     return api.post('/v1/users',user)\n//       .then(response => {\n//         localStorage.setItem(\"token\", response.data.tokens.access.token);\n//         dispatch(actions.addUserAsync(response))\n//       })\n//       .catch(error => {\n//         throw(error);\n//       });\n//   };\n// };\n\nexport const signUp = user => {\n  return dispatch => {\n    dispatch(actions.userSignupRequest());\n    api.post(`v1/auth/register`, user).then(token => {\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userSignupSuccess(token));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userSignupFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n}; // export const loadUser = (refreshToken) => {\n//   return dispatch => {\n//     dispatch(actions.loadUserRequest());\n//       api.post('/v1/auth/refresh-tokens', refreshToken)\n//           .then(token => {\n//             console.log(refreshToken)\n//            localStorage.setItem(\"token\", token.data.access.token);\n//           //  const { sub: userId } = jwtDecode(token.data.access.token);\n//           //         console.log(userId);\n//                     // const loadUserDetails = (userId) => {\n//                     //   api.get('/v1/users'`${userId}`).then((user) => {\n//                     //     console.log(user.data);\n//                     //     dispatch(actions.loadUserSuccess(user.data));\n//                     //   });\n//                     // };\n//                     // loadUserDetails(userId);\n//           });\n//   }\n// }\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n\nexport const loadUser = refreshToken => {\n  return dispatch => {\n    dispatch(actions.loadUserRequest());\n    api.post(`/v1/auth/refresh-tokens`, refreshToken).then(token => {\n      console.log(refreshToken);\n      localStorage.setItem(\"token\", token.data.access.token);\n      localStorage.setItem(`refreshToken`, token.data.refresh.token);\n      const {\n        sub: userId\n      } = jwtDecode(token.data.access.token);\n      console.log(userId);\n\n      const loadUserDetails = userId => {\n        api.get(`/v1/users/${userId}`).then(user => {\n          console.log(user.data);\n          dispatch(actions.loadUserSuccess(user.data));\n        });\n      };\n\n      loadUserDetails(userId);\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.loadUserFailure(errorMessage));\n      toast.error(error.errorMessage, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n}; // export const fetchUsers = () => {\n//   return dispatch => {\n//     dispatch(actions.fetchUsersRequest);\n//     api\n//       .get(\"/v1/users\")\n//       .then(response => {\n//         const users = response.data;\n//         console.log(users);\n//         dispatch(actions.fetchUsersSucess(users));\n//       })\n//       .catch(error => {\n//         const errorMsg = error.message;\n//         dispatch(actions.fetchUsersFailure(errorMsg));\n//       });\n//   };\n// };\n\nexport const signIn = user => {\n  return dispatch => {\n    dispatch(actions.userLoginRequest());\n    api.post(`v1/auth/login`, user).then(token => {\n      // console.log(token)\n      localStorage.setItem(\"token\", token.data.tokens.access.token);\n      dispatch(actions.userLoginSuccess(token));\n    }).catch(error => {\n      const errorMessage = error.message;\n      dispatch(actions.userLoginFailure(errorMessage));\n      console.log(error);\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    });\n  };\n};\nexport const logOut = () => {\n  localStorage.removeItem(\"token\"); // localStorage.removeItem(\"refreshToken\");\n\n  localStorage.removeItem(\"redux\");\n  return dispatch => {\n    dispatch(actions.userLogout());\n  };\n};","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/authActions.js"],"names":["api","toast","actions","jwtDecode","getUserById","id","dispatch","getUserBegin","get","then","res","console","log","data","getUserSuccess","catch","error","response","undefined","getUserFailure","getUsers","fetchUserBegin","fetchUserSuccess","fetchUserFailure","signUp","user","userSignupRequest","post","token","localStorage","setItem","tokens","access","userSignupSuccess","errorMessage","message","userSignupFailure","position","POSITION","TOP_RIGHT","loadUser","refreshToken","loadUserRequest","refresh","sub","userId","loadUserDetails","loadUserSuccess","loadUserFailure","signIn","userLoginRequest","userLoginSuccess","userLoginFailure","logOut","removeItem","userLogout"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,OAAO,SAASC,WAAT,CAAqBC,EAArB,EAAyB;AAC9B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACJ,OAAO,CAACK,YAAR,EAAD,CAAR;AACAP,IAAAA,GAAG,CACAQ,GADH,CACQ,aAAYH,EAAG,EADvB,EAEGI,IAFH,CAEQ,UAAUC,GAAV,EAAe;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAG,CAACG,IAA1B;AACAP,MAAAA,QAAQ,CAACJ,OAAO,CAACY,cAAR,CAAuBJ,GAAvB,CAAD,CAAR;AACD,KALH,EAMGK,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAeD,KAArB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBK,QAAnB;;AACA,UAAIA,QAAQ,KAAKC,SAAjB,EAA4B;AAC1BZ,QAAAA,QAAQ,CAACJ,OAAO,CAACiB,cAAR,CAAuBF,QAAvB,CAAD,CAAR;AACD;AACF,KAZH;AAaD,GAfD;AAgBD;AAED,OAAO,SAASG,QAAT,GAAoB;AACzB,SAAQd,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACJ,OAAO,CAACmB,cAAR,EAAD,CAAR;AACArB,IAAAA,GAAG,CACAQ,GADH,CACQ,WADR,EAEGC,IAFH,CAEQ,UAAUC,GAAV,EAAe;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAG,CAACG,IAA1B;AACAP,MAAAA,QAAQ,CAACJ,OAAO,CAACoB,gBAAR,CAAyBZ,GAAzB,CAAD,CAAR;AACD,KALH,EAMGK,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAeD,KAArB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBK,QAAnB;;AACA,UAAIA,QAAQ,KAAKC,SAAjB,EAA4B;AAC1BZ,QAAAA,QAAQ,CAACJ,OAAO,CAACqB,gBAAR,CAAyBN,QAAzB,CAAD,CAAR;AACD;AACF,KAZH;AAaD,GAfD;AAgBD,C,CAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAO,MAAMO,MAAM,GAAIC,IAAD,IAAU;AAC9B,SAAQnB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACJ,OAAO,CAACwB,iBAAR,EAAD,CAAR;AACA1B,IAAAA,GAAG,CACA2B,IADH,CACS,kBADT,EAC4BF,IAD5B,EAEGhB,IAFH,CAESmB,KAAD,IAAW;AACfC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAAK,CAACf,IAAN,CAAWkB,MAAX,CAAkBC,MAAlB,CAAyBJ,KAAvD;AACAtB,MAAAA,QAAQ,CAACJ,OAAO,CAAC+B,iBAAR,CAA0BL,KAA1B,CAAD,CAAR;AAED,KANH,EAOGb,KAPH,CAOUC,KAAD,IAAW;AAChB,YAAMkB,YAAY,GAAGlB,KAAK,CAACmB,OAA3B;AACA7B,MAAAA,QAAQ,CAACJ,OAAO,CAACkC,iBAAR,CAA0BF,YAA1B,CAAD,CAAR;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAf,MAAAA,KAAK,CAACe,KAAN,CAAYA,KAAK,CAACmB,OAAlB,EAA2B;AACzBE,QAAAA,QAAQ,EAAEpC,KAAK,CAACqC,QAAN,CAAeC;AADA,OAA3B;AAGD,KAdH;AAeD,GAjBD;AAkBD,CAnBM,C,CAwBP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAO,MAAMC,QAAQ,GAAIC,YAAD,IAAkB;AACxC,SAAQnC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACJ,OAAO,CAACwC,eAAR,EAAD,CAAR;AACA1C,IAAAA,GAAG,CACA2B,IADH,CACS,yBADT,EACmCc,YADnC,EAEGhC,IAFH,CAESmB,KAAD,IAAW;AACfjB,MAAAA,OAAO,CAACC,GAAR,CAAY6B,YAAZ;AACAZ,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAAK,CAACf,IAAN,CAAWmB,MAAX,CAAkBJ,KAAhD;AACCC,MAAAA,YAAY,CAACC,OAAb,CAAsB,cAAtB,EAAqCF,KAAK,CAACf,IAAN,CAAW8B,OAAX,CAAmBf,KAAxD;AACA,YAAM;AAAEgB,QAAAA,GAAG,EAAEC;AAAP,UAAkB1C,SAAS,CAACyB,KAAK,CAACf,IAAN,CAAWmB,MAAX,CAAkBJ,KAAnB,CAAjC;AACQjB,MAAAA,OAAO,CAACC,GAAR,CAAYiC,MAAZ;;AACA,YAAMC,eAAe,GAAID,MAAD,IAAY;AAClC7C,QAAAA,GAAG,CAACQ,GAAJ,CAAS,aAAYqC,MAAO,EAA5B,EAA+BpC,IAA/B,CAAqCgB,IAAD,IAAU;AAC5Cd,UAAAA,OAAO,CAACC,GAAR,CAAYa,IAAI,CAACZ,IAAjB;AACAP,UAAAA,QAAQ,CAACJ,OAAO,CAAC6C,eAAR,CAAwBtB,IAAI,CAACZ,IAA7B,CAAD,CAAR;AACD,SAHD;AAID,OALD;;AAMAiC,MAAAA,eAAe,CAACD,MAAD,CAAf;AAEV,KAhBH,EAiBG9B,KAjBH,CAiBUC,KAAD,IAAW;AAChB,YAAMkB,YAAY,GAAGlB,KAAK,CAACmB,OAA3B;AACA7B,MAAAA,QAAQ,CAACJ,OAAO,CAAC8C,eAAR,CAAwBd,YAAxB,CAAD,CAAR;AACAjC,MAAAA,KAAK,CAACe,KAAN,CAAYA,KAAK,CAACkB,YAAlB,EAAgC;AAC9BG,QAAAA,QAAQ,EAAEpC,KAAK,CAACqC,QAAN,CAAeC;AADK,OAAhC;AAGD,KAvBH;AAwBD,GA1BD;AA2BD,CA5BM,C,CA+BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA,OAAO,MAAMU,MAAM,GAAIxB,IAAD,IAAU;AAC9B,SAAQnB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACJ,OAAO,CAACgD,gBAAR,EAAD,CAAR;AACAlD,IAAAA,GAAG,CACA2B,IADH,CACS,eADT,EACyBF,IADzB,EAEGhB,IAFH,CAESmB,KAAD,IAAW;AACf;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAAK,CAACf,IAAN,CAAWkB,MAAX,CAAkBC,MAAlB,CAAyBJ,KAAvD;AACAtB,MAAAA,QAAQ,CAACJ,OAAO,CAACiD,gBAAR,CAAyBvB,KAAzB,CAAD,CAAR;AACD,KANH,EAOGb,KAPH,CAOUC,KAAD,IAAW;AAChB,YAAMkB,YAAY,GAAGlB,KAAK,CAACmB,OAA3B;AACA7B,MAAAA,QAAQ,CAACJ,OAAO,CAACkD,gBAAR,CAAyBlB,YAAzB,CAAD,CAAR;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAf,MAAAA,KAAK,CAACe,KAAN,CAAYA,KAAK,CAACmB,OAAlB,EAA2B;AACzBE,QAAAA,QAAQ,EAAEpC,KAAK,CAACqC,QAAN,CAAeC;AADA,OAA3B;AAGD,KAdH;AAeD,GAjBD;AAkBD,CAnBM;AAwBP,OAAO,MAAMc,MAAM,GAAG,MAAM;AAC1BxB,EAAAA,YAAY,CAACyB,UAAb,CAAwB,OAAxB,EAD0B,CAE1B;;AACAzB,EAAAA,YAAY,CAACyB,UAAb,CAAwB,OAAxB;AACA,SAAQhD,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACJ,OAAO,CAACqD,UAAR,EAAD,CAAR;AACD,GAFD;AAGD,CAPM","sourcesContent":["import api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\";\nimport jwtDecode from \"jwt-decode\";\n \n\nexport function getUserById(id) {\n  return (dispatch) => {\n    dispatch(actions.getUserBegin());\n    api\n      .get(`/v1/users/${id}`)\n      .then(function (res) {\n        console.log(\"res =>\", res.data);\n        dispatch(actions.getUserSuccess(res));\n      })\n      .catch(function (error) {\n        const { response } = error;\n        console.log(\"err\", response);\n        if (response !== undefined) {\n          dispatch(actions.getUserFailure(response));\n        }\n      });\n  };\n}\n\nexport function getUsers() {\n  return (dispatch) => {\n    dispatch(actions.fetchUserBegin());\n    api\n      .get(`/v1/users`)\n      .then(function (res) {\n        console.log(\"res =>\", res.data);\n        dispatch(actions.fetchUserSuccess(res));\n      })\n      .catch(function (error) {\n        const { response } = error;\n        console.log(\"err\", response);\n        if (response !== undefined) {\n          dispatch(actions.fetchUserFailure(response));\n        }\n      });\n  };\n}\n\n  //  export const getUsers = () => {\n  //   return (dispatch) => {\n  //     dispatch(actions.fetchUserBegin());\n  //     api\n  //       .get(`v1/users`)\n  //       .then(function (res) {\n  //         console.log(res)\n  //         dispatch(actions.fetchUserSuccess(res));\n          \n  //       })\n  //       .catch((error) => {\n  //         const errorMessage = error.message;\n  //         dispatch(actions.fetchUserFailure(errorMessage));\n  //         console.log(error);\n  //         toast.error(error.message, {\n  //           position: toast.POSITION.TOP_RIGHT,\n  //         });\n  //       });\n  //   };\n  // };\n  \n  // export const addUser = (user) => {\n  //   return (dispatch) => {\n  //     setTimeout(() => {\n  //       dispatch(addUserAsync(user)); //we call the dispatch function inside another dispatch with help of redux thunk\n  //     }, 5000);\n  //   };\n  // };\n\n//  export const addUser = (user) => {\n//   return (dispatch) => {\n    \n//     return api.post('/v1/users',user)\n      \n//       .then(response => {\n//         localStorage.setItem(\"token\", response.data.tokens.access.token);\n//         dispatch(actions.addUserAsync(response))\n//       })\n//       .catch(error => {\n//         throw(error);\n//       });\n//   };\n// };\n\n\n\nexport const signUp = (user) => {\n  return (dispatch) => {\n    dispatch(actions.userSignupRequest());\n    api\n      .post(`v1/auth/register`, user)\n      .then((token) => {\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\n        dispatch(actions.userSignupSuccess(token));\n        \n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.userSignupFailure(errorMessage));\n        console.log(error);\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\n\n\n\n// export const loadUser = (refreshToken) => {\n//   return dispatch => {\n//     dispatch(actions.loadUserRequest());\n//       api.post('/v1/auth/refresh-tokens', refreshToken)\n//           .then(token => {\n//             console.log(refreshToken)\n//            localStorage.setItem(\"token\", token.data.access.token);\n\n//           //  const { sub: userId } = jwtDecode(token.data.access.token);\n//           //         console.log(userId);\n//                     // const loadUserDetails = (userId) => {\n//                     //   api.get('/v1/users'`${userId}`).then((user) => {\n//                     //     console.log(user.data);\n//                     //     dispatch(actions.loadUserSuccess(user.data));\n//                     //   });\n//                     // };\n//                     // loadUserDetails(userId);\n//           });\n//   }\n// }\n// export const loadUser = (refreshToken) => {\n//   return (dispatch) => {\n//     dispatch(actions.loadUserRequest());\n//     api\n//       .post(`/v1/auth/refresh-tokens`, refreshToken)\n//       .then((token) => {\n//         console.log(refreshToken)\n//         localStorage.setItem(\"token\", token.data.access.token);\n//         // localStorage.setItem(\"refreshToken\", token.data.refresh.token);\n//         const { sub: userId } = jwtDecode(token.data.access.token);\n//         console.log(userId);\n//         const loadUserDetails = (userId) => {\n//           api.get(`/v1/users/${userId}`).then((user) => {\n//             console.log(user.data);\n//             dispatch(actions.loadUserSuccess(user.data));\n//           });\n//         };\n//         loadUserDetails(userId);\n//       })\n//       .catch((error) => {\n//         const errorMessage = error.message;\n//         dispatch(actions.loadUserFailure(errorMessage));\n//         toast.error(error.errorMessage, {\n//           position: toast.POSITION.TOP_RIGHT,\n//         });\n//       });\n//   };\n// };\n\n\n\nexport const loadUser = (refreshToken) => {\n  return (dispatch) => {\n    dispatch(actions.loadUserRequest());\n    api\n      .post(`/v1/auth/refresh-tokens`, refreshToken)\n      .then((token) => {\n        console.log(refreshToken)\n        localStorage.setItem(\"token\", token.data.access.token);\n         localStorage.setItem(`refreshToken`, token.data.refresh.token);\n         const { sub: userId } = jwtDecode(token.data.access.token);\n                 console.log(userId);\n                 const loadUserDetails = (userId) => {\n                   api.get(`/v1/users/${userId}`).then((user) => {\n                     console.log(user.data);\n                     dispatch(actions.loadUserSuccess(user.data));\n                   });\n                 };\n                 loadUserDetails(userId);\n       \n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.loadUserFailure(errorMessage));\n        toast.error(error.errorMessage, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\n\n// export const fetchUsers = () => {\n//   return dispatch => {\n//     dispatch(actions.fetchUsersRequest);\n//     api\n//       .get(\"/v1/users\")\n//       .then(response => {\n//         const users = response.data;\n//         console.log(users);\n//         dispatch(actions.fetchUsersSucess(users));\n//       })\n//       .catch(error => {\n//         const errorMsg = error.message;\n//         dispatch(actions.fetchUsersFailure(errorMsg));\n//       });\n//   };\n// };\n\n\n\n\n\n\n\n\n\nexport const signIn = (user) => {\n  return (dispatch) => {\n    dispatch(actions.userLoginRequest());\n    api\n      .post(`v1/auth/login`, user)\n      .then((token) => {\n        // console.log(token)\n        localStorage.setItem(\"token\", token.data.tokens.access.token);\n        dispatch(actions.userLoginSuccess(token));\n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        dispatch(actions.userLoginFailure(errorMessage));\n        console.log(error);\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n};\n\n\n\n\nexport const logOut = () => {\n  localStorage.removeItem(\"token\");\n  // localStorage.removeItem(\"refreshToken\");\n  localStorage.removeItem(\"redux\");\n  return (dispatch) => {\n    dispatch(actions.userLogout());\n  };\n};\n"]},"metadata":{},"sourceType":"module"}