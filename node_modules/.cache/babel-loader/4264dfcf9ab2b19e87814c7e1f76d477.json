{"ast":null,"code":"import { CREATE_USER_REQUEST, CREATE_USER_SUCCESS, CREATE_USER_FAILURE, GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILURE, GET_USER_BYID_REQUEST, GET_USER_BYID_SUCCESS, GET_USER_BYID_FAILURE, UPDATE_USER_BYID_REQUEST, UPDATE_USER_BYID_SUCCESS, UPDATE_USER_BYID_FAILURE, DELETE_USER_BYID_REQUEST, DELETE_USER_BYID_SUCCESS, DELETE_USER_BYID_FAILURE } from \"./userActions\";\nimport api from \"../services/api\";\nexport function createUser(data, history) {\n  return dispatch => {\n    dispatch({\n      type: CREATE_USER_REQUEST\n    });\n    api.post(`/v1/users`, data).then(function (res) {\n      console.log(\"res=>\", res.data);\n      setTimeout(() => {\n        dispatch({\n          type: CREATE_USER_SUCCESS,\n          payload: res.data\n        });\n      }, 1000);\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        dispatch({\n          type: CREATE_USER_FAILURE,\n          payload: response.data\n        });\n        alert(response.data.message);\n      }\n    });\n  };\n}\nexport function getUsers() {\n  return dispatch => {\n    dispatch({\n      type: GET_USER_REQUEST\n    });\n    api.get('/v1/users').then(function (res) {\n      console.log(\"res =>\", res.data);\n      dispatch({\n        type: GET_USER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        dispatch({\n          type: GET_USER_FAILURE,\n          payload: response.data\n        });\n      }\n    });\n  };\n}\nexport function getUserById(id) {\n  return dispatch => {\n    dispatch({\n      type: GET_USER_BYID_REQUEST\n    });\n    api.get(`/v1/users/${id}`).then(function (res) {\n      console.log(\"res =>\", res.data);\n      dispatch({\n        type: GET_USER_BYID_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        dispatch({\n          type: GET_USER_BYID_FAILURE,\n          payload: response.data\n        });\n      }\n    });\n  };\n}\nexport function updateUserById(id, data, history) {\n  return dispatch => {\n    dispatch({\n      type: UPDATE_USER_BYID_REQUEST\n    });\n    api.put(`/v1/users/${id}`, data).then(function (res) {\n      console.log(\"res=>\", res.data);\n      setTimeout(() => {\n        dispatch({\n          type: UPDATE_USER_BYID_SUCCESS,\n          payload: res.data\n        });\n        history.push(\"/\");\n      }, 1000);\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        dispatch({\n          type: UPDATE_USER_BYID_FAILURE,\n          payload: response.data\n        });\n        alert(response.data.message);\n      }\n    });\n  };\n}\nexport function deleteUserById(id) {\n  return dispatch => {\n    dispatch({\n      type: DELETE_USER_BYID_REQUEST\n    });\n    api.delete(`/v1/users/${id}`).then(function (res) {\n      console.log(\"res =>\", res.data);\n      dispatch({\n        type: DELETE_USER_BYID_SUCCESS,\n        payload: id\n      });\n    }).catch(function (error) {\n      const {\n        response\n      } = error;\n      console.log(\"err\", response);\n\n      if (response !== undefined) {\n        dispatch({\n          type: DELETE_USER_BYID_FAILURE,\n          payload: response.data\n        });\n        alert(response.data.message);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/actions/users.js"],"names":["CREATE_USER_REQUEST","CREATE_USER_SUCCESS","CREATE_USER_FAILURE","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","GET_USER_BYID_REQUEST","GET_USER_BYID_SUCCESS","GET_USER_BYID_FAILURE","UPDATE_USER_BYID_REQUEST","UPDATE_USER_BYID_SUCCESS","UPDATE_USER_BYID_FAILURE","DELETE_USER_BYID_REQUEST","DELETE_USER_BYID_SUCCESS","DELETE_USER_BYID_FAILURE","api","createUser","data","history","dispatch","type","post","then","res","console","log","setTimeout","payload","catch","error","response","undefined","alert","message","getUsers","get","getUserById","id","updateUserById","put","push","deleteUserById","delete"],"mappings":"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","sourcesContent":["import {\n    CREATE_USER_REQUEST,\n    CREATE_USER_SUCCESS,\n    CREATE_USER_FAILURE,\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    GET_USER_FAILURE,\n    GET_USER_BYID_REQUEST,\n    GET_USER_BYID_SUCCESS,\n    GET_USER_BYID_FAILURE,\n    UPDATE_USER_BYID_REQUEST,\n    UPDATE_USER_BYID_SUCCESS,\n    UPDATE_USER_BYID_FAILURE,\n    DELETE_USER_BYID_REQUEST,\n    DELETE_USER_BYID_SUCCESS,\n    DELETE_USER_BYID_FAILURE,\n  } from \"./userActions\";\n  import api from \"../services/api\";\n\n  \n  export function createUser(data, history) {\n    return (dispatch) => {\n      dispatch({ type: CREATE_USER_REQUEST });\n      api\n        .post(`/v1/users`, data)\n        .then(function (res) {\n          console.log(\"res=>\", res.data);\n          setTimeout(() => {\n            dispatch({\n              type: CREATE_USER_SUCCESS,\n              payload: res.data,\n            });\n         \n          }, 1000);\n        })\n        .catch(function (error) {\n          const { response } = error;\n          console.log(\"err\", response);\n          if (response !== undefined) {\n            dispatch({\n              type: CREATE_USER_FAILURE,\n              payload: response.data,\n            });\n            alert(response.data.message);\n          }\n        });\n    };\n  }\n  \n  export function getUsers() {\n    return (dispatch) => {\n      dispatch({ type: GET_USER_REQUEST });\n      api\n        .get('/v1/users')\n        .then(function (res) {\n          console.log(\"res =>\", res.data);\n          dispatch({\n            type: GET_USER_SUCCESS,\n            payload: res.data,\n          });\n        })\n        .catch(function (error) {\n          const { response } = error;\n          console.log(\"err\", response);\n          if (response !== undefined) {\n            dispatch({\n              type: GET_USER_FAILURE,\n              payload: response.data,\n            });\n          }\n        });\n    };\n  }\n  \n  export function getUserById(id) {\n    return (dispatch) => {\n      dispatch({ type: GET_USER_BYID_REQUEST });\n      api\n        .get(`/v1/users/${id}`)\n        .then(function (res) {\n          console.log(\"res =>\", res.data);\n          dispatch({\n            type: GET_USER_BYID_SUCCESS,\n            payload: res.data,\n          });\n        })\n        .catch(function (error) {\n          const { response } = error;\n          console.log(\"err\", response);\n          if (response !== undefined) {\n            dispatch({\n              type: GET_USER_BYID_FAILURE,\n              payload: response.data,\n            });\n          }\n        });\n    };\n  }\n  \n  export function updateUserById(id, data, history) {\n    return (dispatch) => {\n      dispatch({ type: UPDATE_USER_BYID_REQUEST });\n      api\n        .put(`/v1/users/${id}`, data)\n        .then(function (res) {\n          console.log(\"res=>\", res.data);\n          setTimeout(() => {\n            dispatch({\n              type: UPDATE_USER_BYID_SUCCESS,\n              payload: res.data,\n            });\n            history.push(\"/\");\n          }, 1000);\n        })\n        .catch(function (error) {\n          const { response } = error;\n          console.log(\"err\", response);\n          if (response !== undefined) {\n            dispatch({\n              type: UPDATE_USER_BYID_FAILURE,\n              payload: response.data,\n            });\n            alert(response.data.message);\n          }\n        });\n    };\n  }\n  \n  export function deleteUserById(id) {\n    return (dispatch) => {\n      dispatch({ type: DELETE_USER_BYID_REQUEST });\n      api\n        .delete(`/v1/users/${id}`)\n        .then(function (res) {\n          console.log(\"res =>\", res.data);\n          dispatch({\n            type: DELETE_USER_BYID_SUCCESS,\n            payload: id,\n          });\n        })\n        .catch(function (error) {\n          const { response } = error;\n          console.log(\"err\", response);\n          if (response !== undefined) {\n            dispatch({\n              type: DELETE_USER_BYID_FAILURE,\n              payload: response.data,\n            });\n            alert(response.data.message);\n          }\n        });\n    };\n  }"]},"metadata":{},"sourceType":"module"}