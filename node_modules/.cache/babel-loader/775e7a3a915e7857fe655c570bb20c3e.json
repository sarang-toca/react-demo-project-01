{"ast":null,"code":"var _jsxFileName = \"/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.js\",\n    _s = $RefreshSig$();\n\n// // import React, { useState } from \"react\";\n// // import { useDispatch } from \"react-redux\";\n// // import { Link, useHistory } from \"react-router-dom\";\n// // import { Form, Button, Label, Input, FormGroup } from \"reactstrap\";\n// // // import { v4 as uuid } from \"uuid\";\n// // import { addUser } from \"../actions/authActions\";\n// // const AddUser = () => {\n// //   const [name, setName] = useState();\n// //   const [email, setEmail] = useState();\n// //   const [password, setPassword] = useState();\n// //   const [role, setRole] = useState();\n// //   const dispatch = useDispatch();\n// //   const nameChangeHandler = (event) => {\n// //     setName({ name: event.target.value });\n// //     setEmail({  email: event.target.value });\n// //     setPassword({  password: event.target.value });\n// //     setRole({  role: event.target.value });\n// //   };\n// //   const history = useHistory();\n// //   const onSubmitHandler = () => {\n// //     dispatch(addUser(name,email,password,role));\n// //     history.push(\"/\");\n// //   };\n// //   return (\n// //     <Form onSubmit={onSubmitHandler}>\n// //       <FormGroup>\n// //         <Label>Name:</Label>\n// //         <Input\n// //           type=\"text\"\n// //           onChange={nameChangeHandler}\n// //           name=\"name\"\n// //           placeholder=\"Enter Name\"\n// //         />\n// //       </FormGroup>\n// //       <FormGroup>\n// //         <Label>Email:</Label>\n// //         <Input\n// //           type=\"text\"\n// //           onChange={nameChangeHandler}\n// //           name=\"email\"\n// //           placeholder=\"Enter Email\"\n// //         />\n// //       </FormGroup>\n// //       <FormGroup>\n// //         <Label>Password:</Label>\n// //         <Input\n// //           type=\"password\"\n// //           onChange={nameChangeHandler}\n// //           name=\"password\"\n// //           placeholder=\"Enter Password\"\n// //         />\n// //       </FormGroup>\n// //       <FormGroup>\n// //         <Label>Role:</Label>\n// //         <Input\n// //           type=\"text\"\n// //           onChange={nameChangeHandler}\n// //           name=\"role\"\n// //           placeholder=\"Enter Role\"\n// //         />\n// //       </FormGroup>\n// //       <Button type=\"submit\" color=\"primary\" style={{ marginTop: \"5px\" }}>\n// //         Submit\n// //       </Button>\n// //       <Link\n// //         to=\"/\"\n// //         className=\"btn btn-danger\"\n// //         style={{ marginLeft: \"5px\", marginTop: \"5px\" }}\n// //       >\n// //         Cancel\n// //       </Link>\n// //     </Form>\n// //   );\n// // };\n// // export default AddUser;\n// // import React, { useEffect, useState } from \"react\";\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { addTransaction } from \"../actions/user\";\n// // export default function CreateTransaction() {\n// //     const [id, setId] = useState(\"\");\n// //     const [name, setName] = useState(\"\");\n// //   const [email, setEmail] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n// //   const [role, setRole] = useState(\"\");\n// //   const dispatch = useDispatch();\n// //   const addTransactionResult = useSelector((state) => state.TransactionReducer);\n// //   const handleSubmit = (e) => {\n// //     e.preventDefault();\n// //     dispatch(\n// //       addTransaction({\n// //           id: id,\n// //         name: name,\n// //         email: email,\n// //         password: password,\n// //         role: role,\n// //       })\n// //     );\n// //   };\n// //   useEffect(() => {\n// //     if (addTransactionResult) {\n// //       dispatch(addTransaction());\n// //       setId(\"\");\n// //       setName(\"\");\n// //       setEmail(\"\");\n// //       setPassword(\"\");\n// //       setRole(\"\");\n// //     }\n// //   }, [addTransactionResult, dispatch]);\n// //   return (\n// //     <div className=\"antialiased\">\n// //       <p className=\"font-bold text-base mb-3\">Create Transaction</p>\n// //       <form>\n// //         <input\n// //           className=\"form-input block w-max outline-none p-1 my-1 border\"\n// //           placeholder=\"name customer\"\n// //           type=\"text\"\n// //           value={name}\n// //           onChange={(e) => setName(e.target.value)}\n// //         />\n// //         <input\n// //           className=\"form-input block w-max outline-none p-1 my-1 border\"\n// //           placeholder=\"email\"\n// //           type=\"text\"\n// //           value={email}\n// //           onChange={(e) => setEmail(e.target.value)}\n// //         />\n// //         <input\n// //           className=\"form-input block w-max outline-none p-1 my-1 border\"\n// //           placeholder=\"Sold Out\"\n// //           type=\"password\"\n// //           value={password}\n// //           onChange={(e) => setPassword(e.target.value)}\n// //         />\n// //         <input\n// //           className=\"form-input block w-max outline-none p-1 my-1 border\"\n// //           placeholder=\"Sold Out\"\n// //           type=\"text\"\n// //           value={role}\n// //           onChange={(e) => setRole(e.target.value)}\n// //         />\n// //         <button\n// //           type=\"submit\"\n// //           className=\"rounded-lg my-4 w-32 text-white text-lg font-bold bg-sky-600 hover:bg-sky-700\"\n// //           onClick={(e) => handleSubmit(e)}\n// //         >\n// //           Create\n// //         </button>\n// //       </form>\n// //     </div>\n// //   );\n// // }\n// import React, { useState, useEffect } from \"react\";\n// // import { Link } from \"react-router-dom\";\n// import {\n//   makeStyles,\n//   useTheme,\n//   AppBar,\n//   Toolbar,\n//   Typography,\n//   Button,\n//   TableContainer,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Dialog,\n//   DialogActions,\n//   DialogContent,\n//   DialogContentText,\n//   useMediaQuery,\n// } from \"@material-ui/core\";\n// import {\n//   Add as AddIcon,\n//   // Edit as EditIcon,\n//   Delete as DeleteIcon,\n// } from \"@material-ui/icons\";\n// import { useSelector, useDispatch } from \"react-redux\";\n//  import { getUsers, deleteUserById } from \"../actions/user\";\n// // import Create from \"./Create\";\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   menuButton: {\n//     marginRight: theme.spacing(2),\n//   },\n//   title: {\n//     flexGrow: 1,\n//     textAlign: \"center\",\n//   },\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   table: {\n//     flex: 1,\n//     alignContent: \"center\",\n//     justifyContent: \"center\",\n//   },\n// }));\n// function Read() {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n//   const dispatch = useDispatch();\n//   const loading = useSelector((state) => state.users?.loading);\n//   const users = useSelector((state) => state.users?.items);\n//   const [userId, setUserId] = useState(\"\");\n//   const [open, setOpen] = useState(false);\n//   useEffect(() => {\n//     dispatch(getUsers());\n//   }, []);\n//   useEffect(() => {\n//     console.log('loading', loading)\n//     if (!loading) {\n//       setOpen(loading);\n//     }\n//   }, [loading]);\n//   const openDialog = (_id) => {\n//     setOpen(true);\n//     setUserId(_id);\n//   };\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n//   const confirmDelete = () => {\n//     dispatch(deleteUserById(userId));\n//   };\n//   return (\n//     <React.Fragment>\n//       <AppBar position=\"static\">\n//         <Toolbar>\n//           <Typography variant=\"h6\" className={classes.title}>\n//             ReactJs CRUD App With React Redux Thunk\n//           </Typography>\n//         </Toolbar>\n//       </AppBar>\n//         {/* <Create/> */}\n//         <Button\n//           variant=\"contained\"\n//           color=\"primary\"\n//           className={classes.button}\n//           startIcon={<AddIcon />}\n//         >\n//           Create User\n//         </Button>\n//       <TableContainer component={Paper}>\n//         <Table className={classes.table} aria-label=\"simple table\">\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>S.No</TableCell>\n//               <TableCell>Name</TableCell>\n//               <TableCell>Email</TableCell>\n//               <TableCell>Role</TableCell>\n//               <TableCell>CreatedAt</TableCell>\n//               <TableCell>UpdatedAt</TableCell>\n//               <TableCell>Update</TableCell>\n//               <TableCell>Delete</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {users.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell component=\"th\" scope=\"row\">\n//                   {index + 1}\n//                 </TableCell>\n//                 <TableCell>{row.name}</TableCell>\n//                 <TableCell>{row.email}</TableCell>\n//                 <TableCell>{row.role}</TableCell>\n//                 <TableCell>\n//                   {/* <Link to={`/update/${row._id}`}>\n//                     <EditIcon>edit</EditIcon>\n//                   </Link> */}\n//                 </TableCell>\n//                 <TableCell>\n//                   <DeleteIcon onClick={() => openDialog(row._id)}>\n//                     delete\n//                   </DeleteIcon>\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//       {open && (\n//         <Dialog\n//           fullScreen={fullScreen}\n//           open={open}\n//           onClose={handleClose}\n//           aria-labelledby=\"Delete User\"\n//         >\n//           <DialogContent style={{ width: 300 }}>\n//             <DialogContentText>Are you sure?</DialogContentText>\n//           </DialogContent>\n//           <DialogActions>\n//             <Button autoFocus onClick={handleClose} color=\"primary\">\n//               Cancel\n//             </Button>\n//             <Button onClick={confirmDelete} color=\"primary\" autoFocus>\n//               Delete\n//             </Button>\n//           </DialogActions>\n//         </Dialog>\n//       )}\n//     </React.Fragment>\n//   );\n// }\n// export default Read;\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getUsers } from '../actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Read(_ref) {\n  _s();\n\n  let {\n    userData,\n    getUsers\n  } = _ref;\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return userData.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this) : userData.error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: userData.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-12 btn btn-info\",\n        children: \"How to Build an Application Using Reactjs and Redux\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData && userData.users && userData.users.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        class: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: userData.users.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this)]\n          }, item.Id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Read, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Read;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: () => dispatch(getUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Read);\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["/home/tops/Reactjs Project/react-redux-sagas-boilerplate/src/components/Read.js"],"names":["React","useEffect","connect","getUsers","Read","userData","loading","error","users","map","user","email","item","name","role","Id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappingsgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;;AACA,SAASC,IAAT,OAAuC;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,QAAF;AAAYF,IAAAA;AAAZ,GAAwB;AACrCF,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOE,QAAQ,CAACC,OAAT,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GAEHD,QAAQ,CAACE,KAAT,gBACF;AAAA,cAAKF,QAAQ,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,UADE,gBAGF;AAAA,4BACC;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA,6BACD;AAAK,QAAA,KAAK,EAAC,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,YADD,eAME;AAAA,gBACGF,QAAQ,IACPA,QAAQ,CAACG,KADV,IAECH,QAAQ,CAACG,KAAT,CAAeC,GAAf,CAAmBC,IAAI,iBAAI;AAAA,kBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cAA3B;AAHJ;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAO,MAAA,KAAK,EAAC,OAAb;AAAA,8BACU;AAAO,QAAA,KAAK,EAAC,YAAb;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADV,eASU;AAAA,kBACMN,QAAQ,CAACG,KAAT,CAAeC,GAAf,CAAmBG,IAAI,IAAI;AACzB,8BAAO;AAAA,oCACH;AAAA,wBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,oBADG,eAEH;AAAA,wBAAKD,IAAI,CAACD;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFG,eAGH;AAAA,wBAAKC,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,oBAHG;AAAA,aAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,kBAAP;AAMH,SAPC;AADN;AAAA;AAAA;AAAA;AAAA,cATV;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UALF;AAsCD;;GA1CQX,I;;KAAAA,I;;AA4CT,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLZ,IAAAA,QAAQ,EAAEY,KAAK,CAACP;AADX,GAAP;AAGD,CAJD;;AAMA,MAAMQ,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLhB,IAAAA,QAAQ,EAAE,MAAMgB,QAAQ,CAAChB,QAAQ,EAAT;AADnB,GAAP;AAGD,CAJD;;AAMA,eAAeD,OAAO,CACpBc,eADoB,EAEpBE,kBAFoB,CAAP,CAGbd,IAHa,CAAf","sourcesContent":["// // import React, { useState } from \"react\";\n// // import { useDispatch } from \"react-redux\";\n// // import { Link, useHistory } from \"react-router-dom\";\n// // import { Form, Button, Label, Input, FormGroup } from \"reactstrap\";\n// // // import { v4 as uuid } from \"uuid\";\n// // import { addUser } from \"../actions/authActions\";\n// // const AddUser = () => {\n    \n// //   const [name, setName] = useState();\n// //   const [email, setEmail] = useState();\n// //   const [password, setPassword] = useState();\n// //   const [role, setRole] = useState();\n// //   const dispatch = useDispatch();\n// //   const nameChangeHandler = (event) => {\n// //     setName({ name: event.target.value });\n// //     setEmail({  email: event.target.value });\n// //     setPassword({  password: event.target.value });\n// //     setRole({  role: event.target.value });\n// //   };\n\n// //   const history = useHistory();\n// //   const onSubmitHandler = () => {\n// //     dispatch(addUser(name,email,password,role));\n    \n// //     history.push(\"/\");\n// //   };\n// //   return (\n// //     <Form onSubmit={onSubmitHandler}>\n// //       <FormGroup>\n// //         <Label>Name:</Label>\n// //         <Input\n// //           type=\"text\"\n// //           onChange={nameChangeHandler}\n// //           name=\"name\"\n// //           placeholder=\"Enter Name\"\n// //         />\n// //       </FormGroup>\n// //       <FormGroup>\n// //         <Label>Email:</Label>\n// //         <Input\n// //           type=\"text\"\n// //           onChange={nameChangeHandler}\n// //           name=\"email\"\n// //           placeholder=\"Enter Email\"\n// //         />\n// //       </FormGroup>\n// //       <FormGroup>\n// //         <Label>Password:</Label>\n// //         <Input\n// //           type=\"password\"\n// //           onChange={nameChangeHandler}\n// //           name=\"password\"\n// //           placeholder=\"Enter Password\"\n// //         />\n// //       </FormGroup>\n// //       <FormGroup>\n// //         <Label>Role:</Label>\n// //         <Input\n// //           type=\"text\"\n// //           onChange={nameChangeHandler}\n// //           name=\"role\"\n// //           placeholder=\"Enter Role\"\n// //         />\n// //       </FormGroup>\n// //       <Button type=\"submit\" color=\"primary\" style={{ marginTop: \"5px\" }}>\n// //         Submit\n// //       </Button>\n// //       <Link\n// //         to=\"/\"\n// //         className=\"btn btn-danger\"\n// //         style={{ marginLeft: \"5px\", marginTop: \"5px\" }}\n// //       >\n// //         Cancel\n// //       </Link>\n// //     </Form>\n// //   );\n// // };\n\n// // export default AddUser;\n\n\n// // import React, { useEffect, useState } from \"react\";\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { addTransaction } from \"../actions/user\";\n\n// // export default function CreateTransaction() {\n// //     const [id, setId] = useState(\"\");\n// //     const [name, setName] = useState(\"\");\n// //   const [email, setEmail] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n// //   const [role, setRole] = useState(\"\");\n// //   const dispatch = useDispatch();\n// //   const addTransactionResult = useSelector((state) => state.TransactionReducer);\n\n// //   const handleSubmit = (e) => {\n// //     e.preventDefault();\n// //     dispatch(\n// //       addTransaction({\n// //           id: id,\n// //         name: name,\n// //         email: email,\n// //         password: password,\n// //         role: role,\n// //       })\n// //     );\n// //   };\n\n// //   useEffect(() => {\n// //     if (addTransactionResult) {\n// //       dispatch(addTransaction());\n// //       setId(\"\");\n// //       setName(\"\");\n// //       setEmail(\"\");\n// //       setPassword(\"\");\n// //       setRole(\"\");\n// //     }\n// //   }, [addTransactionResult, dispatch]);\n\n// //   return (\n// //     <div className=\"antialiased\">\n// //       <p className=\"font-bold text-base mb-3\">Create Transaction</p>\n// //       <form>\n// //         <input\n// //           className=\"form-input block w-max outline-none p-1 my-1 border\"\n// //           placeholder=\"name customer\"\n// //           type=\"text\"\n// //           value={name}\n// //           onChange={(e) => setName(e.target.value)}\n// //         />\n// //         <input\n// //           className=\"form-input block w-max outline-none p-1 my-1 border\"\n// //           placeholder=\"email\"\n// //           type=\"text\"\n// //           value={email}\n// //           onChange={(e) => setEmail(e.target.value)}\n// //         />\n// //         <input\n// //           className=\"form-input block w-max outline-none p-1 my-1 border\"\n// //           placeholder=\"Sold Out\"\n// //           type=\"password\"\n// //           value={password}\n// //           onChange={(e) => setPassword(e.target.value)}\n// //         />\n// //         <input\n// //           className=\"form-input block w-max outline-none p-1 my-1 border\"\n// //           placeholder=\"Sold Out\"\n// //           type=\"text\"\n// //           value={role}\n// //           onChange={(e) => setRole(e.target.value)}\n// //         />\n// //         <button\n// //           type=\"submit\"\n// //           className=\"rounded-lg my-4 w-32 text-white text-lg font-bold bg-sky-600 hover:bg-sky-700\"\n// //           onClick={(e) => handleSubmit(e)}\n// //         >\n// //           Create\n// //         </button>\n// //       </form>\n// //     </div>\n// //   );\n// // }\n\n\n// import React, { useState, useEffect } from \"react\";\n// // import { Link } from \"react-router-dom\";\n// import {\n//   makeStyles,\n//   useTheme,\n//   AppBar,\n//   Toolbar,\n//   Typography,\n//   Button,\n//   TableContainer,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Dialog,\n//   DialogActions,\n//   DialogContent,\n//   DialogContentText,\n//   useMediaQuery,\n// } from \"@material-ui/core\";\n// import {\n//   Add as AddIcon,\n//   // Edit as EditIcon,\n//   Delete as DeleteIcon,\n// } from \"@material-ui/icons\";\n// import { useSelector, useDispatch } from \"react-redux\";\n//  import { getUsers, deleteUserById } from \"../actions/user\";\n// // import Create from \"./Create\";\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   menuButton: {\n//     marginRight: theme.spacing(2),\n//   },\n//   title: {\n//     flexGrow: 1,\n//     textAlign: \"center\",\n//   },\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   table: {\n//     flex: 1,\n//     alignContent: \"center\",\n//     justifyContent: \"center\",\n//   },\n// }));\n\n// function Read() {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n//   const dispatch = useDispatch();\n//   const loading = useSelector((state) => state.users?.loading);\n//   const users = useSelector((state) => state.users?.items);\n//   const [userId, setUserId] = useState(\"\");\n//   const [open, setOpen] = useState(false);\n\n//   useEffect(() => {\n//     dispatch(getUsers());\n//   }, []);\n\n//   useEffect(() => {\n//     console.log('loading', loading)\n//     if (!loading) {\n//       setOpen(loading);\n//     }\n//   }, [loading]);\n\n//   const openDialog = (_id) => {\n//     setOpen(true);\n//     setUserId(_id);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n\n//   const confirmDelete = () => {\n//     dispatch(deleteUserById(userId));\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <AppBar position=\"static\">\n//         <Toolbar>\n//           <Typography variant=\"h6\" className={classes.title}>\n//             ReactJs CRUD App With React Redux Thunk\n//           </Typography>\n//         </Toolbar>\n//       </AppBar>\n     \n//         {/* <Create/> */}\n//         <Button\n//           variant=\"contained\"\n//           color=\"primary\"\n//           className={classes.button}\n//           startIcon={<AddIcon />}\n//         >\n//           Create User\n//         </Button>\n      \n//       <TableContainer component={Paper}>\n//         <Table className={classes.table} aria-label=\"simple table\">\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>S.No</TableCell>\n//               <TableCell>Name</TableCell>\n//               <TableCell>Email</TableCell>\n//               <TableCell>Role</TableCell>\n//               <TableCell>CreatedAt</TableCell>\n//               <TableCell>UpdatedAt</TableCell>\n//               <TableCell>Update</TableCell>\n//               <TableCell>Delete</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {users.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell component=\"th\" scope=\"row\">\n//                   {index + 1}\n//                 </TableCell>\n//                 <TableCell>{row.name}</TableCell>\n//                 <TableCell>{row.email}</TableCell>\n//                 <TableCell>{row.role}</TableCell>\n              \n//                 <TableCell>\n//                   {/* <Link to={`/update/${row._id}`}>\n//                     <EditIcon>edit</EditIcon>\n//                   </Link> */}\n//                 </TableCell>\n//                 <TableCell>\n//                   <DeleteIcon onClick={() => openDialog(row._id)}>\n//                     delete\n//                   </DeleteIcon>\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//       {open && (\n//         <Dialog\n//           fullScreen={fullScreen}\n//           open={open}\n//           onClose={handleClose}\n//           aria-labelledby=\"Delete User\"\n//         >\n//           <DialogContent style={{ width: 300 }}>\n//             <DialogContentText>Are you sure?</DialogContentText>\n//           </DialogContent>\n//           <DialogActions>\n//             <Button autoFocus onClick={handleClose} color=\"primary\">\n//               Cancel\n//             </Button>\n//             <Button onClick={confirmDelete} color=\"primary\" autoFocus>\n//               Delete\n//             </Button>\n//           </DialogActions>\n//         </Dialog>\n//       )}\n//     </React.Fragment>\n//   );\n// }\n\n// export default Read;\n\n\nimport React, { useEffect } from 'react'  \nimport { connect } from 'react-redux'  \nimport { getUsers } from '../actions/user'  \nfunction Read ({ userData, getUsers }) {  \n  useEffect(() => {  \n    getUsers()  \n  }, [])  \n  return userData.loading ? (  \n    <h2>Loading</h2>  \n  ) : userData.error ? (  \n    <h2>{userData.error}</h2>  \n  ) : (  \n    <div>  \n     <div class=\"row\">    \n    <div class=\"col-sm-12 btn btn-info\">    \n     How to Build an Application Using Reactjs and Redux    \n    </div>    \n  </div>   \n      <div>  \n        {userData &&  \n          userData.users &&  \n          userData.users.map(user => <p>{user.email}</p>)}  \n      </div>  \n      <table class=\"table\" >    \n                <thead class=\"thead-dark\">    \n                    <tr>    \n                        <th scope=\"col\">Name</th>    \n                        <th scope=\"col\">Email</th>    \n                        <th scope=\"col\">Role</th>    \n                           \n                    </tr>    \n                </thead>    \n                <tbody>    \n                    { userData.users.map(item => {    \n                        return <tr key={item.Id}>    \n                            <td>{item.name}</td>    \n                            <td>{item.email}</td>    \n                            <td>{item.role}</td>        \n                                \n                        </tr>    \n                    })}    \n                </tbody>    \n            </table>    \n    </div>  \n  )  \n}  \n  \nconst mapStateToProps = state => {  \n  return {  \n    userData: state.user  \n  }  \n}  \n  \nconst mapDispatchToProps = dispatch => {  \n  return {  \n    getUsers: () => dispatch(getUsers())  \n  }  \n}  \n  \nexport default connect(  \n  mapStateToProps,  \n  mapDispatchToProps  \n)(Read)  \n"]},"metadata":{},"sourceType":"module"}